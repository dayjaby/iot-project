/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   litex_vexriscv.dts.pre.tmp
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /chosen
 *   2   /memory@40000000
 *   3   /cpus
 *   4   /cpus/cpu@0
 *   5   /soc
 *   6   /soc/clock-outputs
 *   7   /soc/clock-outputs/clock-controller@0
 *   8   /soc/clock-outputs/clock-controller@1
 *   9   /soc/clock@82005000
 *   10  /soc/prbs@e0006800
 *   11  /soc/interrupt-controller@bc0
 *   12  /soc/serial@f0002000
 *   13  /soc/timer@f0002800
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_cpus) fn(DT_N_S_soc) fn(DT_N_S_memory_40000000)

/* Node's dependency ordinal: */
#define DT_N_ORD 0

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /chosen */ \
	2, /* /memory@40000000 */ \
	3, /* /cpus */ \
	5, /* /soc */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_litex_vexriscv DT_N

/* Special property macros: */
#define DT_N_REG_NUM 0
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_litex_vexriscv 1
#define DT_N_STATUS_okay 1

/* Generic property macros: */
#define DT_N_P_compatible {"litex,vexriscv"}
#define DT_N_P_compatible_IDX_0 "litex,vexriscv"
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N
#define DT_N_S_chosen_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 1

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Special property macros: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /memory@40000000
 *
 * Node identifier: DT_N_S_memory_40000000
 */

/* Node parent (/) identifier: */
#define DT_N_S_memory_40000000_PARENT DT_N
#define DT_N_S_memory_40000000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_40000000_ORD 2

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_40000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_40000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_40000000_EXISTS 1
#define DT_N_NODELABEL_ram0 DT_N_S_memory_40000000

/* Special property macros: */
#define DT_N_S_memory_40000000_REG_NUM 1
#define DT_N_S_memory_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_memory_40000000_REG_IDX_0_VAL_SIZE 268435456 /* 0x10000000 */
#define DT_N_S_memory_40000000_IRQ_NUM 0
#define DT_N_S_memory_40000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_memory_40000000_P_reg {1073741824 /* 0x40000000 */, 268435456 /* 0x10000000 */}
#define DT_N_S_memory_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_memory_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_40000000_P_reg_IDX_1 268435456
#define DT_N_S_memory_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_40000000_P_reg_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 3

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	4, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Special property macros: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 */

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 4

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	3, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_spinalhdl_vexriscv DT_N_S_cpus_S_cpu_0
#define DT_N_INST_0_riscv              DT_N_S_cpus_S_cpu_0

/* Special property macros: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_spinalhdl_vexriscv 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_riscv 1
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_compatible {"spinalhdl,vexriscv", "riscv"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "spinalhdl,vexriscv"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_1 "riscv"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 2
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_status "okay"
#define DT_N_S_cpus_S_cpu_0_P_status_ENUM_IDX 1
#define DT_N_S_cpus_S_cpu_0_P_status_ENUM_TOKEN okay
#define DT_N_S_cpus_S_cpu_0_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_cpus_S_cpu_0_P_status_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_bc0) fn(DT_N_S_soc_S_serial_f0002000) fn(DT_N_S_soc_S_timer_f0002800) fn(DT_N_S_soc_S_prbs_e0006800) fn(DT_N_S_soc_S_clock_outputs) fn(DT_N_S_soc_S_clock_82005000)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 5

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	6, /* /soc/clock-outputs */ \
	9, /* /soc/clock@82005000 */ \
	10, /* /soc/prbs@e0006800 */ \
	11, /* /soc/interrupt-controller@bc0 */ \
	12, /* /soc/serial@f0002000 */ \
	13, /* /soc/timer@f0002800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_1_litex_vexriscv DT_N_S_soc

/* Special property macros: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_litex_vexriscv 1
#define DT_N_S_soc_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"litex,vexriscv"}
#define DT_N_S_soc_P_compatible_IDX_0 "litex,vexriscv"
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/clock-outputs
 *
 * Node identifier: DT_N_S_soc_S_clock_outputs
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_clock_outputs_PARENT DT_N_S_soc
#define DT_N_S_soc_S_clock_outputs_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_clock_outputs_S_clock_controller_0) fn(DT_N_S_soc_S_clock_outputs_S_clock_controller_1)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_clock_outputs_ORD 6

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_clock_outputs_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_clock_outputs_SUPPORTS_ORDS \
	7, /* /soc/clock-outputs/clock-controller@0 */ \
	8, /* /soc/clock-outputs/clock-controller@1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_clock_outputs_EXISTS 1

/* Special property macros: */
#define DT_N_S_soc_S_clock_outputs_REG_NUM 0
#define DT_N_S_soc_S_clock_outputs_IRQ_NUM 0
#define DT_N_S_soc_S_clock_outputs_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /soc/clock-outputs/clock-controller@0
 *
 * Node identifier: DT_N_S_soc_S_clock_outputs_S_clock_controller_0
 *
 * Binding (compatible = litex,clkout):
 *   $ZEPHYR_BASE/dts/bindings/clock/litex,clkout.yaml
 *
 * Description:
 *   LiteX Mixed Mode Clock Manager clock output binding
 */

/* Node parent (/soc/clock-outputs) identifier: */
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_PARENT DT_N_S_soc_S_clock_outputs
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_ORD 7

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_REQUIRES_ORDS \
	6, /* /soc/clock-outputs */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_SUPPORTS_ORDS \
	9, /* /soc/clock@82005000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_EXISTS 1
#define DT_N_INST_0_litex_clkout DT_N_S_soc_S_clock_outputs_S_clock_controller_0
#define DT_N_NODELABEL_clk0      DT_N_S_soc_S_clock_outputs_S_clock_controller_0

/* Special property macros: */
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_REG_NUM 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_IRQ_NUM 0
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_COMPAT_MATCHES_litex_clkout 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_clock_output_names "CLK_0"
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_clock_output_names_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_litex_clock_frequency 100000000
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_litex_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_litex_clock_phase 0
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_litex_clock_phase_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_litex_clock_duty_num 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_litex_clock_duty_num_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_litex_clock_duty_den 2
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_litex_clock_duty_den_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_litex_clock_margin 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_litex_clock_margin_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_litex_clock_margin_exp 2
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_litex_clock_margin_exp_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_status "okay"
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_status_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_compatible {"litex,clkout"}
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_compatible_IDX_0 "litex,clkout"
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_compatible_LEN 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/clock-outputs/clock-controller@1
 *
 * Node identifier: DT_N_S_soc_S_clock_outputs_S_clock_controller_1
 *
 * Binding (compatible = litex,clkout):
 *   $ZEPHYR_BASE/dts/bindings/clock/litex,clkout.yaml
 *
 * Description:
 *   LiteX Mixed Mode Clock Manager clock output binding
 */

/* Node parent (/soc/clock-outputs) identifier: */
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_PARENT DT_N_S_soc_S_clock_outputs
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_ORD 8

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_REQUIRES_ORDS \
	6, /* /soc/clock-outputs */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_SUPPORTS_ORDS \
	9, /* /soc/clock@82005000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_EXISTS 1
#define DT_N_INST_1_litex_clkout DT_N_S_soc_S_clock_outputs_S_clock_controller_1
#define DT_N_NODELABEL_clk1      DT_N_S_soc_S_clock_outputs_S_clock_controller_1

/* Special property macros: */
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_REG_NUM 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_IRQ_NUM 0
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_COMPAT_MATCHES_litex_clkout 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_clock_output_names "CLK_1"
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_clock_output_names_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_litex_clock_frequency 100000000
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_litex_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_litex_clock_phase 0
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_litex_clock_phase_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_litex_clock_duty_num 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_litex_clock_duty_num_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_litex_clock_duty_den 2
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_litex_clock_duty_den_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_litex_clock_margin 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_litex_clock_margin_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_litex_clock_margin_exp 2
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_litex_clock_margin_exp_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_status "okay"
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_status_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_compatible {"litex,clkout"}
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_compatible_IDX_0 "litex,clkout"
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_compatible_LEN 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_reg {1 /* 0x1 */}
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_reg_IDX_0 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_outputs_S_clock_controller_1_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/clock@82005000
 *
 * Node identifier: DT_N_S_soc_S_clock_82005000
 *
 * Binding (compatible = litex,clk):
 *   $ZEPHYR_BASE/dts/bindings/clock/litex,clk.yaml
 *
 * Description:
 *   LiteX Mixed Mode Clock Manager
 *   Common clock driver with MMCM unit for dynamic reconfiguration
 *   of up to 7 clock outputs with ability to change frequency, duty
 *   cycle and phase offset
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_clock_82005000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_clock_82005000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_clock_82005000_ORD 9

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_clock_82005000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/clock-outputs/clock-controller@0 */ \
	8, /* /soc/clock-outputs/clock-controller@1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_clock_82005000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_clock_82005000_EXISTS 1
#define DT_N_INST_0_litex_clk DT_N_S_soc_S_clock_82005000
#define DT_N_NODELABEL_clock0 DT_N_S_soc_S_clock_82005000

/* Special property macros: */
#define DT_N_S_soc_S_clock_82005000_REG_NUM 8
#define DT_N_S_soc_S_clock_82005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_REG_IDX_0_VAL_ADDRESS 2181058560 /* 0x82005000 */
#define DT_N_S_soc_S_clock_82005000_REG_IDX_0_VAL_SIZE 1 /* 0x1 */
#define DT_N_S_soc_S_clock_82005000_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_REG_IDX_1_VAL_ADDRESS 2181058564 /* 0x82005004 */
#define DT_N_S_soc_S_clock_82005000_REG_IDX_1_VAL_SIZE 1 /* 0x1 */
#define DT_N_S_soc_S_clock_82005000_REG_IDX_2_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_REG_IDX_2_VAL_ADDRESS 2181058568 /* 0x82005008 */
#define DT_N_S_soc_S_clock_82005000_REG_IDX_2_VAL_SIZE 1 /* 0x1 */
#define DT_N_S_soc_S_clock_82005000_REG_IDX_3_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_REG_IDX_3_VAL_ADDRESS 2181058572 /* 0x8200500c */
#define DT_N_S_soc_S_clock_82005000_REG_IDX_3_VAL_SIZE 1 /* 0x1 */
#define DT_N_S_soc_S_clock_82005000_REG_IDX_4_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_REG_IDX_4_VAL_ADDRESS 2181058576 /* 0x82005010 */
#define DT_N_S_soc_S_clock_82005000_REG_IDX_4_VAL_SIZE 1 /* 0x1 */
#define DT_N_S_soc_S_clock_82005000_REG_IDX_5_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_REG_IDX_5_VAL_ADDRESS 2181058580 /* 0x82005014 */
#define DT_N_S_soc_S_clock_82005000_REG_IDX_5_VAL_SIZE 1 /* 0x1 */
#define DT_N_S_soc_S_clock_82005000_REG_IDX_6_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_REG_IDX_6_VAL_ADDRESS 2181058584 /* 0x82005018 */
#define DT_N_S_soc_S_clock_82005000_REG_IDX_6_VAL_SIZE 2 /* 0x2 */
#define DT_N_S_soc_S_clock_82005000_REG_IDX_7_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_REG_IDX_7_VAL_ADDRESS 2181058592 /* 0x82005020 */
#define DT_N_S_soc_S_clock_82005000_REG_IDX_7_VAL_SIZE 2 /* 0x2 */
#define DT_N_S_soc_S_clock_82005000_REG_NAME_drp_reset_VAL_ADDRESS DT_N_S_soc_S_clock_82005000_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_clock_82005000_REG_NAME_drp_reset_VAL_SIZE DT_N_S_soc_S_clock_82005000_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_clock_82005000_REG_NAME_drp_locked_VAL_ADDRESS DT_N_S_soc_S_clock_82005000_REG_IDX_1_VAL_ADDRESS
#define DT_N_S_soc_S_clock_82005000_REG_NAME_drp_locked_VAL_SIZE DT_N_S_soc_S_clock_82005000_REG_IDX_1_VAL_SIZE
#define DT_N_S_soc_S_clock_82005000_REG_NAME_drp_read_VAL_ADDRESS DT_N_S_soc_S_clock_82005000_REG_IDX_2_VAL_ADDRESS
#define DT_N_S_soc_S_clock_82005000_REG_NAME_drp_read_VAL_SIZE DT_N_S_soc_S_clock_82005000_REG_IDX_2_VAL_SIZE
#define DT_N_S_soc_S_clock_82005000_REG_NAME_drp_write_VAL_ADDRESS DT_N_S_soc_S_clock_82005000_REG_IDX_3_VAL_ADDRESS
#define DT_N_S_soc_S_clock_82005000_REG_NAME_drp_write_VAL_SIZE DT_N_S_soc_S_clock_82005000_REG_IDX_3_VAL_SIZE
#define DT_N_S_soc_S_clock_82005000_REG_NAME_drp_drdy_VAL_ADDRESS DT_N_S_soc_S_clock_82005000_REG_IDX_4_VAL_ADDRESS
#define DT_N_S_soc_S_clock_82005000_REG_NAME_drp_drdy_VAL_SIZE DT_N_S_soc_S_clock_82005000_REG_IDX_4_VAL_SIZE
#define DT_N_S_soc_S_clock_82005000_REG_NAME_drp_adr_VAL_ADDRESS DT_N_S_soc_S_clock_82005000_REG_IDX_5_VAL_ADDRESS
#define DT_N_S_soc_S_clock_82005000_REG_NAME_drp_adr_VAL_SIZE DT_N_S_soc_S_clock_82005000_REG_IDX_5_VAL_SIZE
#define DT_N_S_soc_S_clock_82005000_REG_NAME_drp_dat_w_VAL_ADDRESS DT_N_S_soc_S_clock_82005000_REG_IDX_6_VAL_ADDRESS
#define DT_N_S_soc_S_clock_82005000_REG_NAME_drp_dat_w_VAL_SIZE DT_N_S_soc_S_clock_82005000_REG_IDX_6_VAL_SIZE
#define DT_N_S_soc_S_clock_82005000_REG_NAME_drp_dat_r_VAL_ADDRESS DT_N_S_soc_S_clock_82005000_REG_IDX_7_VAL_ADDRESS
#define DT_N_S_soc_S_clock_82005000_REG_NAME_drp_dat_r_VAL_SIZE DT_N_S_soc_S_clock_82005000_REG_IDX_7_VAL_SIZE
#define DT_N_S_soc_S_clock_82005000_IRQ_NUM 0
#define DT_N_S_soc_S_clock_82005000_COMPAT_MATCHES_litex_clk 1
#define DT_N_S_soc_S_clock_82005000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_clock_82005000_P_reg {2181058560 /* 0x82005000 */, 1 /* 0x1 */, 2181058564 /* 0x82005004 */, 1 /* 0x1 */, 2181058568 /* 0x82005008 */, 1 /* 0x1 */, 2181058572 /* 0x8200500c */, 1 /* 0x1 */, 2181058576 /* 0x82005010 */, 1 /* 0x1 */, 2181058580 /* 0x82005014 */, 1 /* 0x1 */, 2181058584 /* 0x82005018 */, 2 /* 0x2 */, 2181058592 /* 0x82005020 */, 2 /* 0x2 */}
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_0 2181058560
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_1 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_2 2181058564
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_3 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_4 2181058568
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_4_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_5 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_5_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_6 2181058572
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_6_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_7 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_7_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_8 2181058576
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_8_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_9 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_9_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_10 2181058580
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_10_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_11 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_11_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_12 2181058584
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_12_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_13 2
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_13_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_14 2181058592
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_14_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_15 2
#define DT_N_S_soc_S_clock_82005000_P_reg_IDX_15_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_clock_output_names {"CLK_0", "CLK_1"}
#define DT_N_S_soc_S_clock_82005000_P_clock_output_names_IDX_0 "CLK_0"
#define DT_N_S_soc_S_clock_82005000_P_clock_output_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_clock_output_names_IDX_1 "CLK_1"
#define DT_N_S_soc_S_clock_82005000_P_clock_output_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_clock_output_names_LEN 2
#define DT_N_S_soc_S_clock_82005000_P_clock_output_names_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_litex_lock_timeout 10
#define DT_N_S_soc_S_clock_82005000_P_litex_lock_timeout_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_litex_drdy_timeout 10
#define DT_N_S_soc_S_clock_82005000_P_litex_drdy_timeout_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_litex_sys_clock_frequency 100000000
#define DT_N_S_soc_S_clock_82005000_P_litex_sys_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_litex_divclk_divide_min 1
#define DT_N_S_soc_S_clock_82005000_P_litex_divclk_divide_min_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_litex_divclk_divide_max 107
#define DT_N_S_soc_S_clock_82005000_P_litex_divclk_divide_max_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_litex_clkfbout_mult_min 2
#define DT_N_S_soc_S_clock_82005000_P_litex_clkfbout_mult_min_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_litex_clkfbout_mult_max 65
#define DT_N_S_soc_S_clock_82005000_P_litex_clkfbout_mult_max_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_litex_vco_freq_min 600000000
#define DT_N_S_soc_S_clock_82005000_P_litex_vco_freq_min_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_litex_vco_freq_max 1200000000
#define DT_N_S_soc_S_clock_82005000_P_litex_vco_freq_max_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_litex_clkout_divide_min 1
#define DT_N_S_soc_S_clock_82005000_P_litex_clkout_divide_min_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_litex_clkout_divide_max 126
#define DT_N_S_soc_S_clock_82005000_P_litex_clkout_divide_max_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_litex_vco_margin 0
#define DT_N_S_soc_S_clock_82005000_P_litex_vco_margin_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_status "okay"
#define DT_N_S_soc_S_clock_82005000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_clock_82005000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_clock_82005000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_clock_82005000_P_status_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_compatible {"litex,clk"}
#define DT_N_S_soc_S_clock_82005000_P_compatible_IDX_0 "litex,clk"
#define DT_N_S_soc_S_clock_82005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_compatible_LEN 1
#define DT_N_S_soc_S_clock_82005000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_names {"drp_reset", "drp_locked", "drp_read", "drp_write", "drp_drdy", "drp_adr", "drp_dat_w", "drp_dat_r"}
#define DT_N_S_soc_S_clock_82005000_P_reg_names_IDX_0 "drp_reset"
#define DT_N_S_soc_S_clock_82005000_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_names_IDX_1 "drp_locked"
#define DT_N_S_soc_S_clock_82005000_P_reg_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_names_IDX_2 "drp_read"
#define DT_N_S_soc_S_clock_82005000_P_reg_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_names_IDX_3 "drp_write"
#define DT_N_S_soc_S_clock_82005000_P_reg_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_names_IDX_4 "drp_drdy"
#define DT_N_S_soc_S_clock_82005000_P_reg_names_IDX_4_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_names_IDX_5 "drp_adr"
#define DT_N_S_soc_S_clock_82005000_P_reg_names_IDX_5_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_names_IDX_6 "drp_dat_w"
#define DT_N_S_soc_S_clock_82005000_P_reg_names_IDX_6_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_names_IDX_7 "drp_dat_r"
#define DT_N_S_soc_S_clock_82005000_P_reg_names_IDX_7_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_reg_names_LEN 8
#define DT_N_S_soc_S_clock_82005000_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_label "clock0"
#define DT_N_S_soc_S_clock_82005000_P_label_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_outputs_S_clock_controller_0
#define DT_N_S_soc_S_clock_82005000_P_clocks_IDX_0_VAL_id 0
#define DT_N_S_soc_S_clock_82005000_P_clocks_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_clocks_IDX_1_PH DT_N_S_soc_S_clock_outputs_S_clock_controller_1
#define DT_N_S_soc_S_clock_82005000_P_clocks_IDX_1_VAL_id 1
#define DT_N_S_soc_S_clock_82005000_P_clocks_IDX_1_VAL_id_EXISTS 1
#define DT_N_S_soc_S_clock_82005000_P_clocks_LEN 2
#define DT_N_S_soc_S_clock_82005000_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/prbs@e0006800
 *
 * Node identifier: DT_N_S_soc_S_prbs_e0006800
 *
 * Binding (compatible = litex,prbs):
 *   $ZEPHYR_BASE/dts/bindings/rng/litex,prbs.yaml
 *
 * Description:
 *   LiteX PRBS
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_prbs_e0006800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_prbs_e0006800_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_prbs_e0006800_ORD 10

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_prbs_e0006800_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_prbs_e0006800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_prbs_e0006800_EXISTS 1
#define DT_N_INST_0_litex_prbs DT_N_S_soc_S_prbs_e0006800
#define DT_N_NODELABEL_prbs0   DT_N_S_soc_S_prbs_e0006800

/* Special property macros: */
#define DT_N_S_soc_S_prbs_e0006800_REG_NUM 1
#define DT_N_S_soc_S_prbs_e0006800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_prbs_e0006800_REG_IDX_0_VAL_ADDRESS 3758123008 /* 0xe0006800 */
#define DT_N_S_soc_S_prbs_e0006800_REG_IDX_0_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_prbs_e0006800_REG_NAME_status_VAL_ADDRESS DT_N_S_soc_S_prbs_e0006800_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_prbs_e0006800_REG_NAME_status_VAL_SIZE DT_N_S_soc_S_prbs_e0006800_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_prbs_e0006800_IRQ_NUM 0
#define DT_N_S_soc_S_prbs_e0006800_COMPAT_MATCHES_litex_prbs 1
#define DT_N_S_soc_S_prbs_e0006800_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_prbs_e0006800_P_reg {3758123008 /* 0xe0006800 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_prbs_e0006800_P_reg_IDX_0 3758123008
#define DT_N_S_soc_S_prbs_e0006800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_prbs_e0006800_P_reg_IDX_1 4
#define DT_N_S_soc_S_prbs_e0006800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_prbs_e0006800_P_reg_EXISTS 1
#define DT_N_S_soc_S_prbs_e0006800_P_status "okay"
#define DT_N_S_soc_S_prbs_e0006800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_prbs_e0006800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_prbs_e0006800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_prbs_e0006800_P_status_EXISTS 1
#define DT_N_S_soc_S_prbs_e0006800_P_compatible {"litex,prbs"}
#define DT_N_S_soc_S_prbs_e0006800_P_compatible_IDX_0 "litex,prbs"
#define DT_N_S_soc_S_prbs_e0006800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_prbs_e0006800_P_compatible_LEN 1
#define DT_N_S_soc_S_prbs_e0006800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_prbs_e0006800_P_reg_names {"status"}
#define DT_N_S_soc_S_prbs_e0006800_P_reg_names_IDX_0 "status"
#define DT_N_S_soc_S_prbs_e0006800_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_prbs_e0006800_P_reg_names_LEN 1
#define DT_N_S_soc_S_prbs_e0006800_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_prbs_e0006800_P_label "prbs0"
#define DT_N_S_soc_S_prbs_e0006800_P_label_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@bc0
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_bc0
 *
 * Binding (compatible = vexriscv,intc0):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/vexriscv,intc0.yaml
 *
 * Description:
 *   LiteX VexRiscV interrupt controller
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_bc0_PARENT DT_N_S_soc
#define DT_N_S_soc_S_interrupt_controller_bc0_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_bc0_ORD 11

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_bc0_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_bc0_SUPPORTS_ORDS \
	12, /* /soc/serial@f0002000 */ \
	13, /* /soc/timer@f0002800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_bc0_EXISTS 1
#define DT_N_INST_0_vexriscv_intc0 DT_N_S_soc_S_interrupt_controller_bc0
#define DT_N_NODELABEL_intc0       DT_N_S_soc_S_interrupt_controller_bc0

/* Special property macros: */
#define DT_N_S_soc_S_interrupt_controller_bc0_REG_NUM 2
#define DT_N_S_soc_S_interrupt_controller_bc0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_bc0_REG_IDX_0_VAL_ADDRESS 3008 /* 0xbc0 */
#define DT_N_S_soc_S_interrupt_controller_bc0_REG_IDX_0_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_interrupt_controller_bc0_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_bc0_REG_IDX_1_VAL_ADDRESS 4032 /* 0xfc0 */
#define DT_N_S_soc_S_interrupt_controller_bc0_REG_IDX_1_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_interrupt_controller_bc0_REG_NAME_irq_mask_VAL_ADDRESS DT_N_S_soc_S_interrupt_controller_bc0_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_interrupt_controller_bc0_REG_NAME_irq_mask_VAL_SIZE DT_N_S_soc_S_interrupt_controller_bc0_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_interrupt_controller_bc0_REG_NAME_irq_pending_VAL_ADDRESS DT_N_S_soc_S_interrupt_controller_bc0_REG_IDX_1_VAL_ADDRESS
#define DT_N_S_soc_S_interrupt_controller_bc0_REG_NAME_irq_pending_VAL_SIZE DT_N_S_soc_S_interrupt_controller_bc0_REG_IDX_1_VAL_SIZE
#define DT_N_S_soc_S_interrupt_controller_bc0_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_bc0_COMPAT_MATCHES_vexriscv_intc0 1
#define DT_N_S_soc_S_interrupt_controller_bc0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_bc0_P_reg {3008 /* 0xbc0 */, 4 /* 0x4 */, 4032 /* 0xfc0 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_interrupt_controller_bc0_P_reg_IDX_0 3008
#define DT_N_S_soc_S_interrupt_controller_bc0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_bc0_P_reg_IDX_1 4
#define DT_N_S_soc_S_interrupt_controller_bc0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_bc0_P_reg_IDX_2 4032
#define DT_N_S_soc_S_interrupt_controller_bc0_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_bc0_P_reg_IDX_3 4
#define DT_N_S_soc_S_interrupt_controller_bc0_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_bc0_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_bc0_P_riscv_max_priority 7
#define DT_N_S_soc_S_interrupt_controller_bc0_P_riscv_max_priority_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_bc0_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_bc0_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_bc0_P_compatible {"vexriscv,intc0"}
#define DT_N_S_soc_S_interrupt_controller_bc0_P_compatible_IDX_0 "vexriscv,intc0"
#define DT_N_S_soc_S_interrupt_controller_bc0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_bc0_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_bc0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_bc0_P_reg_names {"irq_mask", "irq_pending"}
#define DT_N_S_soc_S_interrupt_controller_bc0_P_reg_names_IDX_0 "irq_mask"
#define DT_N_S_soc_S_interrupt_controller_bc0_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_bc0_P_reg_names_IDX_1 "irq_pending"
#define DT_N_S_soc_S_interrupt_controller_bc0_P_reg_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_bc0_P_reg_names_LEN 2
#define DT_N_S_soc_S_interrupt_controller_bc0_P_reg_names_EXISTS 1

/*
 * Devicetree node: /soc/serial@f0002000
 *
 * Node identifier: DT_N_S_soc_S_serial_f0002000
 *
 * Binding (compatible = litex,uart0):
 *   $ZEPHYR_BASE/dts/bindings/serial/litex,uart0.yaml
 *
 * Description:
 *   LiteX UART
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_f0002000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_serial_f0002000_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_f0002000_ORD 12

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_f0002000_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@bc0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_f0002000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_f0002000_EXISTS 1
#define DT_N_INST_0_litex_uart0 DT_N_S_soc_S_serial_f0002000
#define DT_N_NODELABEL_uart0    DT_N_S_soc_S_serial_f0002000

/* Special property macros: */
#define DT_N_S_soc_S_serial_f0002000_REG_NUM 1
#define DT_N_S_soc_S_serial_f0002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_REG_IDX_0_VAL_ADDRESS 4026540032 /* 0xf0002000 */
#define DT_N_S_soc_S_serial_f0002000_REG_IDX_0_VAL_SIZE 24 /* 0x18 */
#define DT_N_S_soc_S_serial_f0002000_REG_NAME_control_VAL_ADDRESS DT_N_S_soc_S_serial_f0002000_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_serial_f0002000_REG_NAME_control_VAL_SIZE DT_N_S_soc_S_serial_f0002000_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_serial_f0002000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_f0002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_IRQ_IDX_0_VAL_irq 8
#define DT_N_S_soc_S_serial_f0002000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_f0002000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_COMPAT_MATCHES_litex_uart0 1
#define DT_N_S_soc_S_serial_f0002000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_serial_f0002000_P_reg {4026540032 /* 0xf0002000 */, 24 /* 0x18 */}
#define DT_N_S_soc_S_serial_f0002000_P_reg_IDX_0 4026540032
#define DT_N_S_soc_S_serial_f0002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_P_reg_IDX_1 24
#define DT_N_S_soc_S_serial_f0002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_P_interrupts {8 /* 0x8 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_f0002000_P_interrupts_IDX_0 8
#define DT_N_S_soc_S_serial_f0002000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_f0002000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_P_current_speed 115200
#define DT_N_S_soc_S_serial_f0002000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_P_label "uart0"
#define DT_N_S_soc_S_serial_f0002000_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_f0002000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_P_status "okay"
#define DT_N_S_soc_S_serial_f0002000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_serial_f0002000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_serial_f0002000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_f0002000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_P_compatible {"litex,uart0"}
#define DT_N_S_soc_S_serial_f0002000_P_compatible_IDX_0 "litex,uart0"
#define DT_N_S_soc_S_serial_f0002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_f0002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_P_reg_names {"control"}
#define DT_N_S_soc_S_serial_f0002000_P_reg_names_IDX_0 "control"
#define DT_N_S_soc_S_serial_f0002000_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_P_reg_names_LEN 1
#define DT_N_S_soc_S_serial_f0002000_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_bc0
#define DT_N_S_soc_S_serial_f0002000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_f0002000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_serial_f0002000_P_interrupt_parent_EXISTS 1

/*
 * Devicetree node: /soc/timer@f0002800
 *
 * Node identifier: DT_N_S_soc_S_timer_f0002800
 *
 * Binding (compatible = litex,timer0):
 *   $ZEPHYR_BASE/dts/bindings/timer/litex,timer0.yaml
 *
 * Description:
 *   LiteX timer
 */

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_f0002800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_f0002800_FOREACH_CHILD(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_f0002800_ORD 13

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_f0002800_REQUIRES_ORDS \
	5, /* /soc */ \
	11, /* /soc/interrupt-controller@bc0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_f0002800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_f0002800_EXISTS 1
#define DT_N_INST_0_litex_timer0 DT_N_S_soc_S_timer_f0002800
#define DT_N_NODELABEL_timer0    DT_N_S_soc_S_timer_f0002800

/* Special property macros: */
#define DT_N_S_soc_S_timer_f0002800_REG_NUM 1
#define DT_N_S_soc_S_timer_f0002800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_f0002800_REG_IDX_0_VAL_ADDRESS 4026542080 /* 0xf0002800 */
#define DT_N_S_soc_S_timer_f0002800_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_soc_S_timer_f0002800_REG_NAME_control_VAL_ADDRESS DT_N_S_soc_S_timer_f0002800_REG_IDX_0_VAL_ADDRESS
#define DT_N_S_soc_S_timer_f0002800_REG_NAME_control_VAL_SIZE DT_N_S_soc_S_timer_f0002800_REG_IDX_0_VAL_SIZE
#define DT_N_S_soc_S_timer_f0002800_IRQ_NUM 1
#define DT_N_S_soc_S_timer_f0002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_f0002800_IRQ_IDX_0_VAL_irq 7
#define DT_N_S_soc_S_timer_f0002800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_f0002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_f0002800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timer_f0002800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_f0002800_COMPAT_MATCHES_litex_timer0 1
#define DT_N_S_soc_S_timer_f0002800_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_timer_f0002800_P_reg {4026542080 /* 0xf0002800 */, 64 /* 0x40 */}
#define DT_N_S_soc_S_timer_f0002800_P_reg_IDX_0 4026542080
#define DT_N_S_soc_S_timer_f0002800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_f0002800_P_reg_IDX_1 64
#define DT_N_S_soc_S_timer_f0002800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_f0002800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_f0002800_P_interrupts {7 /* 0x7 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timer_f0002800_P_interrupts_IDX_0 7
#define DT_N_S_soc_S_timer_f0002800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_f0002800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timer_f0002800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_f0002800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_f0002800_P_status "okay"
#define DT_N_S_soc_S_timer_f0002800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timer_f0002800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timer_f0002800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_f0002800_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_f0002800_P_compatible {"litex,timer0"}
#define DT_N_S_soc_S_timer_f0002800_P_compatible_IDX_0 "litex,timer0"
#define DT_N_S_soc_S_timer_f0002800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_f0002800_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_f0002800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_f0002800_P_reg_names {"control"}
#define DT_N_S_soc_S_timer_f0002800_P_reg_names_IDX_0 "control"
#define DT_N_S_soc_S_timer_f0002800_P_reg_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_f0002800_P_reg_names_LEN 1
#define DT_N_S_soc_S_timer_f0002800_P_reg_names_EXISTS 1
#define DT_N_S_soc_S_timer_f0002800_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_bc0
#define DT_N_S_soc_S_timer_f0002800_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_f0002800_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_timer_f0002800_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_timer_f0002800_P_label "timer0"
#define DT_N_S_soc_S_timer_f0002800_P_label_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_entropy           DT_N_S_soc_S_prbs_e0006800
#define DT_CHOSEN_zephyr_entropy_EXISTS    1
#define DT_CHOSEN_zephyr_console           DT_N_S_soc_S_serial_f0002000
#define DT_CHOSEN_zephyr_console_EXISTS    1
#define DT_CHOSEN_zephyr_shell_uart        DT_N_S_soc_S_serial_f0002000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS 1
#define DT_CHOSEN_zephyr_sram              DT_N_S_memory_40000000
#define DT_CHOSEN_zephyr_sram_EXISTS       1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_litex_vexriscv 1
#define DT_COMPAT_HAS_OKAY_spinalhdl_vexriscv 1
#define DT_COMPAT_HAS_OKAY_riscv 1
#define DT_COMPAT_HAS_OKAY_vexriscv_intc0 1
#define DT_COMPAT_HAS_OKAY_litex_uart0 1
#define DT_COMPAT_HAS_OKAY_litex_timer0 1
#define DT_COMPAT_HAS_OKAY_litex_prbs 1
#define DT_COMPAT_HAS_OKAY_litex_clkout 1
#define DT_COMPAT_HAS_OKAY_litex_clk 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_litex_vexriscv_NUM_OKAY 2
#define DT_N_INST_spinalhdl_vexriscv_NUM_OKAY 1
#define DT_N_INST_riscv_NUM_OKAY 1
#define DT_N_INST_vexriscv_intc0_NUM_OKAY 1
#define DT_N_INST_litex_uart0_NUM_OKAY 1
#define DT_N_INST_litex_timer0_NUM_OKAY 1
#define DT_N_INST_litex_prbs_NUM_OKAY 1
#define DT_N_INST_litex_clkout_NUM_OKAY 2
#define DT_N_INST_litex_clk_NUM_OKAY 1
#define DT_FOREACH_OKAY_INST_litex_vexriscv(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_spinalhdl_vexriscv(fn) fn(0)
#define DT_FOREACH_OKAY_INST_riscv(fn) fn(0)
#define DT_FOREACH_OKAY_INST_vexriscv_intc0(fn) fn(0)
#define DT_FOREACH_OKAY_INST_litex_uart0(fn) fn(0)
#define DT_FOREACH_OKAY_INST_litex_timer0(fn) fn(0)
#define DT_FOREACH_OKAY_INST_litex_prbs(fn) fn(0)
#define DT_FOREACH_OKAY_INST_litex_clkout(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_litex_clk(fn) fn(0)

/*
 * Bus information for status "okay" nodes of each compatible
 */
