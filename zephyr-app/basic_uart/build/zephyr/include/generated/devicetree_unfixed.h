/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   olimex_stm32_e407.dts.pre.tmp
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /memory@10000000
 *   4   /memory@20000000
 *   5   /clocks
 *   6   /clocks/clk-hsi
 *   7   /clocks/clk-lse
 *   8   /clocks/clk-lsi
 *   9   /cpus
 *   10  /cpus/cpu@0
 *   11  /gpio_keys
 *   12  /soc
 *   13  /soc/pin-controller@40020000
 *   14  /clocks/clk-hse
 *   15  /clocks/pll
 *   16  /soc/rcc@40023800
 *   17  /soc/pin-controller@40020000/gpio@40020000
 *   18  /gpio_keys/button
 *   19  /leds
 *   20  /soc/pin-controller@40020000/gpio@40020800
 *   21  /leds/led_1
 *   22  /soc/interrupt-controller@e000e100
 *   23  /soc/adc@40012000
 *   24  /soc/can@40006400
 *   25  /soc/can@40006800
 *   26  /soc/dac@40007400
 *   27  /soc/dma@40026400
 *   28  /soc/pin-controller@40020000/eth_col_pa3
 *   29  /soc/pin-controller@40020000/eth_crs_dv_pa7
 *   30  /soc/pin-controller@40020000/eth_mdc_pc1
 *   31  /soc/pin-controller@40020000/eth_mdio_pa2
 *   32  /soc/pin-controller@40020000/eth_ref_clk_pa1
 *   33  /soc/pin-controller@40020000/eth_rxd0_pc4
 *   34  /soc/pin-controller@40020000/eth_rxd1_pc5
 *   35  /soc/pin-controller@40020000/eth_tx_en_pg11
 *   36  /soc/pin-controller@40020000/eth_txd0_pg13
 *   37  /soc/pin-controller@40020000/eth_txd1_pg14
 *   38  /soc/ethernet@40028000
 *   39  /soc/i2c@40005400
 *   40  /soc/i2c@40005800
 *   41  /soc/i2c@40005c00
 *   42  /soc/dma@40026000
 *   43  /soc/i2s@40003800
 *   44  /soc/i2s@40003c00
 *   45  /soc/interrupt-controller@40013c00
 *   46  /soc/memory@40024000
 *   47  /soc/rng@50060800
 *   48  /soc/rtc@40002800
 *   49  /soc/serial@40004400
 *   50  /soc/pin-controller@40020000/usart3_rx_pb11
 *   51  /soc/pin-controller@40020000/usart3_tx_pb10
 *   52  /soc/serial@40004800
 *   53  /soc/serial@40004c00
 *   54  /soc/serial@40005000
 *   55  /soc/pin-controller@40020000/usart1_rx_pb7
 *   56  /soc/pin-controller@40020000/usart1_tx_pb6
 *   57  /soc/serial@40011000
 *   58  /soc/pin-controller@40020000/usart6_rx_pc7
 *   59  /soc/pin-controller@40020000/usart6_tx_pc6
 *   60  /soc/serial@40011400
 *   61  /soc/spi@40003800
 *   62  /soc/spi@40003c00
 *   63  /soc/pin-controller@40020000/gpio@40020400
 *   64  /soc/spi@40013000
 *   65  /soc/spi@40013400
 *   66  /soc/timer@e000e010
 *   67  /otghs_fs_phy
 *   68  /soc/pin-controller@40020000/usb_otg_hs_dm_pb14
 *   69  /soc/pin-controller@40020000/usb_otg_hs_dp_pb15
 *   70  /soc/usb@40040000
 *   71  /otgfs_phy
 *   72  /soc/pin-controller@40020000/usb_otg_fs_dm_pa11
 *   73  /soc/pin-controller@40020000/usb_otg_fs_dp_pa12
 *   74  /soc/usb@50000000
 *   75  /soc/watchdog@40002c00
 *   76  /soc/watchdog@40003000
 *   77  /soc/flash-controller@40023c00
 *   78  /soc/flash-controller@40023c00/flash@8000000
 *   79  /soc/pin-controller@40020000/adc1_in0_pa0
 *   80  /soc/pin-controller@40020000/adc1_in10_pc0
 *   81  /soc/pin-controller@40020000/adc1_in11_pc1
 *   82  /soc/pin-controller@40020000/adc1_in12_pc2
 *   83  /soc/pin-controller@40020000/adc1_in13_pc3
 *   84  /soc/pin-controller@40020000/adc1_in14_pc4
 *   85  /soc/pin-controller@40020000/adc1_in15_pc5
 *   86  /soc/pin-controller@40020000/adc1_in1_pa1
 *   87  /soc/pin-controller@40020000/adc1_in2_pa2
 *   88  /soc/pin-controller@40020000/adc1_in3_pa3
 *   89  /soc/pin-controller@40020000/adc1_in4_pa4
 *   90  /soc/pin-controller@40020000/adc1_in5_pa5
 *   91  /soc/pin-controller@40020000/adc1_in6_pa6
 *   92  /soc/pin-controller@40020000/adc1_in7_pa7
 *   93  /soc/pin-controller@40020000/adc1_in8_pb0
 *   94  /soc/pin-controller@40020000/adc1_in9_pb1
 *   95  /soc/pin-controller@40020000/adc2_in0_pa0
 *   96  /soc/pin-controller@40020000/adc2_in10_pc0
 *   97  /soc/pin-controller@40020000/adc2_in11_pc1
 *   98  /soc/pin-controller@40020000/adc2_in12_pc2
 *   99  /soc/pin-controller@40020000/adc2_in13_pc3
 *   100 /soc/pin-controller@40020000/adc2_in14_pc4
 *   101 /soc/pin-controller@40020000/adc2_in15_pc5
 *   102 /soc/pin-controller@40020000/adc2_in1_pa1
 *   103 /soc/pin-controller@40020000/adc2_in2_pa2
 *   104 /soc/pin-controller@40020000/adc2_in3_pa3
 *   105 /soc/pin-controller@40020000/adc2_in4_pa4
 *   106 /soc/pin-controller@40020000/adc2_in5_pa5
 *   107 /soc/pin-controller@40020000/adc2_in6_pa6
 *   108 /soc/pin-controller@40020000/adc2_in7_pa7
 *   109 /soc/pin-controller@40020000/adc2_in8_pb0
 *   110 /soc/pin-controller@40020000/adc2_in9_pb1
 *   111 /soc/pin-controller@40020000/adc3_in0_pa0
 *   112 /soc/pin-controller@40020000/adc3_in10_pc0
 *   113 /soc/pin-controller@40020000/adc3_in11_pc1
 *   114 /soc/pin-controller@40020000/adc3_in12_pc2
 *   115 /soc/pin-controller@40020000/adc3_in13_pc3
 *   116 /soc/pin-controller@40020000/adc3_in14_pf4
 *   117 /soc/pin-controller@40020000/adc3_in15_pf5
 *   118 /soc/pin-controller@40020000/adc3_in1_pa1
 *   119 /soc/pin-controller@40020000/adc3_in2_pa2
 *   120 /soc/pin-controller@40020000/adc3_in3_pa3
 *   121 /soc/pin-controller@40020000/adc3_in4_pf6
 *   122 /soc/pin-controller@40020000/adc3_in5_pf7
 *   123 /soc/pin-controller@40020000/adc3_in6_pf8
 *   124 /soc/pin-controller@40020000/adc3_in7_pf9
 *   125 /soc/pin-controller@40020000/adc3_in8_pf10
 *   126 /soc/pin-controller@40020000/adc3_in9_pf3
 *   127 /soc/pin-controller@40020000/can1_rx_pa11
 *   128 /soc/pin-controller@40020000/can1_rx_pb8
 *   129 /soc/pin-controller@40020000/can1_rx_pd0
 *   130 /soc/pin-controller@40020000/can1_tx_pa12
 *   131 /soc/pin-controller@40020000/can1_tx_pb9
 *   132 /soc/pin-controller@40020000/can1_tx_pd1
 *   133 /soc/pin-controller@40020000/can2_rx_pb12
 *   134 /soc/pin-controller@40020000/can2_rx_pb5
 *   135 /soc/pin-controller@40020000/can2_tx_pb13
 *   136 /soc/pin-controller@40020000/can2_tx_pb6
 *   137 /soc/pin-controller@40020000/dac_out1_pa4
 *   138 /soc/pin-controller@40020000/dac_out2_pa5
 *   139 /soc/pin-controller@40020000/eth_crs_pa0
 *   140 /soc/pin-controller@40020000/eth_pps_out_pb5
 *   141 /soc/pin-controller@40020000/eth_pps_out_pg8
 *   142 /soc/pin-controller@40020000/eth_rx_clk_pa1
 *   143 /soc/pin-controller@40020000/eth_rx_dv_pa7
 *   144 /soc/pin-controller@40020000/eth_rx_er_pb10
 *   145 /soc/pin-controller@40020000/eth_rxd2_pb0
 *   146 /soc/pin-controller@40020000/eth_rxd3_pb1
 *   147 /soc/pin-controller@40020000/eth_tx_clk_pc3
 *   148 /soc/pin-controller@40020000/eth_tx_en_pb11
 *   149 /soc/pin-controller@40020000/eth_txd0_pb12
 *   150 /soc/pin-controller@40020000/eth_txd1_pb13
 *   151 /soc/pin-controller@40020000/eth_txd2_pc2
 *   152 /soc/pin-controller@40020000/eth_txd3_pb8
 *   153 /soc/pin-controller@40020000/eth_txd3_pe2
 *   154 /soc/pin-controller@40020000/gpio@40020c00
 *   155 /soc/pin-controller@40020000/gpio@40021000
 *   156 /soc/pin-controller@40020000/gpio@40021400
 *   157 /soc/pin-controller@40020000/gpio@40021800
 *   158 /soc/pin-controller@40020000/gpio@40021c00
 *   159 /soc/pin-controller@40020000/gpio@40022000
 *   160 /soc/pin-controller@40020000/i2c1_scl_pb6
 *   161 /soc/pin-controller@40020000/i2c1_scl_pb8
 *   162 /soc/pin-controller@40020000/i2c1_sda_pb7
 *   163 /soc/pin-controller@40020000/i2c1_sda_pb9
 *   164 /soc/pin-controller@40020000/i2c2_scl_pb10
 *   165 /soc/pin-controller@40020000/i2c2_scl_pf1
 *   166 /soc/pin-controller@40020000/i2c2_sda_pb11
 *   167 /soc/pin-controller@40020000/i2c2_sda_pf0
 *   168 /soc/pin-controller@40020000/i2c3_scl_pa8
 *   169 /soc/pin-controller@40020000/i2c3_sda_pc9
 *   170 /soc/pin-controller@40020000/i2s2_ck_pb10
 *   171 /soc/pin-controller@40020000/i2s2_ck_pb13
 *   172 /soc/pin-controller@40020000/i2s2_sd_pb15
 *   173 /soc/pin-controller@40020000/i2s2_sd_pc3
 *   174 /soc/pin-controller@40020000/i2s2_ws_pb12
 *   175 /soc/pin-controller@40020000/i2s2_ws_pb9
 *   176 /soc/pin-controller@40020000/i2s3_ck_pb3
 *   177 /soc/pin-controller@40020000/i2s3_ck_pc10
 *   178 /soc/pin-controller@40020000/i2s3_sd_pb5
 *   179 /soc/pin-controller@40020000/i2s3_sd_pc12
 *   180 /soc/pin-controller@40020000/i2s3_ws_pa15
 *   181 /soc/pin-controller@40020000/i2s3_ws_pa4
 *   182 /soc/pin-controller@40020000/spi1_miso_pa6
 *   183 /soc/pin-controller@40020000/spi1_miso_pb4
 *   184 /soc/pin-controller@40020000/spi1_mosi_pa7
 *   185 /soc/pin-controller@40020000/spi1_mosi_pb5
 *   186 /soc/pin-controller@40020000/spi1_nss_pa15
 *   187 /soc/pin-controller@40020000/spi1_nss_pa4
 *   188 /soc/pin-controller@40020000/spi1_sck_pa5
 *   189 /soc/pin-controller@40020000/spi1_sck_pb3
 *   190 /soc/pin-controller@40020000/spi2_miso_pb14
 *   191 /soc/pin-controller@40020000/spi2_miso_pc2
 *   192 /soc/pin-controller@40020000/spi2_mosi_pb15
 *   193 /soc/pin-controller@40020000/spi2_mosi_pc3
 *   194 /soc/pin-controller@40020000/spi2_nss_pb12
 *   195 /soc/pin-controller@40020000/spi2_nss_pb9
 *   196 /soc/pin-controller@40020000/spi2_sck_pb10
 *   197 /soc/pin-controller@40020000/spi2_sck_pb13
 *   198 /soc/pin-controller@40020000/spi3_miso_pb4
 *   199 /soc/pin-controller@40020000/spi3_miso_pc11
 *   200 /soc/pin-controller@40020000/spi3_mosi_pb5
 *   201 /soc/pin-controller@40020000/spi3_mosi_pc12
 *   202 /soc/pin-controller@40020000/spi3_nss_pa15
 *   203 /soc/pin-controller@40020000/spi3_nss_pa4
 *   204 /soc/pin-controller@40020000/spi3_sck_pb3
 *   205 /soc/pin-controller@40020000/spi3_sck_pc10
 *   206 /soc/pin-controller@40020000/tim10_ch1_pb8
 *   207 /soc/pin-controller@40020000/tim10_ch1_pf6
 *   208 /soc/pin-controller@40020000/tim11_ch1_pb9
 *   209 /soc/pin-controller@40020000/tim11_ch1_pf7
 *   210 /soc/pin-controller@40020000/tim12_ch1_pb14
 *   211 /soc/pin-controller@40020000/tim12_ch2_pb15
 *   212 /soc/pin-controller@40020000/tim13_ch1_pa6
 *   213 /soc/pin-controller@40020000/tim13_ch1_pf8
 *   214 /soc/pin-controller@40020000/tim14_ch1_pa7
 *   215 /soc/pin-controller@40020000/tim14_ch1_pf9
 *   216 /soc/pin-controller@40020000/tim1_ch1_pa8
 *   217 /soc/pin-controller@40020000/tim1_ch1_pe9
 *   218 /soc/pin-controller@40020000/tim1_ch1n_pa7
 *   219 /soc/pin-controller@40020000/tim1_ch1n_pb13
 *   220 /soc/pin-controller@40020000/tim1_ch1n_pe8
 *   221 /soc/pin-controller@40020000/tim1_ch2_pa9
 *   222 /soc/pin-controller@40020000/tim1_ch2_pe11
 *   223 /soc/pin-controller@40020000/tim1_ch2n_pb0
 *   224 /soc/pin-controller@40020000/tim1_ch2n_pb14
 *   225 /soc/pin-controller@40020000/tim1_ch2n_pe10
 *   226 /soc/pin-controller@40020000/tim1_ch3_pa10
 *   227 /soc/pin-controller@40020000/tim1_ch3_pe13
 *   228 /soc/pin-controller@40020000/tim1_ch3n_pb1
 *   229 /soc/pin-controller@40020000/tim1_ch3n_pb15
 *   230 /soc/pin-controller@40020000/tim1_ch3n_pe12
 *   231 /soc/pin-controller@40020000/tim1_ch4_pa11
 *   232 /soc/pin-controller@40020000/tim1_ch4_pe14
 *   233 /soc/pin-controller@40020000/tim2_ch1_pa0
 *   234 /soc/pin-controller@40020000/tim2_ch1_pa15
 *   235 /soc/pin-controller@40020000/tim2_ch1_pa5
 *   236 /soc/pin-controller@40020000/tim2_ch2_pa1
 *   237 /soc/pin-controller@40020000/tim2_ch2_pb3
 *   238 /soc/pin-controller@40020000/tim2_ch3_pa2
 *   239 /soc/pin-controller@40020000/tim2_ch3_pb10
 *   240 /soc/pin-controller@40020000/tim2_ch4_pa3
 *   241 /soc/pin-controller@40020000/tim2_ch4_pb11
 *   242 /soc/pin-controller@40020000/tim3_ch1_pa6
 *   243 /soc/pin-controller@40020000/tim3_ch1_pb4
 *   244 /soc/pin-controller@40020000/tim3_ch1_pc6
 *   245 /soc/pin-controller@40020000/tim3_ch2_pa7
 *   246 /soc/pin-controller@40020000/tim3_ch2_pb5
 *   247 /soc/pin-controller@40020000/tim3_ch2_pc7
 *   248 /soc/pin-controller@40020000/tim3_ch3_pb0
 *   249 /soc/pin-controller@40020000/tim3_ch3_pc8
 *   250 /soc/pin-controller@40020000/tim3_ch4_pb1
 *   251 /soc/pin-controller@40020000/tim3_ch4_pc9
 *   252 /soc/pin-controller@40020000/tim4_ch1_pb6
 *   253 /soc/pin-controller@40020000/tim4_ch1_pd12
 *   254 /soc/pin-controller@40020000/tim4_ch2_pb7
 *   255 /soc/pin-controller@40020000/tim4_ch2_pd13
 *   256 /soc/pin-controller@40020000/tim4_ch3_pb8
 *   257 /soc/pin-controller@40020000/tim4_ch3_pd14
 *   258 /soc/pin-controller@40020000/tim4_ch4_pb9
 *   259 /soc/pin-controller@40020000/tim4_ch4_pd15
 *   260 /soc/pin-controller@40020000/tim5_ch1_pa0
 *   261 /soc/pin-controller@40020000/tim5_ch2_pa1
 *   262 /soc/pin-controller@40020000/tim5_ch3_pa2
 *   263 /soc/pin-controller@40020000/tim5_ch4_pa3
 *   264 /soc/pin-controller@40020000/tim8_ch1_pc6
 *   265 /soc/pin-controller@40020000/tim8_ch1n_pa5
 *   266 /soc/pin-controller@40020000/tim8_ch1n_pa7
 *   267 /soc/pin-controller@40020000/tim8_ch2_pc7
 *   268 /soc/pin-controller@40020000/tim8_ch2n_pb0
 *   269 /soc/pin-controller@40020000/tim8_ch2n_pb14
 *   270 /soc/pin-controller@40020000/tim8_ch3_pc8
 *   271 /soc/pin-controller@40020000/tim8_ch3n_pb1
 *   272 /soc/pin-controller@40020000/tim8_ch3n_pb15
 *   273 /soc/pin-controller@40020000/tim8_ch4_pc9
 *   274 /soc/pin-controller@40020000/tim9_ch1_pa2
 *   275 /soc/pin-controller@40020000/tim9_ch1_pe5
 *   276 /soc/pin-controller@40020000/tim9_ch2_pa3
 *   277 /soc/pin-controller@40020000/tim9_ch2_pe6
 *   278 /soc/pin-controller@40020000/uart4_rx_pa1
 *   279 /soc/pin-controller@40020000/uart4_rx_pc11
 *   280 /soc/pin-controller@40020000/uart4_tx_pa0
 *   281 /soc/pin-controller@40020000/uart4_tx_pc10
 *   282 /soc/pin-controller@40020000/uart5_rx_pd2
 *   283 /soc/pin-controller@40020000/uart5_tx_pc12
 *   284 /soc/pin-controller@40020000/usart1_cts_pa11
 *   285 /soc/pin-controller@40020000/usart1_rts_pa12
 *   286 /soc/pin-controller@40020000/usart1_rx_pa10
 *   287 /soc/pin-controller@40020000/usart1_tx_pa9
 *   288 /soc/pin-controller@40020000/usart2_cts_pa0
 *   289 /soc/pin-controller@40020000/usart2_cts_pd3
 *   290 /soc/pin-controller@40020000/usart2_rts_pa1
 *   291 /soc/pin-controller@40020000/usart2_rts_pd4
 *   292 /soc/pin-controller@40020000/usart2_rx_pa3
 *   293 /soc/pin-controller@40020000/usart2_rx_pd6
 *   294 /soc/pin-controller@40020000/usart2_tx_pa2
 *   295 /soc/pin-controller@40020000/usart2_tx_pd5
 *   296 /soc/pin-controller@40020000/usart3_cts_pb13
 *   297 /soc/pin-controller@40020000/usart3_cts_pd11
 *   298 /soc/pin-controller@40020000/usart3_rts_pb14
 *   299 /soc/pin-controller@40020000/usart3_rts_pd12
 *   300 /soc/pin-controller@40020000/usart3_rx_pc11
 *   301 /soc/pin-controller@40020000/usart3_rx_pd9
 *   302 /soc/pin-controller@40020000/usart3_tx_pc10
 *   303 /soc/pin-controller@40020000/usart3_tx_pd8
 *   304 /soc/pin-controller@40020000/usart6_cts_pg13
 *   305 /soc/pin-controller@40020000/usart6_cts_pg15
 *   306 /soc/pin-controller@40020000/usart6_rts_pg12
 *   307 /soc/pin-controller@40020000/usart6_rts_pg8
 *   308 /soc/pin-controller@40020000/usart6_rx_pg9
 *   309 /soc/pin-controller@40020000/usart6_tx_pg14
 *   310 /soc/pin-controller@40020000/usb_otg_fs_id_pa10
 *   311 /soc/pin-controller@40020000/usb_otg_fs_sof_pa8
 *   312 /soc/pin-controller@40020000/usb_otg_fs_vbus_pa9
 *   313 /soc/pin-controller@40020000/usb_otg_hs_id_pb12
 *   314 /soc/pin-controller@40020000/usb_otg_hs_sof_pa4
 *   315 /soc/pin-controller@40020000/usb_otg_hs_ulpi_d0_pa3
 *   316 /soc/pin-controller@40020000/usb_otg_hs_ulpi_d1_pb0
 *   317 /soc/pin-controller@40020000/usb_otg_hs_ulpi_d2_pb1
 *   318 /soc/pin-controller@40020000/usb_otg_hs_ulpi_d3_pb10
 *   319 /soc/pin-controller@40020000/usb_otg_hs_ulpi_d4_pb11
 *   320 /soc/pin-controller@40020000/usb_otg_hs_ulpi_d5_pb12
 *   321 /soc/pin-controller@40020000/usb_otg_hs_ulpi_d6_pb13
 *   322 /soc/pin-controller@40020000/usb_otg_hs_ulpi_d7_pb5
 *   323 /soc/pin-controller@40020000/usb_otg_hs_ulpi_dir_pc2
 *   324 /soc/pin-controller@40020000/usb_otg_hs_ulpi_nxt_pc3
 *   325 /soc/pin-controller@40020000/usb_otg_hs_ulpi_stp_pc0
 *   326 /soc/pin-controller@40020000/usb_otg_hs_vbus_pb13
 *   327 /soc/timers@40000000
 *   328 /soc/timers@40000000/pwm
 *   329 /soc/timers@40000400
 *   330 /soc/timers@40000400/pwm
 *   331 /soc/timers@40000800
 *   332 /soc/timers@40000800/pwm
 *   333 /soc/timers@40000c00
 *   334 /soc/timers@40000c00/pwm
 *   335 /soc/timers@40001000
 *   336 /soc/timers@40001000/pwm
 *   337 /soc/timers@40001400
 *   338 /soc/timers@40001400/pwm
 *   339 /soc/timers@40001800
 *   340 /soc/timers@40001800/pwm
 *   341 /soc/timers@40001c00
 *   342 /soc/timers@40001c00/pwm
 *   343 /soc/timers@40002000
 *   344 /soc/timers@40002000/pwm
 *   345 /soc/timers@40010000
 *   346 /soc/timers@40010000/pwm
 *   347 /soc/timers@40010400
 *   348 /soc/timers@40010400/pwm
 *   349 /soc/timers@40014000
 *   350 /soc/timers@40014000/pwm
 *   351 /soc/timers@40014400
 *   352 /soc/timers@40014400/pwm
 *   353 /soc/timers@40014800
 *   354 /soc/timers@40014800/pwm
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_otgfs_phy) fn(DT_N_S_otghs_fs_phy) fn(DT_N_S_memory_10000000) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_otgfs_phy) fn(DT_N_S_otghs_fs_phy) fn(DT_N_S_memory_10000000) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys) 

/* Node's dependency ordinal: */
#define DT_N_ORD 0

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /memory@10000000 */ \
	4, /* /memory@20000000 */ \
	5, /* /clocks */ \
	9, /* /cpus */ \
	11, /* /gpio_keys */ \
	12, /* /soc */ \
	19, /* /leds */ \
	67, /* /otghs_fs_phy */ \
	71, /* /otgfs_phy */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_olimex_stm32_e407 DT_N

/* Special property macros: */
#define DT_N_REG_NUM 0
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_olimex_stm32_e407 1
#define DT_N_STATUS_okay 1

/* Generic property macros: */
#define DT_N_P_compatible {"olimex,stm32-e407"}
#define DT_N_P_compatible_IDX_0 "olimex,stm32-e407"
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Special property macros: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Special property macros: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /memory@10000000
 *
 * Node identifier: DT_N_S_memory_10000000
 *
 * Binding (compatible = st,stm32-ccm):
 *   $ZEPHYR_BASE/dts/bindings/arm/st,stm32-ccm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_10000000_PATH "/memory@10000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_10000000_FULL_NAME "memory@10000000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_10000000_PARENT DT_N
#define DT_N_S_memory_10000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_10000000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_10000000_ORD 3

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_10000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_10000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_10000000_EXISTS 1
#define DT_N_INST_0_st_stm32_ccm DT_N_S_memory_10000000
#define DT_N_NODELABEL_ccm0      DT_N_S_memory_10000000

/* Special property macros: */
#define DT_N_S_memory_10000000_REG_NUM 1
#define DT_N_S_memory_10000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_10000000_REG_IDX_0_VAL_ADDRESS 268435456 /* 0x10000000 */
#define DT_N_S_memory_10000000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_memory_10000000_IRQ_NUM 0
#define DT_N_S_memory_10000000_COMPAT_MATCHES_st_stm32_ccm 1
#define DT_N_S_memory_10000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_memory_10000000_P_reg {268435456 /* 0x10000000 */, 65536 /* 0x10000 */}
#define DT_N_S_memory_10000000_P_reg_IDX_0 268435456
#define DT_N_S_memory_10000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_10000000_P_reg_IDX_1 65536
#define DT_N_S_memory_10000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_10000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_10000000, reg, 0) \
	fn(DT_N_S_memory_10000000, reg, 1)
#define DT_N_S_memory_10000000_P_reg_EXISTS 1
#define DT_N_S_memory_10000000_P_compatible {"st,stm32-ccm"}
#define DT_N_S_memory_10000000_P_compatible_IDX_0 "st,stm32-ccm"
#define DT_N_S_memory_10000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_10000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_10000000, compatible, 0)
#define DT_N_S_memory_10000000_P_compatible_LEN 1
#define DT_N_S_memory_10000000_P_compatible_EXISTS 1

/*
 * Devicetree node: /memory@20000000
 *
 * Node identifier: DT_N_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_20000000_PATH "/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_20000000_FULL_NAME "memory@20000000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_20000000_PARENT DT_N
#define DT_N_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_20000000_ORD 4

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_20000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_memory_20000000

/* Special property macros: */
#define DT_N_S_memory_20000000_REG_NUM 1
#define DT_N_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_SIZE 131072 /* 0x20000 */
#define DT_N_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_20000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 131072 /* 0x20000 */}
#define DT_N_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_IDX_1 131072
#define DT_N_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, reg, 0) \
	fn(DT_N_S_memory_20000000, reg, 1)
#define DT_N_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_memory_20000000_P_compatible_EXISTS 1

/*
 * Devicetree node: /clocks
 *
 * Node identifier: DT_N_S_clocks
 */

/* Node's full path: */
#define DT_N_S_clocks_PATH "/clocks"

/* Node's name with unit-address: */
#define DT_N_S_clocks_FULL_NAME "clocks"

/* Node parent (/) identifier: */
#define DT_N_S_clocks_PARENT DT_N
#define DT_N_S_clocks_FOREACH_CHILD(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_pll) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_ORD 5

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_SUPPORTS_ORDS \
	6, /* /clocks/clk-hsi */ \
	7, /* /clocks/clk-lse */ \
	8, /* /clocks/clk-lsi */ \
	14, /* /clocks/clk-hse */ \
	15, /* /clocks/pll */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_EXISTS 1

/* Special property macros: */
#define DT_N_S_clocks_REG_NUM 0
#define DT_N_S_clocks_IRQ_NUM 0
#define DT_N_S_clocks_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /clocks/clk-hsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_hsi
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hsi_PATH "/clocks/clk-hsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hsi_FULL_NAME "clk-hsi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hsi_PARENT DT_N_S_clocks
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hsi_ORD 6

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hsi_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hsi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hsi_EXISTS 1
#define DT_N_INST_0_fixed_clock DT_N_S_clocks_S_clk_hsi
#define DT_N_NODELABEL_clk_hsi  DT_N_S_clocks_S_clk_hsi

/* Special property macros: */
#define DT_N_S_clocks_S_clk_hsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_hsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hsi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_hsi_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency 16000000
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lse
 *
 * Node identifier: DT_N_S_clocks_S_clk_lse
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lse_PATH "/clocks/clk-lse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lse_FULL_NAME "clk-lse"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lse_PARENT DT_N_S_clocks
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lse_ORD 7

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lse_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lse_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lse_EXISTS 1
#define DT_N_INST_1_fixed_clock DT_N_S_clocks_S_clk_lse
#define DT_N_NODELABEL_clk_lse  DT_N_S_clocks_S_clk_lse

/* Special property macros: */
#define DT_N_S_clocks_S_clk_lse_REG_NUM 0
#define DT_N_S_clocks_S_clk_lse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lse_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_lse_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency 32768
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_lsi
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lsi_PATH "/clocks/clk-lsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lsi_FULL_NAME "clk-lsi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lsi_PARENT DT_N_S_clocks
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lsi_ORD 8

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lsi_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lsi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lsi_EXISTS 1
#define DT_N_INST_2_fixed_clock DT_N_S_clocks_S_clk_lsi
#define DT_N_NODELABEL_clk_lsi  DT_N_S_clocks_S_clk_lsi

/* Special property macros: */
#define DT_N_S_clocks_S_clk_lsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_lsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lsi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_lsi_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency 32000
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 9

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	10, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Special property macros: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4f):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m4f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 10

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	9, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4f DT_N_S_cpus_S_cpu_0

/* Special property macros: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4f 1
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, reg, 0)
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1

/*
 * Devicetree node: /gpio_keys
 *
 * Node identifier: DT_N_S_gpio_keys
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_PATH "/gpio_keys"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_FULL_NAME "gpio_keys"

/* Node parent (/) identifier: */
#define DT_N_S_gpio_keys_PARENT DT_N
#define DT_N_S_gpio_keys_FOREACH_CHILD(fn) fn(DT_N_S_gpio_keys_S_button)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio_keys_S_button) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_ORD 11

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_SUPPORTS_ORDS \
	18, /* /gpio_keys/button */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_gpio_keys

/* Special property macros: */
#define DT_N_S_gpio_keys_REG_NUM 0
#define DT_N_S_gpio_keys_IRQ_NUM 0
#define DT_N_S_gpio_keys_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_gpio_keys_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_gpio_keys_P_compatible {"gpio-keys"}
#define DT_N_S_gpio_keys_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_gpio_keys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_LEN 1
#define DT_N_S_gpio_keys_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40023c00) fn(DT_N_S_soc_S_rcc_40023800) fn(DT_N_S_soc_S_interrupt_controller_40013c00) fn(DT_N_S_soc_S_pin_controller_40020000) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_watchdog_40002c00) fn(DT_N_S_soc_S_serial_40011000) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_serial_40011400) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_i2c_40005c00) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_usb_50000000) fn(DT_N_S_soc_S_timers_40010000) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc_S_timers_40000c00) fn(DT_N_S_soc_S_timers_40014000) fn(DT_N_S_soc_S_timers_40014400) fn(DT_N_S_soc_S_timers_40014800) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_adc_40012000) fn(DT_N_S_soc_S_dma_40026000) fn(DT_N_S_soc_S_dma_40026400) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_spi_40003c00) fn(DT_N_S_soc_S_spi_40013400) fn(DT_N_S_soc_S_i2s_40003800) fn(DT_N_S_soc_S_i2s_40003c00) fn(DT_N_S_soc_S_serial_40004800) fn(DT_N_S_soc_S_serial_40004c00) fn(DT_N_S_soc_S_serial_40005000) fn(DT_N_S_soc_S_timers_40001000) fn(DT_N_S_soc_S_timers_40001400) fn(DT_N_S_soc_S_timers_40010400) fn(DT_N_S_soc_S_timers_40001800) fn(DT_N_S_soc_S_timers_40001c00) fn(DT_N_S_soc_S_timers_40002000) fn(DT_N_S_soc_S_usb_40040000) fn(DT_N_S_soc_S_can_40006400) fn(DT_N_S_soc_S_can_40006800) fn(DT_N_S_soc_S_rng_50060800) fn(DT_N_S_soc_S_memory_40024000) fn(DT_N_S_soc_S_dac_40007400) fn(DT_N_S_soc_S_ethernet_40028000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40023c00) fn(DT_N_S_soc_S_rcc_40023800) fn(DT_N_S_soc_S_interrupt_controller_40013c00) fn(DT_N_S_soc_S_pin_controller_40020000) fn(DT_N_S_soc_S_serial_40011000) fn(DT_N_S_soc_S_serial_40011400) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_serial_40004800) fn(DT_N_S_soc_S_usb_40040000) fn(DT_N_S_soc_S_rng_50060800) fn(DT_N_S_soc_S_ethernet_40028000) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 12

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */ \
	23, /* /soc/adc@40012000 */ \
	24, /* /soc/can@40006400 */ \
	25, /* /soc/can@40006800 */ \
	26, /* /soc/dac@40007400 */ \
	27, /* /soc/dma@40026400 */ \
	38, /* /soc/ethernet@40028000 */ \
	39, /* /soc/i2c@40005400 */ \
	40, /* /soc/i2c@40005800 */ \
	41, /* /soc/i2c@40005c00 */ \
	42, /* /soc/dma@40026000 */ \
	43, /* /soc/i2s@40003800 */ \
	44, /* /soc/i2s@40003c00 */ \
	45, /* /soc/interrupt-controller@40013c00 */ \
	46, /* /soc/memory@40024000 */ \
	47, /* /soc/rng@50060800 */ \
	48, /* /soc/rtc@40002800 */ \
	49, /* /soc/serial@40004400 */ \
	52, /* /soc/serial@40004800 */ \
	53, /* /soc/serial@40004c00 */ \
	54, /* /soc/serial@40005000 */ \
	57, /* /soc/serial@40011000 */ \
	60, /* /soc/serial@40011400 */ \
	61, /* /soc/spi@40003800 */ \
	62, /* /soc/spi@40003c00 */ \
	64, /* /soc/spi@40013000 */ \
	65, /* /soc/spi@40013400 */ \
	66, /* /soc/timer@e000e010 */ \
	70, /* /soc/usb@40040000 */ \
	74, /* /soc/usb@50000000 */ \
	75, /* /soc/watchdog@40002c00 */ \
	76, /* /soc/watchdog@40003000 */ \
	77, /* /soc/flash-controller@40023c00 */ \
	327, /* /soc/timers@40000000 */ \
	329, /* /soc/timers@40000400 */ \
	331, /* /soc/timers@40000800 */ \
	333, /* /soc/timers@40000c00 */ \
	335, /* /soc/timers@40001000 */ \
	337, /* /soc/timers@40001400 */ \
	339, /* /soc/timers@40001800 */ \
	341, /* /soc/timers@40001c00 */ \
	343, /* /soc/timers@40002000 */ \
	345, /* /soc/timers@40010000 */ \
	347, /* /soc/timers@40010400 */ \
	349, /* /soc/timers@40014000 */ \
	351, /* /soc/timers@40014400 */ \
	353, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Special property macros: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000
 *
 * Binding (compatible = st,stm32-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/st,stm32-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_PATH "/soc/pin-controller@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_FULL_NAME "pin-controller@40020000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10) fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0) fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12) fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1) fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9) fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11) fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8) fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10) fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3)
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10) fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0) fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12) fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1) fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9) fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1) fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11) fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8) fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0) fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10) fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_ORD 13

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_REQUIRES_ORDS \
	12, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_SUPPORTS_ORDS \
	17, /* /soc/pin-controller@40020000/gpio@40020000 */ \
	20, /* /soc/pin-controller@40020000/gpio@40020800 */ \
	28, /* /soc/pin-controller@40020000/eth_col_pa3 */ \
	29, /* /soc/pin-controller@40020000/eth_crs_dv_pa7 */ \
	30, /* /soc/pin-controller@40020000/eth_mdc_pc1 */ \
	31, /* /soc/pin-controller@40020000/eth_mdio_pa2 */ \
	32, /* /soc/pin-controller@40020000/eth_ref_clk_pa1 */ \
	33, /* /soc/pin-controller@40020000/eth_rxd0_pc4 */ \
	34, /* /soc/pin-controller@40020000/eth_rxd1_pc5 */ \
	35, /* /soc/pin-controller@40020000/eth_tx_en_pg11 */ \
	36, /* /soc/pin-controller@40020000/eth_txd0_pg13 */ \
	37, /* /soc/pin-controller@40020000/eth_txd1_pg14 */ \
	50, /* /soc/pin-controller@40020000/usart3_rx_pb11 */ \
	51, /* /soc/pin-controller@40020000/usart3_tx_pb10 */ \
	55, /* /soc/pin-controller@40020000/usart1_rx_pb7 */ \
	56, /* /soc/pin-controller@40020000/usart1_tx_pb6 */ \
	58, /* /soc/pin-controller@40020000/usart6_rx_pc7 */ \
	59, /* /soc/pin-controller@40020000/usart6_tx_pc6 */ \
	63, /* /soc/pin-controller@40020000/gpio@40020400 */ \
	68, /* /soc/pin-controller@40020000/usb_otg_hs_dm_pb14 */ \
	69, /* /soc/pin-controller@40020000/usb_otg_hs_dp_pb15 */ \
	72, /* /soc/pin-controller@40020000/usb_otg_fs_dm_pa11 */ \
	73, /* /soc/pin-controller@40020000/usb_otg_fs_dp_pa12 */ \
	79, /* /soc/pin-controller@40020000/adc1_in0_pa0 */ \
	80, /* /soc/pin-controller@40020000/adc1_in10_pc0 */ \
	81, /* /soc/pin-controller@40020000/adc1_in11_pc1 */ \
	82, /* /soc/pin-controller@40020000/adc1_in12_pc2 */ \
	83, /* /soc/pin-controller@40020000/adc1_in13_pc3 */ \
	84, /* /soc/pin-controller@40020000/adc1_in14_pc4 */ \
	85, /* /soc/pin-controller@40020000/adc1_in15_pc5 */ \
	86, /* /soc/pin-controller@40020000/adc1_in1_pa1 */ \
	87, /* /soc/pin-controller@40020000/adc1_in2_pa2 */ \
	88, /* /soc/pin-controller@40020000/adc1_in3_pa3 */ \
	89, /* /soc/pin-controller@40020000/adc1_in4_pa4 */ \
	90, /* /soc/pin-controller@40020000/adc1_in5_pa5 */ \
	91, /* /soc/pin-controller@40020000/adc1_in6_pa6 */ \
	92, /* /soc/pin-controller@40020000/adc1_in7_pa7 */ \
	93, /* /soc/pin-controller@40020000/adc1_in8_pb0 */ \
	94, /* /soc/pin-controller@40020000/adc1_in9_pb1 */ \
	95, /* /soc/pin-controller@40020000/adc2_in0_pa0 */ \
	96, /* /soc/pin-controller@40020000/adc2_in10_pc0 */ \
	97, /* /soc/pin-controller@40020000/adc2_in11_pc1 */ \
	98, /* /soc/pin-controller@40020000/adc2_in12_pc2 */ \
	99, /* /soc/pin-controller@40020000/adc2_in13_pc3 */ \
	100, /* /soc/pin-controller@40020000/adc2_in14_pc4 */ \
	101, /* /soc/pin-controller@40020000/adc2_in15_pc5 */ \
	102, /* /soc/pin-controller@40020000/adc2_in1_pa1 */ \
	103, /* /soc/pin-controller@40020000/adc2_in2_pa2 */ \
	104, /* /soc/pin-controller@40020000/adc2_in3_pa3 */ \
	105, /* /soc/pin-controller@40020000/adc2_in4_pa4 */ \
	106, /* /soc/pin-controller@40020000/adc2_in5_pa5 */ \
	107, /* /soc/pin-controller@40020000/adc2_in6_pa6 */ \
	108, /* /soc/pin-controller@40020000/adc2_in7_pa7 */ \
	109, /* /soc/pin-controller@40020000/adc2_in8_pb0 */ \
	110, /* /soc/pin-controller@40020000/adc2_in9_pb1 */ \
	111, /* /soc/pin-controller@40020000/adc3_in0_pa0 */ \
	112, /* /soc/pin-controller@40020000/adc3_in10_pc0 */ \
	113, /* /soc/pin-controller@40020000/adc3_in11_pc1 */ \
	114, /* /soc/pin-controller@40020000/adc3_in12_pc2 */ \
	115, /* /soc/pin-controller@40020000/adc3_in13_pc3 */ \
	116, /* /soc/pin-controller@40020000/adc3_in14_pf4 */ \
	117, /* /soc/pin-controller@40020000/adc3_in15_pf5 */ \
	118, /* /soc/pin-controller@40020000/adc3_in1_pa1 */ \
	119, /* /soc/pin-controller@40020000/adc3_in2_pa2 */ \
	120, /* /soc/pin-controller@40020000/adc3_in3_pa3 */ \
	121, /* /soc/pin-controller@40020000/adc3_in4_pf6 */ \
	122, /* /soc/pin-controller@40020000/adc3_in5_pf7 */ \
	123, /* /soc/pin-controller@40020000/adc3_in6_pf8 */ \
	124, /* /soc/pin-controller@40020000/adc3_in7_pf9 */ \
	125, /* /soc/pin-controller@40020000/adc3_in8_pf10 */ \
	126, /* /soc/pin-controller@40020000/adc3_in9_pf3 */ \
	127, /* /soc/pin-controller@40020000/can1_rx_pa11 */ \
	128, /* /soc/pin-controller@40020000/can1_rx_pb8 */ \
	129, /* /soc/pin-controller@40020000/can1_rx_pd0 */ \
	130, /* /soc/pin-controller@40020000/can1_tx_pa12 */ \
	131, /* /soc/pin-controller@40020000/can1_tx_pb9 */ \
	132, /* /soc/pin-controller@40020000/can1_tx_pd1 */ \
	133, /* /soc/pin-controller@40020000/can2_rx_pb12 */ \
	134, /* /soc/pin-controller@40020000/can2_rx_pb5 */ \
	135, /* /soc/pin-controller@40020000/can2_tx_pb13 */ \
	136, /* /soc/pin-controller@40020000/can2_tx_pb6 */ \
	137, /* /soc/pin-controller@40020000/dac_out1_pa4 */ \
	138, /* /soc/pin-controller@40020000/dac_out2_pa5 */ \
	139, /* /soc/pin-controller@40020000/eth_crs_pa0 */ \
	140, /* /soc/pin-controller@40020000/eth_pps_out_pb5 */ \
	141, /* /soc/pin-controller@40020000/eth_pps_out_pg8 */ \
	142, /* /soc/pin-controller@40020000/eth_rx_clk_pa1 */ \
	143, /* /soc/pin-controller@40020000/eth_rx_dv_pa7 */ \
	144, /* /soc/pin-controller@40020000/eth_rx_er_pb10 */ \
	145, /* /soc/pin-controller@40020000/eth_rxd2_pb0 */ \
	146, /* /soc/pin-controller@40020000/eth_rxd3_pb1 */ \
	147, /* /soc/pin-controller@40020000/eth_tx_clk_pc3 */ \
	148, /* /soc/pin-controller@40020000/eth_tx_en_pb11 */ \
	149, /* /soc/pin-controller@40020000/eth_txd0_pb12 */ \
	150, /* /soc/pin-controller@40020000/eth_txd1_pb13 */ \
	151, /* /soc/pin-controller@40020000/eth_txd2_pc2 */ \
	152, /* /soc/pin-controller@40020000/eth_txd3_pb8 */ \
	153, /* /soc/pin-controller@40020000/eth_txd3_pe2 */ \
	154, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	155, /* /soc/pin-controller@40020000/gpio@40021000 */ \
	156, /* /soc/pin-controller@40020000/gpio@40021400 */ \
	157, /* /soc/pin-controller@40020000/gpio@40021800 */ \
	158, /* /soc/pin-controller@40020000/gpio@40021c00 */ \
	159, /* /soc/pin-controller@40020000/gpio@40022000 */ \
	160, /* /soc/pin-controller@40020000/i2c1_scl_pb6 */ \
	161, /* /soc/pin-controller@40020000/i2c1_scl_pb8 */ \
	162, /* /soc/pin-controller@40020000/i2c1_sda_pb7 */ \
	163, /* /soc/pin-controller@40020000/i2c1_sda_pb9 */ \
	164, /* /soc/pin-controller@40020000/i2c2_scl_pb10 */ \
	165, /* /soc/pin-controller@40020000/i2c2_scl_pf1 */ \
	166, /* /soc/pin-controller@40020000/i2c2_sda_pb11 */ \
	167, /* /soc/pin-controller@40020000/i2c2_sda_pf0 */ \
	168, /* /soc/pin-controller@40020000/i2c3_scl_pa8 */ \
	169, /* /soc/pin-controller@40020000/i2c3_sda_pc9 */ \
	170, /* /soc/pin-controller@40020000/i2s2_ck_pb10 */ \
	171, /* /soc/pin-controller@40020000/i2s2_ck_pb13 */ \
	172, /* /soc/pin-controller@40020000/i2s2_sd_pb15 */ \
	173, /* /soc/pin-controller@40020000/i2s2_sd_pc3 */ \
	174, /* /soc/pin-controller@40020000/i2s2_ws_pb12 */ \
	175, /* /soc/pin-controller@40020000/i2s2_ws_pb9 */ \
	176, /* /soc/pin-controller@40020000/i2s3_ck_pb3 */ \
	177, /* /soc/pin-controller@40020000/i2s3_ck_pc10 */ \
	178, /* /soc/pin-controller@40020000/i2s3_sd_pb5 */ \
	179, /* /soc/pin-controller@40020000/i2s3_sd_pc12 */ \
	180, /* /soc/pin-controller@40020000/i2s3_ws_pa15 */ \
	181, /* /soc/pin-controller@40020000/i2s3_ws_pa4 */ \
	182, /* /soc/pin-controller@40020000/spi1_miso_pa6 */ \
	183, /* /soc/pin-controller@40020000/spi1_miso_pb4 */ \
	184, /* /soc/pin-controller@40020000/spi1_mosi_pa7 */ \
	185, /* /soc/pin-controller@40020000/spi1_mosi_pb5 */ \
	186, /* /soc/pin-controller@40020000/spi1_nss_pa15 */ \
	187, /* /soc/pin-controller@40020000/spi1_nss_pa4 */ \
	188, /* /soc/pin-controller@40020000/spi1_sck_pa5 */ \
	189, /* /soc/pin-controller@40020000/spi1_sck_pb3 */ \
	190, /* /soc/pin-controller@40020000/spi2_miso_pb14 */ \
	191, /* /soc/pin-controller@40020000/spi2_miso_pc2 */ \
	192, /* /soc/pin-controller@40020000/spi2_mosi_pb15 */ \
	193, /* /soc/pin-controller@40020000/spi2_mosi_pc3 */ \
	194, /* /soc/pin-controller@40020000/spi2_nss_pb12 */ \
	195, /* /soc/pin-controller@40020000/spi2_nss_pb9 */ \
	196, /* /soc/pin-controller@40020000/spi2_sck_pb10 */ \
	197, /* /soc/pin-controller@40020000/spi2_sck_pb13 */ \
	198, /* /soc/pin-controller@40020000/spi3_miso_pb4 */ \
	199, /* /soc/pin-controller@40020000/spi3_miso_pc11 */ \
	200, /* /soc/pin-controller@40020000/spi3_mosi_pb5 */ \
	201, /* /soc/pin-controller@40020000/spi3_mosi_pc12 */ \
	202, /* /soc/pin-controller@40020000/spi3_nss_pa15 */ \
	203, /* /soc/pin-controller@40020000/spi3_nss_pa4 */ \
	204, /* /soc/pin-controller@40020000/spi3_sck_pb3 */ \
	205, /* /soc/pin-controller@40020000/spi3_sck_pc10 */ \
	206, /* /soc/pin-controller@40020000/tim10_ch1_pb8 */ \
	207, /* /soc/pin-controller@40020000/tim10_ch1_pf6 */ \
	208, /* /soc/pin-controller@40020000/tim11_ch1_pb9 */ \
	209, /* /soc/pin-controller@40020000/tim11_ch1_pf7 */ \
	210, /* /soc/pin-controller@40020000/tim12_ch1_pb14 */ \
	211, /* /soc/pin-controller@40020000/tim12_ch2_pb15 */ \
	212, /* /soc/pin-controller@40020000/tim13_ch1_pa6 */ \
	213, /* /soc/pin-controller@40020000/tim13_ch1_pf8 */ \
	214, /* /soc/pin-controller@40020000/tim14_ch1_pa7 */ \
	215, /* /soc/pin-controller@40020000/tim14_ch1_pf9 */ \
	216, /* /soc/pin-controller@40020000/tim1_ch1_pa8 */ \
	217, /* /soc/pin-controller@40020000/tim1_ch1_pe9 */ \
	218, /* /soc/pin-controller@40020000/tim1_ch1n_pa7 */ \
	219, /* /soc/pin-controller@40020000/tim1_ch1n_pb13 */ \
	220, /* /soc/pin-controller@40020000/tim1_ch1n_pe8 */ \
	221, /* /soc/pin-controller@40020000/tim1_ch2_pa9 */ \
	222, /* /soc/pin-controller@40020000/tim1_ch2_pe11 */ \
	223, /* /soc/pin-controller@40020000/tim1_ch2n_pb0 */ \
	224, /* /soc/pin-controller@40020000/tim1_ch2n_pb14 */ \
	225, /* /soc/pin-controller@40020000/tim1_ch2n_pe10 */ \
	226, /* /soc/pin-controller@40020000/tim1_ch3_pa10 */ \
	227, /* /soc/pin-controller@40020000/tim1_ch3_pe13 */ \
	228, /* /soc/pin-controller@40020000/tim1_ch3n_pb1 */ \
	229, /* /soc/pin-controller@40020000/tim1_ch3n_pb15 */ \
	230, /* /soc/pin-controller@40020000/tim1_ch3n_pe12 */ \
	231, /* /soc/pin-controller@40020000/tim1_ch4_pa11 */ \
	232, /* /soc/pin-controller@40020000/tim1_ch4_pe14 */ \
	233, /* /soc/pin-controller@40020000/tim2_ch1_pa0 */ \
	234, /* /soc/pin-controller@40020000/tim2_ch1_pa15 */ \
	235, /* /soc/pin-controller@40020000/tim2_ch1_pa5 */ \
	236, /* /soc/pin-controller@40020000/tim2_ch2_pa1 */ \
	237, /* /soc/pin-controller@40020000/tim2_ch2_pb3 */ \
	238, /* /soc/pin-controller@40020000/tim2_ch3_pa2 */ \
	239, /* /soc/pin-controller@40020000/tim2_ch3_pb10 */ \
	240, /* /soc/pin-controller@40020000/tim2_ch4_pa3 */ \
	241, /* /soc/pin-controller@40020000/tim2_ch4_pb11 */ \
	242, /* /soc/pin-controller@40020000/tim3_ch1_pa6 */ \
	243, /* /soc/pin-controller@40020000/tim3_ch1_pb4 */ \
	244, /* /soc/pin-controller@40020000/tim3_ch1_pc6 */ \
	245, /* /soc/pin-controller@40020000/tim3_ch2_pa7 */ \
	246, /* /soc/pin-controller@40020000/tim3_ch2_pb5 */ \
	247, /* /soc/pin-controller@40020000/tim3_ch2_pc7 */ \
	248, /* /soc/pin-controller@40020000/tim3_ch3_pb0 */ \
	249, /* /soc/pin-controller@40020000/tim3_ch3_pc8 */ \
	250, /* /soc/pin-controller@40020000/tim3_ch4_pb1 */ \
	251, /* /soc/pin-controller@40020000/tim3_ch4_pc9 */ \
	252, /* /soc/pin-controller@40020000/tim4_ch1_pb6 */ \
	253, /* /soc/pin-controller@40020000/tim4_ch1_pd12 */ \
	254, /* /soc/pin-controller@40020000/tim4_ch2_pb7 */ \
	255, /* /soc/pin-controller@40020000/tim4_ch2_pd13 */ \
	256, /* /soc/pin-controller@40020000/tim4_ch3_pb8 */ \
	257, /* /soc/pin-controller@40020000/tim4_ch3_pd14 */ \
	258, /* /soc/pin-controller@40020000/tim4_ch4_pb9 */ \
	259, /* /soc/pin-controller@40020000/tim4_ch4_pd15 */ \
	260, /* /soc/pin-controller@40020000/tim5_ch1_pa0 */ \
	261, /* /soc/pin-controller@40020000/tim5_ch2_pa1 */ \
	262, /* /soc/pin-controller@40020000/tim5_ch3_pa2 */ \
	263, /* /soc/pin-controller@40020000/tim5_ch4_pa3 */ \
	264, /* /soc/pin-controller@40020000/tim8_ch1_pc6 */ \
	265, /* /soc/pin-controller@40020000/tim8_ch1n_pa5 */ \
	266, /* /soc/pin-controller@40020000/tim8_ch1n_pa7 */ \
	267, /* /soc/pin-controller@40020000/tim8_ch2_pc7 */ \
	268, /* /soc/pin-controller@40020000/tim8_ch2n_pb0 */ \
	269, /* /soc/pin-controller@40020000/tim8_ch2n_pb14 */ \
	270, /* /soc/pin-controller@40020000/tim8_ch3_pc8 */ \
	271, /* /soc/pin-controller@40020000/tim8_ch3n_pb1 */ \
	272, /* /soc/pin-controller@40020000/tim8_ch3n_pb15 */ \
	273, /* /soc/pin-controller@40020000/tim8_ch4_pc9 */ \
	274, /* /soc/pin-controller@40020000/tim9_ch1_pa2 */ \
	275, /* /soc/pin-controller@40020000/tim9_ch1_pe5 */ \
	276, /* /soc/pin-controller@40020000/tim9_ch2_pa3 */ \
	277, /* /soc/pin-controller@40020000/tim9_ch2_pe6 */ \
	278, /* /soc/pin-controller@40020000/uart4_rx_pa1 */ \
	279, /* /soc/pin-controller@40020000/uart4_rx_pc11 */ \
	280, /* /soc/pin-controller@40020000/uart4_tx_pa0 */ \
	281, /* /soc/pin-controller@40020000/uart4_tx_pc10 */ \
	282, /* /soc/pin-controller@40020000/uart5_rx_pd2 */ \
	283, /* /soc/pin-controller@40020000/uart5_tx_pc12 */ \
	284, /* /soc/pin-controller@40020000/usart1_cts_pa11 */ \
	285, /* /soc/pin-controller@40020000/usart1_rts_pa12 */ \
	286, /* /soc/pin-controller@40020000/usart1_rx_pa10 */ \
	287, /* /soc/pin-controller@40020000/usart1_tx_pa9 */ \
	288, /* /soc/pin-controller@40020000/usart2_cts_pa0 */ \
	289, /* /soc/pin-controller@40020000/usart2_cts_pd3 */ \
	290, /* /soc/pin-controller@40020000/usart2_rts_pa1 */ \
	291, /* /soc/pin-controller@40020000/usart2_rts_pd4 */ \
	292, /* /soc/pin-controller@40020000/usart2_rx_pa3 */ \
	293, /* /soc/pin-controller@40020000/usart2_rx_pd6 */ \
	294, /* /soc/pin-controller@40020000/usart2_tx_pa2 */ \
	295, /* /soc/pin-controller@40020000/usart2_tx_pd5 */ \
	296, /* /soc/pin-controller@40020000/usart3_cts_pb13 */ \
	297, /* /soc/pin-controller@40020000/usart3_cts_pd11 */ \
	298, /* /soc/pin-controller@40020000/usart3_rts_pb14 */ \
	299, /* /soc/pin-controller@40020000/usart3_rts_pd12 */ \
	300, /* /soc/pin-controller@40020000/usart3_rx_pc11 */ \
	301, /* /soc/pin-controller@40020000/usart3_rx_pd9 */ \
	302, /* /soc/pin-controller@40020000/usart3_tx_pc10 */ \
	303, /* /soc/pin-controller@40020000/usart3_tx_pd8 */ \
	304, /* /soc/pin-controller@40020000/usart6_cts_pg13 */ \
	305, /* /soc/pin-controller@40020000/usart6_cts_pg15 */ \
	306, /* /soc/pin-controller@40020000/usart6_rts_pg12 */ \
	307, /* /soc/pin-controller@40020000/usart6_rts_pg8 */ \
	308, /* /soc/pin-controller@40020000/usart6_rx_pg9 */ \
	309, /* /soc/pin-controller@40020000/usart6_tx_pg14 */ \
	310, /* /soc/pin-controller@40020000/usb_otg_fs_id_pa10 */ \
	311, /* /soc/pin-controller@40020000/usb_otg_fs_sof_pa8 */ \
	312, /* /soc/pin-controller@40020000/usb_otg_fs_vbus_pa9 */ \
	313, /* /soc/pin-controller@40020000/usb_otg_hs_id_pb12 */ \
	314, /* /soc/pin-controller@40020000/usb_otg_hs_sof_pa4 */ \
	315, /* /soc/pin-controller@40020000/usb_otg_hs_ulpi_d0_pa3 */ \
	316, /* /soc/pin-controller@40020000/usb_otg_hs_ulpi_d1_pb0 */ \
	317, /* /soc/pin-controller@40020000/usb_otg_hs_ulpi_d2_pb1 */ \
	318, /* /soc/pin-controller@40020000/usb_otg_hs_ulpi_d3_pb10 */ \
	319, /* /soc/pin-controller@40020000/usb_otg_hs_ulpi_d4_pb11 */ \
	320, /* /soc/pin-controller@40020000/usb_otg_hs_ulpi_d5_pb12 */ \
	321, /* /soc/pin-controller@40020000/usb_otg_hs_ulpi_d6_pb13 */ \
	322, /* /soc/pin-controller@40020000/usb_otg_hs_ulpi_d7_pb5 */ \
	323, /* /soc/pin-controller@40020000/usb_otg_hs_ulpi_dir_pc2 */ \
	324, /* /soc/pin-controller@40020000/usb_otg_hs_ulpi_nxt_pc3 */ \
	325, /* /soc/pin-controller@40020000/usb_otg_hs_ulpi_stp_pc0 */ \
	326, /* /soc/pin-controller@40020000/usb_otg_hs_vbus_pb13 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_EXISTS 1
#define DT_N_INST_0_st_stm32_pinctrl DT_N_S_soc_S_pin_controller_40020000
#define DT_N_NODELABEL_pinctrl       DT_N_S_soc_S_pin_controller_40020000

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_pin_controller_40020000_REG_IDX_0_VAL_SIZE 9216 /* 0x2400 */
#define DT_N_S_soc_S_pin_controller_40020000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_COMPAT_MATCHES_st_stm32_pinctrl 1
#define DT_N_S_soc_S_pin_controller_40020000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_P_reg {1073872896 /* 0x40020000 */, 9216 /* 0x2400 */}
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_1 9216
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible {"st,stm32-pinctrl"}
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_IDX_0 "st,stm32-pinctrl"
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_EXISTS 1

/*
 * Devicetree node: /clocks/clk-hse
 *
 * Node identifier: DT_N_S_clocks_S_clk_hse
 *
 * Binding (compatible = st,stm32-hse-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32-hse-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hse_PATH "/clocks/clk-hse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hse_FULL_NAME "clk-hse"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hse_PARENT DT_N_S_clocks
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hse_ORD 14

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hse_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hse_SUPPORTS_ORDS \
	15, /* /clocks/pll */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hse_EXISTS 1
#define DT_N_INST_0_st_stm32_hse_clock DT_N_S_clocks_S_clk_hse
#define DT_N_NODELABEL_clk_hse         DT_N_S_clocks_S_clk_hse

/* Special property macros: */
#define DT_N_S_clocks_S_clk_hse_REG_NUM 0
#define DT_N_S_clocks_S_clk_hse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hse_COMPAT_MATCHES_st_stm32_hse_clock 1
#define DT_N_S_clocks_S_clk_hse_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass 0
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_clock_frequency 12000000
#define DT_N_S_clocks_S_clk_hse_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/pll
 *
 * Node identifier: DT_N_S_clocks_S_pll
 *
 * Binding (compatible = st,stm32f4-pll-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32f4-pll-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pll_PATH "/clocks/pll"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pll_FULL_NAME "pll"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pll_PARENT DT_N_S_clocks
#define DT_N_S_clocks_S_pll_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pll_ORD 15

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pll_REQUIRES_ORDS \
	5, /* /clocks */ \
	14, /* /clocks/clk-hse */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pll_SUPPORTS_ORDS \
	16, /* /soc/rcc@40023800 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pll_EXISTS 1
#define DT_N_INST_0_st_stm32f4_pll_clock DT_N_S_clocks_S_pll
#define DT_N_NODELABEL_pll               DT_N_S_clocks_S_pll

/* Special property macros: */
#define DT_N_S_clocks_S_pll_REG_NUM 0
#define DT_N_S_clocks_S_pll_IRQ_NUM 0
#define DT_N_S_clocks_S_pll_COMPAT_MATCHES_st_stm32f4_pll_clock 1
#define DT_N_S_clocks_S_pll_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_PH DT_N_S_clocks_S_clk_hse
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, clocks, 0)
#define DT_N_S_clocks_S_pll_P_clocks_LEN 1
#define DT_N_S_clocks_S_pll_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_m 6
#define DT_N_S_clocks_S_pll_P_div_m_EXISTS 1
#define DT_N_S_clocks_S_pll_P_mul_n 168
#define DT_N_S_clocks_S_pll_P_mul_n_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_p 2
#define DT_N_S_clocks_S_pll_P_div_p_ENUM_IDX 0
#define DT_N_S_clocks_S_pll_P_div_p_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_q 7
#define DT_N_S_clocks_S_pll_P_div_q_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status "okay"
#define DT_N_S_clocks_S_pll_P_status_ENUM_IDX 1
#define DT_N_S_clocks_S_pll_P_status_ENUM_TOKEN okay
#define DT_N_S_clocks_S_pll_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, status, 0) \
	fn(DT_N_S_clocks_S_pll, status, 1) \
	fn(DT_N_S_clocks_S_pll, status, 2) \
	fn(DT_N_S_clocks_S_pll, status, 3)
#define DT_N_S_clocks_S_pll_P_status_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible {"st,stm32f4-pll-clock"}
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0 "st,stm32f4-pll-clock"
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, compatible, 0)
#define DT_N_S_clocks_S_pll_P_compatible_LEN 1
#define DT_N_S_clocks_S_pll_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/rcc@40023800
 *
 * Node identifier: DT_N_S_soc_S_rcc_40023800
 *
 * Binding (compatible = st,stm32-rcc):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32-rcc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rcc_40023800_PATH "/soc/rcc@40023800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rcc_40023800_FULL_NAME "rcc@40023800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rcc_40023800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_rcc_40023800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rcc_40023800_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rcc_40023800_ORD 16

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rcc_40023800_REQUIRES_ORDS \
	12, /* /soc */ \
	15, /* /clocks/pll */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rcc_40023800_SUPPORTS_ORDS \
	17, /* /soc/pin-controller@40020000/gpio@40020000 */ \
	20, /* /soc/pin-controller@40020000/gpio@40020800 */ \
	23, /* /soc/adc@40012000 */ \
	24, /* /soc/can@40006400 */ \
	25, /* /soc/can@40006800 */ \
	26, /* /soc/dac@40007400 */ \
	27, /* /soc/dma@40026400 */ \
	38, /* /soc/ethernet@40028000 */ \
	39, /* /soc/i2c@40005400 */ \
	40, /* /soc/i2c@40005800 */ \
	41, /* /soc/i2c@40005c00 */ \
	42, /* /soc/dma@40026000 */ \
	43, /* /soc/i2s@40003800 */ \
	44, /* /soc/i2s@40003c00 */ \
	46, /* /soc/memory@40024000 */ \
	47, /* /soc/rng@50060800 */ \
	48, /* /soc/rtc@40002800 */ \
	49, /* /soc/serial@40004400 */ \
	52, /* /soc/serial@40004800 */ \
	53, /* /soc/serial@40004c00 */ \
	54, /* /soc/serial@40005000 */ \
	57, /* /soc/serial@40011000 */ \
	60, /* /soc/serial@40011400 */ \
	61, /* /soc/spi@40003800 */ \
	62, /* /soc/spi@40003c00 */ \
	63, /* /soc/pin-controller@40020000/gpio@40020400 */ \
	64, /* /soc/spi@40013000 */ \
	65, /* /soc/spi@40013400 */ \
	70, /* /soc/usb@40040000 */ \
	74, /* /soc/usb@50000000 */ \
	75, /* /soc/watchdog@40002c00 */ \
	154, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	155, /* /soc/pin-controller@40020000/gpio@40021000 */ \
	156, /* /soc/pin-controller@40020000/gpio@40021400 */ \
	157, /* /soc/pin-controller@40020000/gpio@40021800 */ \
	158, /* /soc/pin-controller@40020000/gpio@40021c00 */ \
	159, /* /soc/pin-controller@40020000/gpio@40022000 */ \
	327, /* /soc/timers@40000000 */ \
	329, /* /soc/timers@40000400 */ \
	331, /* /soc/timers@40000800 */ \
	333, /* /soc/timers@40000c00 */ \
	335, /* /soc/timers@40001000 */ \
	337, /* /soc/timers@40001400 */ \
	339, /* /soc/timers@40001800 */ \
	341, /* /soc/timers@40001c00 */ \
	343, /* /soc/timers@40002000 */ \
	345, /* /soc/timers@40010000 */ \
	347, /* /soc/timers@40010400 */ \
	349, /* /soc/timers@40014000 */ \
	351, /* /soc/timers@40014400 */ \
	353, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rcc_40023800_EXISTS 1
#define DT_N_INST_0_st_stm32_rcc DT_N_S_soc_S_rcc_40023800
#define DT_N_NODELABEL_rcc       DT_N_S_soc_S_rcc_40023800

/* Special property macros: */
#define DT_N_S_soc_S_rcc_40023800_REG_NUM 1
#define DT_N_S_soc_S_rcc_40023800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_REG_IDX_0_VAL_ADDRESS 1073887232 /* 0x40023800 */
#define DT_N_S_soc_S_rcc_40023800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rcc_40023800_IRQ_NUM 0
#define DT_N_S_soc_S_rcc_40023800_COMPAT_MATCHES_st_stm32_rcc 1
#define DT_N_S_soc_S_rcc_40023800_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_rcc_40023800_P_reg {1073887232 /* 0x40023800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rcc_40023800_P_reg_IDX_0 1073887232
#define DT_N_S_soc_S_rcc_40023800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rcc_40023800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40023800, reg, 0) \
	fn(DT_N_S_soc_S_rcc_40023800, reg, 1)
#define DT_N_S_soc_S_rcc_40023800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_clock_frequency 168000000
#define DT_N_S_soc_S_rcc_40023800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_ahb_prescaler 1
#define DT_N_S_soc_S_rcc_40023800_P_ahb_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_40023800_P_ahb_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_apb1_prescaler 4
#define DT_N_S_soc_S_rcc_40023800_P_apb1_prescaler_ENUM_IDX 2
#define DT_N_S_soc_S_rcc_40023800_P_apb1_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_apb2_prescaler 2
#define DT_N_S_soc_S_rcc_40023800_P_apb2_prescaler_ENUM_IDX 1
#define DT_N_S_soc_S_rcc_40023800_P_apb2_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_compatible {"st,stm32-rcc"}
#define DT_N_S_soc_S_rcc_40023800_P_compatible_IDX_0 "st,stm32-rcc"
#define DT_N_S_soc_S_rcc_40023800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40023800, compatible, 0)
#define DT_N_S_soc_S_rcc_40023800_P_compatible_LEN 1
#define DT_N_S_soc_S_rcc_40023800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_clocks_IDX_0_PH DT_N_S_clocks_S_pll
#define DT_N_S_soc_S_rcc_40023800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40023800, clocks, 0)
#define DT_N_S_soc_S_rcc_40023800_P_clocks_LEN 1
#define DT_N_S_soc_S_rcc_40023800_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_PATH "/soc/pin-controller@40020000/gpio@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FULL_NAME "gpio@40020000"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_ORD 17

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_SUPPORTS_ORDS \
	18, /* /gpio_keys/button */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_EXISTS 1
#define DT_N_INST_0_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000
#define DT_N_NODELABEL_gpioa      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg {1073872896 /* 0x40020000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_label "GPIOA"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button
 *
 * Node identifier: DT_N_S_gpio_keys_S_button
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_PATH "/gpio_keys/button"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_FULL_NAME "button"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_PARENT DT_N_S_gpio_keys
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_ORD 18

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_REQUIRES_ORDS \
	11, /* /gpio_keys */ \
	17, /* /soc/pin-controller@40020000/gpio@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_EXISTS 1
#define DT_N_ALIAS_sw0             DT_N_S_gpio_keys_S_button
#define DT_N_NODELABEL_user_button DT_N_S_gpio_keys_S_button

/* Special property macros: */
#define DT_N_S_gpio_keys_S_button_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_pin 0
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button, gpios, 0)
#define DT_N_S_gpio_keys_S_button_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_label "Key"
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button, label, 0) \
	fn(DT_N_S_gpio_keys_S_button, label, 1) \
	fn(DT_N_S_gpio_keys_S_button, label, 2)
#define DT_N_S_gpio_keys_S_button_P_label_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_1)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_1) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 19

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	21, /* /leds/led_1 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Special property macros: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* (No generic property macros) */

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_PATH "/soc/pin-controller@40020000/gpio@40020800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FULL_NAME "gpio@40020800"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_ORD 20

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_SUPPORTS_ORDS \
	21, /* /leds/led_1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_EXISTS 1
#define DT_N_INST_2_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
#define DT_N_NODELABEL_gpioc      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_IDX_0_VAL_ADDRESS 1073874944 /* 0x40020800 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg {1073874944 /* 0x40020800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_0 1073874944
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_label "GPIOC"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_1
 *
 * Node identifier: DT_N_S_leds_S_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_1_PATH "/leds/led_1"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_1_FULL_NAME "led_1"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_1_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_1_ORD 21

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_1_REQUIRES_ORDS \
	19, /* /leds */ \
	20, /* /soc/pin-controller@40020000/gpio@40020800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_1_EXISTS 1
#define DT_N_ALIAS_led0            DT_N_S_leds_S_led_1
#define DT_N_NODELABEL_green_led_1 DT_N_S_leds_S_led_1

/* Special property macros: */
#define DT_N_S_leds_S_led_1_REG_NUM 0
#define DT_N_S_leds_S_led_1_IRQ_NUM 0
#define DT_N_S_leds_S_led_1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin 13
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_LEN 1
#define DT_N_S_leds_S_led_1_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label "LED1"
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, label, 0) \
	fn(DT_N_S_leds_S_led_1, label, 1) \
	fn(DT_N_S_leds_S_led_1, label, 2) \
	fn(DT_N_S_leds_S_led_1, label, 3)
#define DT_N_S_leds_S_led_1_P_label_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 22

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	12, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	23, /* /soc/adc@40012000 */ \
	24, /* /soc/can@40006400 */ \
	25, /* /soc/can@40006800 */ \
	27, /* /soc/dma@40026400 */ \
	38, /* /soc/ethernet@40028000 */ \
	39, /* /soc/i2c@40005400 */ \
	40, /* /soc/i2c@40005800 */ \
	41, /* /soc/i2c@40005c00 */ \
	42, /* /soc/dma@40026000 */ \
	43, /* /soc/i2s@40003800 */ \
	44, /* /soc/i2s@40003c00 */ \
	47, /* /soc/rng@50060800 */ \
	48, /* /soc/rtc@40002800 */ \
	49, /* /soc/serial@40004400 */ \
	52, /* /soc/serial@40004800 */ \
	53, /* /soc/serial@40004c00 */ \
	54, /* /soc/serial@40005000 */ \
	57, /* /soc/serial@40011000 */ \
	60, /* /soc/serial@40011400 */ \
	61, /* /soc/spi@40003800 */ \
	62, /* /soc/spi@40003c00 */ \
	64, /* /soc/spi@40013000 */ \
	65, /* /soc/spi@40013400 */ \
	70, /* /soc/usb@40040000 */ \
	74, /* /soc/usb@50000000 */ \
	75, /* /soc/watchdog@40002c00 */ \
	77, /* /soc/flash-controller@40023c00 */ \
	327, /* /soc/timers@40000000 */ \
	329, /* /soc/timers@40000400 */ \
	331, /* /soc/timers@40000800 */ \
	333, /* /soc/timers@40000c00 */ \
	335, /* /soc/timers@40001000 */ \
	337, /* /soc/timers@40001400 */ \
	339, /* /soc/timers@40001800 */ \
	341, /* /soc/timers@40001c00 */ \
	343, /* /soc/timers@40002000 */ \
	345, /* /soc/timers@40010000 */ \
	347, /* /soc/timers@40010400 */ \
	349, /* /soc/timers@40014000 */ \
	351, /* /soc/timers@40014400 */ \
	353, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Special property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 4
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/adc@40012000
 *
 * Node identifier: DT_N_S_soc_S_adc_40012000
 *
 * Binding (compatible = st,stm32-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/st,stm32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_40012000_PATH "/soc/adc@40012000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_40012000_FULL_NAME "adc@40012000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_40012000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_40012000_ORD 23

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_40012000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_40012000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_40012000_EXISTS 1
#define DT_N_INST_0_st_stm32_adc DT_N_S_soc_S_adc_40012000
#define DT_N_NODELABEL_adc1      DT_N_S_soc_S_adc_40012000

/* Special property macros: */
#define DT_N_S_soc_S_adc_40012000_REG_NUM 1
#define DT_N_S_soc_S_adc_40012000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_REG_IDX_0_VAL_ADDRESS 1073815552 /* 0x40012000 */
#define DT_N_S_soc_S_adc_40012000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_adc_40012000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_COMPAT_MATCHES_st_stm32_adc 1
#define DT_N_S_soc_S_adc_40012000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_adc_40012000_P_reg {1073815552 /* 0x40012000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_0 1073815552
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, reg, 0) \
	fn(DT_N_S_soc_S_adc_40012000, reg, 1)
#define DT_N_S_soc_S_adc_40012000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_VAL_bits 256
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, clocks, 0)
#define DT_N_S_soc_S_adc_40012000_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, interrupts, 0) \
	fn(DT_N_S_soc_S_adc_40012000, interrupts, 1)
#define DT_N_S_soc_S_adc_40012000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_label "ADC_1"
#define DT_N_S_soc_S_adc_40012000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, label, 0) \
	fn(DT_N_S_soc_S_adc_40012000, label, 1) \
	fn(DT_N_S_soc_S_adc_40012000, label, 2) \
	fn(DT_N_S_soc_S_adc_40012000, label, 3) \
	fn(DT_N_S_soc_S_adc_40012000, label, 4)
#define DT_N_S_soc_S_adc_40012000_P_label_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_status "disabled"
#define DT_N_S_soc_S_adc_40012000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_adc_40012000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_adc_40012000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_40012000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, status, 0) \
	fn(DT_N_S_soc_S_adc_40012000, status, 1) \
	fn(DT_N_S_soc_S_adc_40012000, status, 2) \
	fn(DT_N_S_soc_S_adc_40012000, status, 3) \
	fn(DT_N_S_soc_S_adc_40012000, status, 4) \
	fn(DT_N_S_soc_S_adc_40012000, status, 5) \
	fn(DT_N_S_soc_S_adc_40012000, status, 6) \
	fn(DT_N_S_soc_S_adc_40012000, status, 7)
#define DT_N_S_soc_S_adc_40012000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_compatible {"st,stm32-adc"}
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_0 "st,stm32-adc"
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, compatible, 0)
#define DT_N_S_soc_S_adc_40012000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_40012000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/can@40006400
 *
 * Node identifier: DT_N_S_soc_S_can_40006400
 *
 * Binding (compatible = st,stm32-can):
 *   $ZEPHYR_BASE/dts/bindings/can/st,stm32-can.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_can_40006400_PATH "/soc/can@40006400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_can_40006400_FULL_NAME "can@40006400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_can_40006400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_can_40006400_ORD 24

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_can_40006400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_can_40006400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_can_40006400_EXISTS 1
#define DT_N_INST_0_st_stm32_can DT_N_S_soc_S_can_40006400
#define DT_N_NODELABEL_can1      DT_N_S_soc_S_can_40006400

/* Special property macros: */
#define DT_N_S_soc_S_can_40006400_REG_NUM 1
#define DT_N_S_soc_S_can_40006400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_REG_IDX_0_VAL_ADDRESS 1073767424 /* 0x40006400 */
#define DT_N_S_soc_S_can_40006400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_can_40006400_IRQ_NUM 4
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_irq 19
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_irq 20
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_irq 21
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_irq 22
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_COMPAT_MATCHES_st_stm32_can 1
#define DT_N_S_soc_S_can_40006400_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_can_40006400_P_reg {1073767424 /* 0x40006400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_can_40006400_P_reg_IDX_0 1073767424
#define DT_N_S_soc_S_can_40006400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_can_40006400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, reg, 0) \
	fn(DT_N_S_soc_S_can_40006400, reg, 1)
#define DT_N_S_soc_S_can_40006400_P_reg_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts {19 /* 0x13 */, 0 /* 0x0 */, 20 /* 0x14 */, 0 /* 0x0 */, 21 /* 0x15 */, 0 /* 0x0 */, 22 /* 0x16 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_0 19
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_2 20
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_4 21
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_6 22
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, interrupts, 0) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 1) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 2) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 3) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 4) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 5) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 6) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 7)
#define DT_N_S_soc_S_can_40006400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bits 33554432
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, clocks, 0)
#define DT_N_S_soc_S_can_40006400_P_clocks_LEN 1
#define DT_N_S_soc_S_can_40006400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_label "CAN_1"
#define DT_N_S_soc_S_can_40006400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, label, 0) \
	fn(DT_N_S_soc_S_can_40006400, label, 1) \
	fn(DT_N_S_soc_S_can_40006400, label, 2) \
	fn(DT_N_S_soc_S_can_40006400, label, 3) \
	fn(DT_N_S_soc_S_can_40006400, label, 4)
#define DT_N_S_soc_S_can_40006400_P_label_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_bus_speed 125000
#define DT_N_S_soc_S_can_40006400_P_bus_speed_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_sjw 1
#define DT_N_S_soc_S_can_40006400_P_sjw_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_prop_seg 0
#define DT_N_S_soc_S_can_40006400_P_prop_seg_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_phase_seg1 5
#define DT_N_S_soc_S_can_40006400_P_phase_seg1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_phase_seg2 6
#define DT_N_S_soc_S_can_40006400_P_phase_seg2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_status "disabled"
#define DT_N_S_soc_S_can_40006400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_can_40006400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_can_40006400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_40006400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, status, 0) \
	fn(DT_N_S_soc_S_can_40006400, status, 1) \
	fn(DT_N_S_soc_S_can_40006400, status, 2) \
	fn(DT_N_S_soc_S_can_40006400, status, 3) \
	fn(DT_N_S_soc_S_can_40006400, status, 4) \
	fn(DT_N_S_soc_S_can_40006400, status, 5) \
	fn(DT_N_S_soc_S_can_40006400, status, 6) \
	fn(DT_N_S_soc_S_can_40006400, status, 7)
#define DT_N_S_soc_S_can_40006400_P_status_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_compatible {"st,stm32-can"}
#define DT_N_S_soc_S_can_40006400_P_compatible_IDX_0 "st,stm32-can"
#define DT_N_S_soc_S_can_40006400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, compatible, 0)
#define DT_N_S_soc_S_can_40006400_P_compatible_LEN 1
#define DT_N_S_soc_S_can_40006400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names {"TX", "RX0", "RX1", "SCE"}
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_0 "TX"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_1 "RX0"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_2 "RX1"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_3 "SCE"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 1) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 2) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 3)
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/can@40006800
 *
 * Node identifier: DT_N_S_soc_S_can_40006800
 *
 * Binding (compatible = st,stm32-can):
 *   $ZEPHYR_BASE/dts/bindings/can/st,stm32-can.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_can_40006800_PATH "/soc/can@40006800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_can_40006800_FULL_NAME "can@40006800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_can_40006800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_can_40006800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_can_40006800_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_can_40006800_ORD 25

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_can_40006800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_can_40006800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_can_40006800_EXISTS 1
#define DT_N_INST_1_st_stm32_can DT_N_S_soc_S_can_40006800
#define DT_N_NODELABEL_can2      DT_N_S_soc_S_can_40006800

/* Special property macros: */
#define DT_N_S_soc_S_can_40006800_REG_NUM 1
#define DT_N_S_soc_S_can_40006800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006800_REG_IDX_0_VAL_ADDRESS 1073768448 /* 0x40006800 */
#define DT_N_S_soc_S_can_40006800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_can_40006800_IRQ_NUM 4
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_0_VAL_irq 63
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_1_VAL_irq 64
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_2_VAL_irq 65
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_3_VAL_irq 66
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_tx_VAL_irq DT_N_S_soc_S_can_40006800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_tx_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_tx_VAL_priority DT_N_S_soc_S_can_40006800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_tx_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_rx0_VAL_irq DT_N_S_soc_S_can_40006800_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_rx0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_rx0_VAL_priority DT_N_S_soc_S_can_40006800_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_rx0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_rx1_VAL_irq DT_N_S_soc_S_can_40006800_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_rx1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_rx1_VAL_priority DT_N_S_soc_S_can_40006800_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_rx1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_sce_VAL_irq DT_N_S_soc_S_can_40006800_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_sce_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_sce_VAL_priority DT_N_S_soc_S_can_40006800_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_sce_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006800_COMPAT_MATCHES_st_stm32_can 1
#define DT_N_S_soc_S_can_40006800_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_can_40006800_P_reg {1073768448 /* 0x40006800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_can_40006800_P_reg_IDX_0 1073768448
#define DT_N_S_soc_S_can_40006800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_can_40006800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006800, reg, 0) \
	fn(DT_N_S_soc_S_can_40006800, reg, 1)
#define DT_N_S_soc_S_can_40006800_P_reg_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupts {63 /* 0x3f */, 0 /* 0x0 */, 64 /* 0x40 */, 0 /* 0x0 */, 65 /* 0x41 */, 0 /* 0x0 */, 66 /* 0x42 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_0 63
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_2 64
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_4 65
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_6 66
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006800, interrupts, 0) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 1) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 2) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 3) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 4) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 5) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 6) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 7)
#define DT_N_S_soc_S_can_40006800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_can_40006800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_can_40006800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_clocks_IDX_0_VAL_bits 100663296
#define DT_N_S_soc_S_can_40006800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006800, clocks, 0)
#define DT_N_S_soc_S_can_40006800_P_clocks_LEN 1
#define DT_N_S_soc_S_can_40006800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_master_can_reg 1073767424
#define DT_N_S_soc_S_can_40006800_P_master_can_reg_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_label "CAN_2"
#define DT_N_S_soc_S_can_40006800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006800, label, 0) \
	fn(DT_N_S_soc_S_can_40006800, label, 1) \
	fn(DT_N_S_soc_S_can_40006800, label, 2) \
	fn(DT_N_S_soc_S_can_40006800, label, 3) \
	fn(DT_N_S_soc_S_can_40006800, label, 4)
#define DT_N_S_soc_S_can_40006800_P_label_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_bus_speed 125000
#define DT_N_S_soc_S_can_40006800_P_bus_speed_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_sjw 1
#define DT_N_S_soc_S_can_40006800_P_sjw_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_prop_seg 0
#define DT_N_S_soc_S_can_40006800_P_prop_seg_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_phase_seg1 5
#define DT_N_S_soc_S_can_40006800_P_phase_seg1_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_phase_seg2 6
#define DT_N_S_soc_S_can_40006800_P_phase_seg2_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_status "disabled"
#define DT_N_S_soc_S_can_40006800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_can_40006800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_can_40006800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_40006800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006800, status, 0) \
	fn(DT_N_S_soc_S_can_40006800, status, 1) \
	fn(DT_N_S_soc_S_can_40006800, status, 2) \
	fn(DT_N_S_soc_S_can_40006800, status, 3) \
	fn(DT_N_S_soc_S_can_40006800, status, 4) \
	fn(DT_N_S_soc_S_can_40006800, status, 5) \
	fn(DT_N_S_soc_S_can_40006800, status, 6) \
	fn(DT_N_S_soc_S_can_40006800, status, 7)
#define DT_N_S_soc_S_can_40006800_P_status_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_compatible {"st,stm32-can"}
#define DT_N_S_soc_S_can_40006800_P_compatible_IDX_0 "st,stm32-can"
#define DT_N_S_soc_S_can_40006800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006800, compatible, 0)
#define DT_N_S_soc_S_can_40006800_P_compatible_LEN 1
#define DT_N_S_soc_S_can_40006800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupt_names {"TX", "RX0", "RX1", "SCE"}
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_IDX_0 "TX"
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_IDX_1 "RX0"
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_IDX_2 "RX1"
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_IDX_3 "SCE"
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006800, interrupt_names, 0) \
	fn(DT_N_S_soc_S_can_40006800, interrupt_names, 1) \
	fn(DT_N_S_soc_S_can_40006800, interrupt_names, 2) \
	fn(DT_N_S_soc_S_can_40006800, interrupt_names, 3)
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/dac@40007400
 *
 * Node identifier: DT_N_S_soc_S_dac_40007400
 *
 * Binding (compatible = st,stm32-dac):
 *   $ZEPHYR_BASE/dts/bindings/dac/st,stm32-dac.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dac_40007400_PATH "/soc/dac@40007400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dac_40007400_FULL_NAME "dac@40007400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dac_40007400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dac_40007400_ORD 26

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dac_40007400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dac_40007400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dac_40007400_EXISTS 1
#define DT_N_INST_0_st_stm32_dac DT_N_S_soc_S_dac_40007400
#define DT_N_NODELABEL_dac1      DT_N_S_soc_S_dac_40007400

/* Special property macros: */
#define DT_N_S_soc_S_dac_40007400_REG_NUM 1
#define DT_N_S_soc_S_dac_40007400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_REG_IDX_0_VAL_ADDRESS 1073771520 /* 0x40007400 */
#define DT_N_S_soc_S_dac_40007400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dac_40007400_IRQ_NUM 0
#define DT_N_S_soc_S_dac_40007400_COMPAT_MATCHES_st_stm32_dac 1
#define DT_N_S_soc_S_dac_40007400_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_dac_40007400_P_reg {1073771520 /* 0x40007400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_0 1073771520
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, reg, 0) \
	fn(DT_N_S_soc_S_dac_40007400, reg, 1)
#define DT_N_S_soc_S_dac_40007400_P_reg_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_VAL_bits 536870912
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, clocks, 0)
#define DT_N_S_soc_S_dac_40007400_P_clocks_LEN 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_label "DAC_1"
#define DT_N_S_soc_S_dac_40007400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, label, 0) \
	fn(DT_N_S_soc_S_dac_40007400, label, 1) \
	fn(DT_N_S_soc_S_dac_40007400, label, 2) \
	fn(DT_N_S_soc_S_dac_40007400, label, 3) \
	fn(DT_N_S_soc_S_dac_40007400, label, 4)
#define DT_N_S_soc_S_dac_40007400_P_label_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_status "disabled"
#define DT_N_S_soc_S_dac_40007400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dac_40007400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dac_40007400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dac_40007400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, status, 0) \
	fn(DT_N_S_soc_S_dac_40007400, status, 1) \
	fn(DT_N_S_soc_S_dac_40007400, status, 2) \
	fn(DT_N_S_soc_S_dac_40007400, status, 3) \
	fn(DT_N_S_soc_S_dac_40007400, status, 4) \
	fn(DT_N_S_soc_S_dac_40007400, status, 5) \
	fn(DT_N_S_soc_S_dac_40007400, status, 6) \
	fn(DT_N_S_soc_S_dac_40007400, status, 7)
#define DT_N_S_soc_S_dac_40007400_P_status_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_compatible {"st,stm32-dac"}
#define DT_N_S_soc_S_dac_40007400_P_compatible_IDX_0 "st,stm32-dac"
#define DT_N_S_soc_S_dac_40007400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, compatible, 0)
#define DT_N_S_soc_S_dac_40007400_P_compatible_LEN 1
#define DT_N_S_soc_S_dac_40007400_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/dma@40026400
 *
 * Node identifier: DT_N_S_soc_S_dma_40026400
 *
 * Binding (compatible = st,stm32-dma-v1):
 *   $ZEPHYR_BASE/dts/bindings/dma/st,stm32-dma-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40026400_PATH "/soc/dma@40026400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40026400_FULL_NAME "dma@40026400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40026400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40026400_ORD 27

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40026400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40026400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40026400_EXISTS 1
#define DT_N_INST_1_st_stm32_dma_v1 DT_N_S_soc_S_dma_40026400
#define DT_N_NODELABEL_dma2         DT_N_S_soc_S_dma_40026400

/* Special property macros: */
#define DT_N_S_soc_S_dma_40026400_REG_NUM 1
#define DT_N_S_soc_S_dma_40026400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_REG_IDX_0_VAL_ADDRESS 1073898496 /* 0x40026400 */
#define DT_N_S_soc_S_dma_40026400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40026400_IRQ_NUM 8
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_irq 56
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_irq 57
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_irq 58
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_irq 59
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_irq 60
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_irq 68
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_irq 69
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_irq 70
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_COMPAT_MATCHES_st_stm32_dma_v1 1
#define DT_N_S_soc_S_dma_40026400_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40026400_P_reg {1073898496 /* 0x40026400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_0 1073898496
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, reg, 0) \
	fn(DT_N_S_soc_S_dma_40026400, reg, 1)
#define DT_N_S_soc_S_dma_40026400_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts {56 /* 0x38 */, 0 /* 0x0 */, 57 /* 0x39 */, 0 /* 0x0 */, 58 /* 0x3a */, 0 /* 0x0 */, 59 /* 0x3b */, 0 /* 0x0 */, 60 /* 0x3c */, 0 /* 0x0 */, 68 /* 0x44 */, 0 /* 0x0 */, 69 /* 0x45 */, 0 /* 0x0 */, 70 /* 0x46 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_0 56
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_2 57
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_4 58
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_6 59
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_8 60
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_10 68
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_12 69
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_14 70
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, interrupts, 0) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 1) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 2) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 3) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 4) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 5) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 6) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 7) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 8) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 9) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 10) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 11) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 12) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 13) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 14) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 15)
#define DT_N_S_soc_S_dma_40026400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_st_mem2mem 1
#define DT_N_S_soc_S_dma_40026400_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_label "DMA_2"
#define DT_N_S_soc_S_dma_40026400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, label, 0) \
	fn(DT_N_S_soc_S_dma_40026400, label, 1) \
	fn(DT_N_S_soc_S_dma_40026400, label, 2) \
	fn(DT_N_S_soc_S_dma_40026400, label, 3) \
	fn(DT_N_S_soc_S_dma_40026400, label, 4)
#define DT_N_S_soc_S_dma_40026400_P_label_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_status "disabled"
#define DT_N_S_soc_S_dma_40026400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dma_40026400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dma_40026400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40026400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, status, 0) \
	fn(DT_N_S_soc_S_dma_40026400, status, 1) \
	fn(DT_N_S_soc_S_dma_40026400, status, 2) \
	fn(DT_N_S_soc_S_dma_40026400, status, 3) \
	fn(DT_N_S_soc_S_dma_40026400, status, 4) \
	fn(DT_N_S_soc_S_dma_40026400, status, 5) \
	fn(DT_N_S_soc_S_dma_40026400, status, 6) \
	fn(DT_N_S_soc_S_dma_40026400, status, 7)
#define DT_N_S_soc_S_dma_40026400_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_compatible {"st,stm32-dma-v1"}
#define DT_N_S_soc_S_dma_40026400_P_compatible_IDX_0 "st,stm32-dma-v1"
#define DT_N_S_soc_S_dma_40026400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, compatible, 0)
#define DT_N_S_soc_S_dma_40026400_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40026400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_VAL_bits 4194304
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, clocks, 0)
#define DT_N_S_soc_S_dma_40026400_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_col_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_PATH "/soc/pin-controller@40020000/eth_col_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_FULL_NAME "eth_col_pa3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_ORD 28

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_SUPPORTS_ORDS \
	38, /* /soc/ethernet@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_EXISTS 1
#define DT_N_NODELABEL_eth_col_pa3 DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_P_pinmux 779
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_crs_dv_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_PATH "/soc/pin-controller@40020000/eth_crs_dv_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_FULL_NAME "eth_crs_dv_pa7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_ORD 29

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_SUPPORTS_ORDS \
	38, /* /soc/ethernet@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_EXISTS 1
#define DT_N_NODELABEL_eth_crs_dv_pa7 DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_P_pinmux 1803
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_mdc_pc1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_PATH "/soc/pin-controller@40020000/eth_mdc_pc1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_FULL_NAME "eth_mdc_pc1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_ORD 30

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_SUPPORTS_ORDS \
	38, /* /soc/ethernet@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_EXISTS 1
#define DT_N_NODELABEL_eth_mdc_pc1 DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_P_pinmux 8459
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_mdio_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_PATH "/soc/pin-controller@40020000/eth_mdio_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_FULL_NAME "eth_mdio_pa2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_ORD 31

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_SUPPORTS_ORDS \
	38, /* /soc/ethernet@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_EXISTS 1
#define DT_N_NODELABEL_eth_mdio_pa2 DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_P_pinmux 523
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_ref_clk_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_PATH "/soc/pin-controller@40020000/eth_ref_clk_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_FULL_NAME "eth_ref_clk_pa1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_ORD 32

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_SUPPORTS_ORDS \
	38, /* /soc/ethernet@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_EXISTS 1
#define DT_N_NODELABEL_eth_ref_clk_pa1 DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_P_pinmux 267
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_rxd0_pc4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_PATH "/soc/pin-controller@40020000/eth_rxd0_pc4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_FULL_NAME "eth_rxd0_pc4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_ORD 33

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_SUPPORTS_ORDS \
	38, /* /soc/ethernet@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_EXISTS 1
#define DT_N_NODELABEL_eth_rxd0_pc4 DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_P_pinmux 9227
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_rxd1_pc5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_PATH "/soc/pin-controller@40020000/eth_rxd1_pc5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_FULL_NAME "eth_rxd1_pc5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_ORD 34

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_SUPPORTS_ORDS \
	38, /* /soc/ethernet@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_EXISTS 1
#define DT_N_NODELABEL_eth_rxd1_pc5 DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_P_pinmux 9483
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_tx_en_pg11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_PATH "/soc/pin-controller@40020000/eth_tx_en_pg11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_FULL_NAME "eth_tx_en_pg11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_ORD 35

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_SUPPORTS_ORDS \
	38, /* /soc/ethernet@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_EXISTS 1
#define DT_N_NODELABEL_eth_tx_en_pg11 DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_P_pinmux 27403
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_txd0_pg13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_PATH "/soc/pin-controller@40020000/eth_txd0_pg13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_FULL_NAME "eth_txd0_pg13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_ORD 36

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_SUPPORTS_ORDS \
	38, /* /soc/ethernet@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_EXISTS 1
#define DT_N_NODELABEL_eth_txd0_pg13 DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_P_pinmux 27915
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_txd1_pg14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_PATH "/soc/pin-controller@40020000/eth_txd1_pg14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_FULL_NAME "eth_txd1_pg14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_ORD 37

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_SUPPORTS_ORDS \
	38, /* /soc/ethernet@40028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_EXISTS 1
#define DT_N_NODELABEL_eth_txd1_pg14 DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_P_pinmux 28171
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/ethernet@40028000
 *
 * Node identifier: DT_N_S_soc_S_ethernet_40028000
 *
 * Binding (compatible = st,stm32-ethernet):
 *   $ZEPHYR_BASE/dts/bindings/ethernet/st,stm32-ethernet.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ethernet_40028000_PATH "/soc/ethernet@40028000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ethernet_40028000_FULL_NAME "ethernet@40028000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ethernet_40028000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_ethernet_40028000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ethernet_40028000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ethernet_40028000_ORD 38

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ethernet_40028000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */ \
	28, /* /soc/pin-controller@40020000/eth_col_pa3 */ \
	29, /* /soc/pin-controller@40020000/eth_crs_dv_pa7 */ \
	30, /* /soc/pin-controller@40020000/eth_mdc_pc1 */ \
	31, /* /soc/pin-controller@40020000/eth_mdio_pa2 */ \
	32, /* /soc/pin-controller@40020000/eth_ref_clk_pa1 */ \
	33, /* /soc/pin-controller@40020000/eth_rxd0_pc4 */ \
	34, /* /soc/pin-controller@40020000/eth_rxd1_pc5 */ \
	35, /* /soc/pin-controller@40020000/eth_tx_en_pg11 */ \
	36, /* /soc/pin-controller@40020000/eth_txd0_pg13 */ \
	37, /* /soc/pin-controller@40020000/eth_txd1_pg14 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ethernet_40028000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ethernet_40028000_EXISTS 1
#define DT_N_INST_0_st_stm32_ethernet DT_N_S_soc_S_ethernet_40028000
#define DT_N_NODELABEL_mac            DT_N_S_soc_S_ethernet_40028000

/* Special property macros: */
#define DT_N_S_soc_S_ethernet_40028000_REG_NUM 1
#define DT_N_S_soc_S_ethernet_40028000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_REG_IDX_0_VAL_ADDRESS 1073905664 /* 0x40028000 */
#define DT_N_S_soc_S_ethernet_40028000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_soc_S_ethernet_40028000_IRQ_NUM 1
#define DT_N_S_soc_S_ethernet_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_IRQ_IDX_0_VAL_irq 61
#define DT_N_S_soc_S_ethernet_40028000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_ethernet_40028000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_COMPAT_MATCHES_st_stm32_ethernet 1
#define DT_N_S_soc_S_ethernet_40028000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_ethernet_40028000_P_reg {1073905664 /* 0x40028000 */, 32768 /* 0x8000 */}
#define DT_N_S_soc_S_ethernet_40028000_P_reg_IDX_0 1073905664
#define DT_N_S_soc_S_ethernet_40028000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_reg_IDX_1 32768
#define DT_N_S_soc_S_ethernet_40028000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, reg, 0) \
	fn(DT_N_S_soc_S_ethernet_40028000, reg, 1)
#define DT_N_S_soc_S_ethernet_40028000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts {61 /* 0x3d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts_IDX_0 61
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, interrupts, 0) \
	fn(DT_N_S_soc_S_ethernet_40028000, interrupts, 1)
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_VAL_bits 33554432
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_NAME "stmmaceth"
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_stmmaceth_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_stmmaceth_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_stmmaceth_VAL_bus DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_VAL_bus
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_stmmaceth_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_stmmaceth_VAL_bits DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_VAL_bits
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_stmmaceth_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_VAL_bus 0
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_VAL_bits 67108864
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_NAME "mac-clk-tx"
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_tx_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_tx_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_tx_VAL_bus DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_VAL_bus
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_tx_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_tx_VAL_bits DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_VAL_bits
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_tx_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_VAL_bus 0
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_VAL_bits 134217728
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_NAME "mac-clk-rx"
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_rx_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_rx_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_rx_VAL_bus DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_VAL_bus
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_rx_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_rx_VAL_bits DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_VAL_bits
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_rx_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_3_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_3_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_3_VAL_bus 0
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_3_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_3_VAL_bits 268435456
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_3_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_3_NAME "mac-clk-ptp"
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_ptp_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_ptp_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_ptp_VAL_bus DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_3_VAL_bus
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_ptp_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_ptp_VAL_bits DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_3_VAL_bits
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_ptp_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, clocks, 0) \
	fn(DT_N_S_soc_S_ethernet_40028000, clocks, 1) \
	fn(DT_N_S_soc_S_ethernet_40028000, clocks, 2) \
	fn(DT_N_S_soc_S_ethernet_40028000, clocks, 3)
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_LEN 4
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names {"stmmaceth", "mac-clk-tx", "mac-clk-rx", "mac-clk-ptp"}
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_0 "stmmaceth"
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_1 "mac-clk-tx"
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_2 "mac-clk-rx"
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_3 "mac-clk-ptp"
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 0) \
	fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 1) \
	fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 2) \
	fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 3)
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_LEN 4
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_eth_mdc_pc1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd0_pc4
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd1_pc5
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_40020000_S_eth_ref_clk_pa1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_4_PH DT_N_S_soc_S_pin_controller_40020000_S_eth_mdio_pa2
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_4_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_5_PH DT_N_S_soc_S_pin_controller_40020000_S_eth_col_pa3
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_5_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_6_PH DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_dv_pa7
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_6_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_7_PH DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pg11
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_7_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_8_PH DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pg13
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_8_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_9_PH DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pg14
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_IDX_9_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 3) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 4) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 5) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 6) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 7) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 8) \
	fn(DT_N_S_soc_S_ethernet_40028000, pinctrl_0, 9)
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_LEN 10
#define DT_N_S_soc_S_ethernet_40028000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_label "ETH_0"
#define DT_N_S_soc_S_ethernet_40028000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, label, 0) \
	fn(DT_N_S_soc_S_ethernet_40028000, label, 1) \
	fn(DT_N_S_soc_S_ethernet_40028000, label, 2) \
	fn(DT_N_S_soc_S_ethernet_40028000, label, 3) \
	fn(DT_N_S_soc_S_ethernet_40028000, label, 4)
#define DT_N_S_soc_S_ethernet_40028000_P_label_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_zephyr_random_mac_address 0
#define DT_N_S_soc_S_ethernet_40028000_P_zephyr_random_mac_address_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_status "okay"
#define DT_N_S_soc_S_ethernet_40028000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ethernet_40028000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ethernet_40028000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ethernet_40028000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, status, 0) \
	fn(DT_N_S_soc_S_ethernet_40028000, status, 1) \
	fn(DT_N_S_soc_S_ethernet_40028000, status, 2) \
	fn(DT_N_S_soc_S_ethernet_40028000, status, 3)
#define DT_N_S_soc_S_ethernet_40028000_P_status_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_compatible {"st,stm32-ethernet"}
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_IDX_0 "st,stm32-ethernet"
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, compatible, 0)
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_LEN 1
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005400
 *
 * Binding (compatible = st,stm32-i2c-v1):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005400_PATH "/soc/i2c@40005400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005400_FULL_NAME "i2c@40005400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005400_ORD 39

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_EXISTS 1
#define DT_N_INST_0_st_stm32_i2c_v1 DT_N_S_soc_S_i2c_40005400
#define DT_N_NODELABEL_i2c1         DT_N_S_soc_S_i2c_40005400

/* Special property macros: */
#define DT_N_S_soc_S_i2c_40005400_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_ADDRESS 1073763328 /* 0x40005400 */
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005400_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq 31
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq 32
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MATCHES_st_stm32_i2c_v1 1
#define DT_N_S_soc_S_i2c_40005400_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_P_reg {1073763328 /* 0x40005400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0 1073763328
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, reg, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, reg, 1)
#define DT_N_S_soc_S_i2c_40005400_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts {31 /* 0x1f */, 0 /* 0x0 */, 32 /* 0x20 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0 31
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2 32
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 1) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 2) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 3)
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_label "I2C_1"
#define DT_N_S_soc_S_i2c_40005400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, label, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 1) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 2) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 3) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 4)
#define DT_N_S_soc_S_i2c_40005400_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status "disabled"
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, status, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 1) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 2) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 3) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 4) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 5) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 6) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 7)
#define DT_N_S_soc_S_i2c_40005400_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible {"st,stm32-i2c-v1"}
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0 "st,stm32-i2c-v1"
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005800
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005800
 *
 * Binding (compatible = st,stm32-i2c-v1):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005800_PATH "/soc/i2c@40005800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005800_FULL_NAME "i2c@40005800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005800_ORD 40

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005800_EXISTS 1
#define DT_N_INST_1_st_stm32_i2c_v1 DT_N_S_soc_S_i2c_40005800
#define DT_N_NODELABEL_i2c2         DT_N_S_soc_S_i2c_40005800

/* Special property macros: */
#define DT_N_S_soc_S_i2c_40005800_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_ADDRESS 1073764352 /* 0x40005800 */
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005800_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq 34
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MATCHES_st_stm32_i2c_v1 1
#define DT_N_S_soc_S_i2c_40005800_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005800_P_reg {1073764352 /* 0x40005800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0 1073764352
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, reg, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, reg, 1)
#define DT_N_S_soc_S_i2c_40005800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts {33 /* 0x21 */, 0 /* 0x0 */, 34 /* 0x22 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0 33
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_2 34
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 1) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 2) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 3)
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_label "I2C_2"
#define DT_N_S_soc_S_i2c_40005800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, label, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 1) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 2) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 3) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 4)
#define DT_N_S_soc_S_i2c_40005800_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status "disabled"
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, status, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 1) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 2) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 3) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 4) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 5) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 6) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 7)
#define DT_N_S_soc_S_i2c_40005800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible {"st,stm32-i2c-v1"}
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0 "st,stm32-i2c-v1"
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits 4194304
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005c00
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005c00
 *
 * Binding (compatible = st,stm32-i2c-v1):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005c00_PATH "/soc/i2c@40005c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005c00_FULL_NAME "i2c@40005c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005c00_ORD 41

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005c00_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005c00_EXISTS 1
#define DT_N_INST_2_st_stm32_i2c_v1 DT_N_S_soc_S_i2c_40005c00
#define DT_N_NODELABEL_i2c3         DT_N_S_soc_S_i2c_40005c00

/* Special property macros: */
#define DT_N_S_soc_S_i2c_40005c00_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_VAL_ADDRESS 1073765376 /* 0x40005c00 */
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq 72
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq 73
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_MATCHES_st_stm32_i2c_v1 1
#define DT_N_S_soc_S_i2c_40005c00_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005c00_P_reg {1073765376 /* 0x40005c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_0 1073765376
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, reg, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, reg, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts {72 /* 0x48 */, 0 /* 0x0 */, 73 /* 0x49 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_0 72
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_2 73
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 1) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 2) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 3)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40005c00_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_label "I2C_3"
#define DT_N_S_soc_S_i2c_40005c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, label, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 1) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 2) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 3) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 4)
#define DT_N_S_soc_S_i2c_40005c00_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_status "disabled"
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, status, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 1) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 2) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 3) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 4) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 5) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 6) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 7)
#define DT_N_S_soc_S_i2c_40005c00_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible {"st,stm32-i2c-v1"}
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0 "st,stm32-i2c-v1"
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bits 8388608
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/dma@40026000
 *
 * Node identifier: DT_N_S_soc_S_dma_40026000
 *
 * Binding (compatible = st,stm32-dma-v1):
 *   $ZEPHYR_BASE/dts/bindings/dma/st,stm32-dma-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40026000_PATH "/soc/dma@40026000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40026000_FULL_NAME "dma@40026000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40026000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40026000_ORD 42

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40026000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40026000_SUPPORTS_ORDS \
	43, /* /soc/i2s@40003800 */ \
	44, /* /soc/i2s@40003c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40026000_EXISTS 1
#define DT_N_INST_0_st_stm32_dma_v1 DT_N_S_soc_S_dma_40026000
#define DT_N_NODELABEL_dma1         DT_N_S_soc_S_dma_40026000

/* Special property macros: */
#define DT_N_S_soc_S_dma_40026000_REG_NUM 1
#define DT_N_S_soc_S_dma_40026000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_REG_IDX_0_VAL_ADDRESS 1073897472 /* 0x40026000 */
#define DT_N_S_soc_S_dma_40026000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40026000_IRQ_NUM 8
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_irq 12
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_irq 13
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_irq 14
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_irq 15
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_irq 16
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_irq 17
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_irq 47
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_COMPAT_MATCHES_st_stm32_dma_v1 1
#define DT_N_S_soc_S_dma_40026000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40026000_P_reg {1073897472 /* 0x40026000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_0 1073897472
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, reg, 0) \
	fn(DT_N_S_soc_S_dma_40026000, reg, 1)
#define DT_N_S_soc_S_dma_40026000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts {11 /* 0xb */, 0 /* 0x0 */, 12 /* 0xc */, 0 /* 0x0 */, 13 /* 0xd */, 0 /* 0x0 */, 14 /* 0xe */, 0 /* 0x0 */, 15 /* 0xf */, 0 /* 0x0 */, 16 /* 0x10 */, 0 /* 0x0 */, 17 /* 0x11 */, 0 /* 0x0 */, 47 /* 0x2f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_2 12
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_4 13
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_6 14
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_8 15
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_10 16
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_12 17
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_14 47
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, interrupts, 0) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 1) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 2) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 3) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 4) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 5) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 6) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 7) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 8) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 9) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 10) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 11) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 12) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 13) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 14) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 15)
#define DT_N_S_soc_S_dma_40026000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_st_mem2mem 0
#define DT_N_S_soc_S_dma_40026000_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_label "DMA_1"
#define DT_N_S_soc_S_dma_40026000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, label, 0) \
	fn(DT_N_S_soc_S_dma_40026000, label, 1) \
	fn(DT_N_S_soc_S_dma_40026000, label, 2) \
	fn(DT_N_S_soc_S_dma_40026000, label, 3) \
	fn(DT_N_S_soc_S_dma_40026000, label, 4)
#define DT_N_S_soc_S_dma_40026000_P_label_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_status "disabled"
#define DT_N_S_soc_S_dma_40026000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dma_40026000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dma_40026000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40026000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, status, 0) \
	fn(DT_N_S_soc_S_dma_40026000, status, 1) \
	fn(DT_N_S_soc_S_dma_40026000, status, 2) \
	fn(DT_N_S_soc_S_dma_40026000, status, 3) \
	fn(DT_N_S_soc_S_dma_40026000, status, 4) \
	fn(DT_N_S_soc_S_dma_40026000, status, 5) \
	fn(DT_N_S_soc_S_dma_40026000, status, 6) \
	fn(DT_N_S_soc_S_dma_40026000, status, 7)
#define DT_N_S_soc_S_dma_40026000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_compatible {"st,stm32-dma-v1"}
#define DT_N_S_soc_S_dma_40026000_P_compatible_IDX_0 "st,stm32-dma-v1"
#define DT_N_S_soc_S_dma_40026000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, compatible, 0)
#define DT_N_S_soc_S_dma_40026000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40026000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, clocks, 0)
#define DT_N_S_soc_S_dma_40026000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40003800
 *
 * Node identifier: DT_N_S_soc_S_i2s_40003800
 *
 * Binding (compatible = st,stm32-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/st,stm32-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40003800_PATH "/soc/i2s@40003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40003800_FULL_NAME "i2s@40003800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40003800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40003800_ORD 43

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40003800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */ \
	42, /* /soc/dma@40026000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40003800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40003800_EXISTS 1
#define DT_N_INST_0_st_stm32_i2s DT_N_S_soc_S_i2s_40003800
#define DT_N_NODELABEL_i2s2      DT_N_S_soc_S_i2s_40003800

/* Special property macros: */
#define DT_N_S_soc_S_i2s_40003800_REG_NUM 1
#define DT_N_S_soc_S_i2s_40003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_REG_IDX_0_VAL_ADDRESS 1073756160 /* 0x40003800 */
#define DT_N_S_soc_S_i2s_40003800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2s_40003800_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_COMPAT_MATCHES_st_stm32_i2s 1
#define DT_N_S_soc_S_i2s_40003800_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40003800_P_reg {1073756160 /* 0x40003800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_0 1073756160
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, reg, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, reg, 1)
#define DT_N_S_soc_S_i2s_40003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_interrupts {36 /* 0x24 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, interrupts, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, interrupts, 1)
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel 4
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_slot 0
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_features 3
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_slot DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_slot
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel_config DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_features DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_features
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel 3
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_slot 0
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_features 3
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_slot DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_slot
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel_config DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_features DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_features
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, dmas, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, dmas, 1)
#define DT_N_S_soc_S_i2s_40003800_P_dmas_LEN 2
#define DT_N_S_soc_S_i2s_40003800_P_dmas_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, dma_names, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, dma_names, 1)
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_LEN 2
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_label "I2S_2"
#define DT_N_S_soc_S_i2s_40003800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, label, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 1) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 2) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 3) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 4)
#define DT_N_S_soc_S_i2s_40003800_P_label_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_status "disabled"
#define DT_N_S_soc_S_i2s_40003800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40003800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_40003800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40003800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, status, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 1) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 2) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 3) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 4) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 5) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 6) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 7)
#define DT_N_S_soc_S_i2s_40003800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_compatible {"st,stm32-i2s"}
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_0 "st,stm32-i2s"
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, compatible, 0)
#define DT_N_S_soc_S_i2s_40003800_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_40003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, clocks, 0)
#define DT_N_S_soc_S_i2s_40003800_P_clocks_LEN 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40003c00
 *
 * Node identifier: DT_N_S_soc_S_i2s_40003c00
 *
 * Binding (compatible = st,stm32-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/st,stm32-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40003c00_PATH "/soc/i2s@40003c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40003c00_FULL_NAME "i2s@40003c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40003c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40003c00_ORD 44

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40003c00_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */ \
	42, /* /soc/dma@40026000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40003c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40003c00_EXISTS 1
#define DT_N_INST_1_st_stm32_i2s DT_N_S_soc_S_i2s_40003c00
#define DT_N_NODELABEL_i2s3      DT_N_S_soc_S_i2s_40003c00

/* Special property macros: */
#define DT_N_S_soc_S_i2s_40003c00_REG_NUM 1
#define DT_N_S_soc_S_i2s_40003c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_REG_IDX_0_VAL_ADDRESS 1073757184 /* 0x40003c00 */
#define DT_N_S_soc_S_i2s_40003c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2s_40003c00_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_irq 51
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_COMPAT_MATCHES_st_stm32_i2s 1
#define DT_N_S_soc_S_i2s_40003c00_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40003c00_P_reg {1073757184 /* 0x40003c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_0 1073757184
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, reg, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, reg, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts {51 /* 0x33 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_0 51
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, interrupts, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, interrupts, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel 5
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_slot 0
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_features 3
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_slot DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_slot
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel_config DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_features DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_features
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel 0
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_slot 0
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_features 3
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_slot DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_slot
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel_config DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_features DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_features
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, dmas, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, dmas, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_LEN 2
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_LEN 2
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_label "I2S_3"
#define DT_N_S_soc_S_i2s_40003c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, label, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 1) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 2) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 3) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 4)
#define DT_N_S_soc_S_i2s_40003c00_P_label_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_status "disabled"
#define DT_N_S_soc_S_i2s_40003c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40003c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_40003c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40003c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, status, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 1) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 2) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 3) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 4) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 5) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 6) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 7)
#define DT_N_S_soc_S_i2s_40003c00_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_compatible {"st,stm32-i2s"}
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_0 "st,stm32-i2s"
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, compatible, 0)
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bits 32768
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, clocks, 0)
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_LEN 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@40013c00
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_40013c00
 *
 * Binding (compatible = st,stm32-exti):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/st,stm32-exti.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_PATH "/soc/interrupt-controller@40013c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_FULL_NAME "interrupt-controller@40013c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_ORD 45

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_REQUIRES_ORDS \
	12, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_EXISTS 1
#define DT_N_INST_0_st_stm32_exti DT_N_S_soc_S_interrupt_controller_40013c00
#define DT_N_NODELABEL_exti       DT_N_S_soc_S_interrupt_controller_40013c00

/* Special property macros: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_IDX_0_VAL_ADDRESS 1073822720 /* 0x40013c00 */
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_COMPAT_MATCHES_st_stm32_exti 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg {1073822720 /* 0x40013c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_0 1073822720
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40013c00, reg, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible {"st,stm32-exti"}
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_IDX_0 "st,stm32-exti"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40013c00, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/memory@40024000
 *
 * Node identifier: DT_N_S_soc_S_memory_40024000
 *
 * Binding (compatible = st,stm32-backup-sram):
 *   $ZEPHYR_BASE/dts/bindings/memory-controllers/st,stm32-backup-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_40024000_PATH "/soc/memory@40024000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_40024000_FULL_NAME "memory@40024000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_40024000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_memory_40024000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_40024000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_40024000_ORD 46

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_40024000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_40024000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_40024000_EXISTS 1
#define DT_N_INST_0_st_stm32_backup_sram DT_N_S_soc_S_memory_40024000
#define DT_N_NODELABEL_backup_sram       DT_N_S_soc_S_memory_40024000

/* Special property macros: */
#define DT_N_S_soc_S_memory_40024000_REG_NUM 1
#define DT_N_S_soc_S_memory_40024000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_REG_IDX_0_VAL_ADDRESS 1073889280 /* 0x40024000 */
#define DT_N_S_soc_S_memory_40024000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_memory_40024000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_40024000_COMPAT_MATCHES_st_stm32_backup_sram 1
#define DT_N_S_soc_S_memory_40024000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_memory_40024000_P_label "BACKUP_SRAM"
#define DT_N_S_soc_S_memory_40024000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40024000, label, 0) \
	fn(DT_N_S_soc_S_memory_40024000, label, 1) \
	fn(DT_N_S_soc_S_memory_40024000, label, 2) \
	fn(DT_N_S_soc_S_memory_40024000, label, 3) \
	fn(DT_N_S_soc_S_memory_40024000, label, 4) \
	fn(DT_N_S_soc_S_memory_40024000, label, 5) \
	fn(DT_N_S_soc_S_memory_40024000, label, 6) \
	fn(DT_N_S_soc_S_memory_40024000, label, 7) \
	fn(DT_N_S_soc_S_memory_40024000, label, 8) \
	fn(DT_N_S_soc_S_memory_40024000, label, 9) \
	fn(DT_N_S_soc_S_memory_40024000, label, 10)
#define DT_N_S_soc_S_memory_40024000_P_label_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_reg {1073889280 /* 0x40024000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_memory_40024000_P_reg_IDX_0 1073889280
#define DT_N_S_soc_S_memory_40024000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_memory_40024000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40024000, reg, 0) \
	fn(DT_N_S_soc_S_memory_40024000, reg, 1)
#define DT_N_S_soc_S_memory_40024000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_memory_40024000_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_memory_40024000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_memory_40024000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40024000, clocks, 0)
#define DT_N_S_soc_S_memory_40024000_P_clocks_LEN 1
#define DT_N_S_soc_S_memory_40024000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_status "disabled"
#define DT_N_S_soc_S_memory_40024000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_memory_40024000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_memory_40024000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_memory_40024000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40024000, status, 0) \
	fn(DT_N_S_soc_S_memory_40024000, status, 1) \
	fn(DT_N_S_soc_S_memory_40024000, status, 2) \
	fn(DT_N_S_soc_S_memory_40024000, status, 3) \
	fn(DT_N_S_soc_S_memory_40024000, status, 4) \
	fn(DT_N_S_soc_S_memory_40024000, status, 5) \
	fn(DT_N_S_soc_S_memory_40024000, status, 6) \
	fn(DT_N_S_soc_S_memory_40024000, status, 7)
#define DT_N_S_soc_S_memory_40024000_P_status_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_compatible {"st,stm32-backup-sram"}
#define DT_N_S_soc_S_memory_40024000_P_compatible_IDX_0 "st,stm32-backup-sram"
#define DT_N_S_soc_S_memory_40024000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40024000, compatible, 0)
#define DT_N_S_soc_S_memory_40024000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_40024000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/rng@50060800
 *
 * Node identifier: DT_N_S_soc_S_rng_50060800
 *
 * Binding (compatible = st,stm32-rng):
 *   $ZEPHYR_BASE/dts/bindings/rng/st,stm32-rng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rng_50060800_PATH "/soc/rng@50060800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rng_50060800_FULL_NAME "rng@50060800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rng_50060800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_rng_50060800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rng_50060800_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rng_50060800_ORD 47

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rng_50060800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rng_50060800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rng_50060800_EXISTS 1
#define DT_N_INST_0_st_stm32_rng DT_N_S_soc_S_rng_50060800
#define DT_N_NODELABEL_rng       DT_N_S_soc_S_rng_50060800

/* Special property macros: */
#define DT_N_S_soc_S_rng_50060800_REG_NUM 1
#define DT_N_S_soc_S_rng_50060800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_REG_IDX_0_VAL_ADDRESS 1342572544 /* 0x50060800 */
#define DT_N_S_soc_S_rng_50060800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rng_50060800_IRQ_NUM 1
#define DT_N_S_soc_S_rng_50060800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_IRQ_IDX_0_VAL_irq 80
#define DT_N_S_soc_S_rng_50060800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rng_50060800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_COMPAT_MATCHES_st_stm32_rng 1
#define DT_N_S_soc_S_rng_50060800_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_rng_50060800_P_reg {1342572544 /* 0x50060800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rng_50060800_P_reg_IDX_0 1342572544
#define DT_N_S_soc_S_rng_50060800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rng_50060800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_50060800, reg, 0) \
	fn(DT_N_S_soc_S_rng_50060800, reg, 1)
#define DT_N_S_soc_S_rng_50060800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_label "RNG"
#define DT_N_S_soc_S_rng_50060800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_50060800, label, 0) \
	fn(DT_N_S_soc_S_rng_50060800, label, 1) \
	fn(DT_N_S_soc_S_rng_50060800, label, 2)
#define DT_N_S_soc_S_rng_50060800_P_label_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_rng_50060800_P_clocks_IDX_0_VAL_bus 1
#define DT_N_S_soc_S_rng_50060800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_clocks_IDX_0_VAL_bits 64
#define DT_N_S_soc_S_rng_50060800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_50060800, clocks, 0)
#define DT_N_S_soc_S_rng_50060800_P_clocks_LEN 1
#define DT_N_S_soc_S_rng_50060800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_status "okay"
#define DT_N_S_soc_S_rng_50060800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_rng_50060800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_rng_50060800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rng_50060800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_50060800, status, 0) \
	fn(DT_N_S_soc_S_rng_50060800, status, 1) \
	fn(DT_N_S_soc_S_rng_50060800, status, 2) \
	fn(DT_N_S_soc_S_rng_50060800, status, 3)
#define DT_N_S_soc_S_rng_50060800_P_status_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_compatible {"st,stm32-rng"}
#define DT_N_S_soc_S_rng_50060800_P_compatible_IDX_0 "st,stm32-rng"
#define DT_N_S_soc_S_rng_50060800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_50060800, compatible, 0)
#define DT_N_S_soc_S_rng_50060800_P_compatible_LEN 1
#define DT_N_S_soc_S_rng_50060800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_interrupts {80 /* 0x50 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rng_50060800_P_interrupts_IDX_0 80
#define DT_N_S_soc_S_rng_50060800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rng_50060800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_50060800, interrupts, 0) \
	fn(DT_N_S_soc_S_rng_50060800, interrupts, 1)
#define DT_N_S_soc_S_rng_50060800_P_interrupts_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40002800
 *
 * Node identifier: DT_N_S_soc_S_rtc_40002800
 *
 * Binding (compatible = st,stm32-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/st,stm32-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40002800_PATH "/soc/rtc@40002800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40002800_FULL_NAME "rtc@40002800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40002800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40002800_ORD 48

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40002800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40002800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40002800_EXISTS 1
#define DT_N_INST_0_st_stm32_rtc DT_N_S_soc_S_rtc_40002800
#define DT_N_NODELABEL_rtc       DT_N_S_soc_S_rtc_40002800

/* Special property macros: */
#define DT_N_S_soc_S_rtc_40002800_REG_NUM 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_ADDRESS 1073752064 /* 0x40002800 */
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rtc_40002800_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq 41
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_MATCHES_st_stm32_rtc 1
#define DT_N_S_soc_S_rtc_40002800_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40002800_P_reg {1073752064 /* 0x40002800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_0 1073752064
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, reg, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, reg, 1)
#define DT_N_S_soc_S_rtc_40002800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_label "RTC_0"
#define DT_N_S_soc_S_rtc_40002800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, label, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 1) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 2) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 3) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 4)
#define DT_N_S_soc_S_rtc_40002800_P_label_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts {41 /* 0x29 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_0 41
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, interrupts, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, interrupts, 1)
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_prescaler 32768
#define DT_N_S_soc_S_rtc_40002800_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_status "okay"
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, status, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 1) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 2) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 3)
#define DT_N_S_soc_S_rtc_40002800_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible {"st,stm32-rtc"}
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0 "st,stm32-rtc"
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits 268435456
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004400
 *
 * Node identifier: DT_N_S_soc_S_serial_40004400
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004400_PATH "/soc/serial@40004400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004400_FULL_NAME "serial@40004400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004400_ORD 49

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004400_EXISTS 1
#define DT_N_INST_3_st_stm32_usart DT_N_S_soc_S_serial_40004400
#define DT_N_INST_3_st_stm32_uart  DT_N_S_soc_S_serial_40004400
#define DT_N_NODELABEL_usart2      DT_N_S_soc_S_serial_40004400

/* Special property macros: */
#define DT_N_S_soc_S_serial_40004400_REG_NUM 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_ADDRESS 1073759232 /* 0x40004400 */
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004400_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq 38
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004400_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004400_P_reg {1073759232 /* 0x40004400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_0 1073759232
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, reg, 0) \
	fn(DT_N_S_soc_S_serial_40004400, reg, 1)
#define DT_N_S_soc_S_serial_40004400_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts {38 /* 0x26 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_0 38
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40004400, interrupts, 1)
#define DT_N_S_soc_S_serial_40004400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_label "UART_2"
#define DT_N_S_soc_S_serial_40004400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, label, 0) \
	fn(DT_N_S_soc_S_serial_40004400, label, 1) \
	fn(DT_N_S_soc_S_serial_40004400, label, 2) \
	fn(DT_N_S_soc_S_serial_40004400, label, 3) \
	fn(DT_N_S_soc_S_serial_40004400, label, 4) \
	fn(DT_N_S_soc_S_serial_40004400, label, 5)
#define DT_N_S_soc_S_serial_40004400_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status "disabled"
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, status, 0) \
	fn(DT_N_S_soc_S_serial_40004400, status, 1) \
	fn(DT_N_S_soc_S_serial_40004400, status, 2) \
	fn(DT_N_S_soc_S_serial_40004400, status, 3) \
	fn(DT_N_S_soc_S_serial_40004400, status, 4) \
	fn(DT_N_S_soc_S_serial_40004400, status, 5) \
	fn(DT_N_S_soc_S_serial_40004400, status, 6) \
	fn(DT_N_S_soc_S_serial_40004400, status, 7)
#define DT_N_S_soc_S_serial_40004400_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1)
#define DT_N_S_soc_S_serial_40004400_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40004400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, clocks, 0)
#define DT_N_S_soc_S_serial_40004400_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart3_rx_pb11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_PATH "/soc/pin-controller@40020000/usart3_rx_pb11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_FULL_NAME "usart3_rx_pb11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_ORD 50

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_SUPPORTS_ORDS \
	52, /* /soc/serial@40004800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_EXISTS 1
#define DT_N_NODELABEL_usart3_rx_pb11 DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_P_pinmux 6919
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart3_tx_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_PATH "/soc/pin-controller@40020000/usart3_tx_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_FULL_NAME "usart3_tx_pb10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_ORD 51

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_SUPPORTS_ORDS \
	52, /* /soc/serial@40004800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_EXISTS 1
#define DT_N_NODELABEL_usart3_tx_pb10 DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_P_pinmux 6663
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004800
 *
 * Node identifier: DT_N_S_soc_S_serial_40004800
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004800_PATH "/soc/serial@40004800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004800_FULL_NAME "serial@40004800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004800_ORD 52

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */ \
	50, /* /soc/pin-controller@40020000/usart3_rx_pb11 */ \
	51, /* /soc/pin-controller@40020000/usart3_tx_pb10 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004800_EXISTS 1
#define DT_N_INST_2_st_stm32_usart DT_N_S_soc_S_serial_40004800
#define DT_N_INST_2_st_stm32_uart  DT_N_S_soc_S_serial_40004800
#define DT_N_NODELABEL_usart3      DT_N_S_soc_S_serial_40004800

/* Special property macros: */
#define DT_N_S_soc_S_serial_40004800_REG_NUM 1
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_VAL_ADDRESS 1073760256 /* 0x40004800 */
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004800_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004800_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004800_P_reg {1073760256 /* 0x40004800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_0 1073760256
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, reg, 0) \
	fn(DT_N_S_soc_S_serial_40004800, reg, 1)
#define DT_N_S_soc_S_serial_40004800_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_interrupts {39 /* 0x27 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40004800, interrupts, 1)
#define DT_N_S_soc_S_serial_40004800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pb10
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pb11
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40004800, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40004800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_current_speed 115200
#define DT_N_S_soc_S_serial_40004800_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_label "UART_3"
#define DT_N_S_soc_S_serial_40004800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, label, 0) \
	fn(DT_N_S_soc_S_serial_40004800, label, 1) \
	fn(DT_N_S_soc_S_serial_40004800, label, 2) \
	fn(DT_N_S_soc_S_serial_40004800, label, 3) \
	fn(DT_N_S_soc_S_serial_40004800, label, 4) \
	fn(DT_N_S_soc_S_serial_40004800, label, 5)
#define DT_N_S_soc_S_serial_40004800_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_status "okay"
#define DT_N_S_soc_S_serial_40004800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40004800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_serial_40004800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40004800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, status, 0) \
	fn(DT_N_S_soc_S_serial_40004800, status, 1) \
	fn(DT_N_S_soc_S_serial_40004800, status, 2) \
	fn(DT_N_S_soc_S_serial_40004800, status, 3)
#define DT_N_S_soc_S_serial_40004800_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40004800, compatible, 1)
#define DT_N_S_soc_S_serial_40004800_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40004800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, clocks, 0)
#define DT_N_S_soc_S_serial_40004800_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004c00
 *
 * Node identifier: DT_N_S_soc_S_serial_40004c00
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004c00_PATH "/soc/serial@40004c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004c00_FULL_NAME "serial@40004c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004c00_ORD 53

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004c00_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004c00_EXISTS 1
#define DT_N_INST_4_st_stm32_uart DT_N_S_soc_S_serial_40004c00
#define DT_N_NODELABEL_uart4      DT_N_S_soc_S_serial_40004c00

/* Special property macros: */
#define DT_N_S_soc_S_serial_40004c00_REG_NUM 1
#define DT_N_S_soc_S_serial_40004c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_REG_IDX_0_VAL_ADDRESS 1073761280 /* 0x40004c00 */
#define DT_N_S_soc_S_serial_40004c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004c00_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_irq 52
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004c00_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004c00_P_reg {1073761280 /* 0x40004c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_0 1073761280
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, reg, 0) \
	fn(DT_N_S_soc_S_serial_40004c00, reg, 1)
#define DT_N_S_soc_S_serial_40004c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_interrupts {52 /* 0x34 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_0 52
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40004c00, interrupts, 1)
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_label "UART_4"
#define DT_N_S_soc_S_serial_40004c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, label, 0) \
	fn(DT_N_S_soc_S_serial_40004c00, label, 1) \
	fn(DT_N_S_soc_S_serial_40004c00, label, 2) \
	fn(DT_N_S_soc_S_serial_40004c00, label, 3) \
	fn(DT_N_S_soc_S_serial_40004c00, label, 4) \
	fn(DT_N_S_soc_S_serial_40004c00, label, 5)
#define DT_N_S_soc_S_serial_40004c00_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004c00_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_status "disabled"
#define DT_N_S_soc_S_serial_40004c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40004c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40004c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40004c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, status, 0) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 1) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 2) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 3) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 4) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 5) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 6) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 7)
#define DT_N_S_soc_S_serial_40004c00_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, compatible, 0)
#define DT_N_S_soc_S_serial_40004c00_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bits 524288
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, clocks, 0)
#define DT_N_S_soc_S_serial_40004c00_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/serial@40005000
 *
 * Node identifier: DT_N_S_soc_S_serial_40005000
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40005000_PATH "/soc/serial@40005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40005000_FULL_NAME "serial@40005000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40005000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40005000_ORD 54

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40005000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40005000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40005000_EXISTS 1
#define DT_N_INST_5_st_stm32_uart DT_N_S_soc_S_serial_40005000
#define DT_N_NODELABEL_uart5      DT_N_S_soc_S_serial_40005000

/* Special property macros: */
#define DT_N_S_soc_S_serial_40005000_REG_NUM 1
#define DT_N_S_soc_S_serial_40005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_REG_IDX_0_VAL_ADDRESS 1073762304 /* 0x40005000 */
#define DT_N_S_soc_S_serial_40005000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40005000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_irq 53
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40005000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40005000_P_reg {1073762304 /* 0x40005000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_0 1073762304
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, reg, 0) \
	fn(DT_N_S_soc_S_serial_40005000, reg, 1)
#define DT_N_S_soc_S_serial_40005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_interrupts {53 /* 0x35 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_0 53
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40005000, interrupts, 1)
#define DT_N_S_soc_S_serial_40005000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_label "UART_5"
#define DT_N_S_soc_S_serial_40005000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, label, 0) \
	fn(DT_N_S_soc_S_serial_40005000, label, 1) \
	fn(DT_N_S_soc_S_serial_40005000, label, 2) \
	fn(DT_N_S_soc_S_serial_40005000, label, 3) \
	fn(DT_N_S_soc_S_serial_40005000, label, 4) \
	fn(DT_N_S_soc_S_serial_40005000, label, 5)
#define DT_N_S_soc_S_serial_40005000_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40005000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_status "disabled"
#define DT_N_S_soc_S_serial_40005000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40005000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40005000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40005000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, status, 0) \
	fn(DT_N_S_soc_S_serial_40005000, status, 1) \
	fn(DT_N_S_soc_S_serial_40005000, status, 2) \
	fn(DT_N_S_soc_S_serial_40005000, status, 3) \
	fn(DT_N_S_soc_S_serial_40005000, status, 4) \
	fn(DT_N_S_soc_S_serial_40005000, status, 5) \
	fn(DT_N_S_soc_S_serial_40005000, status, 6) \
	fn(DT_N_S_soc_S_serial_40005000, status, 7)
#define DT_N_S_soc_S_serial_40005000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, compatible, 0)
#define DT_N_S_soc_S_serial_40005000_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, clocks, 0)
#define DT_N_S_soc_S_serial_40005000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart1_rx_pb7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_PATH "/soc/pin-controller@40020000/usart1_rx_pb7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_FULL_NAME "usart1_rx_pb7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_ORD 55

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_SUPPORTS_ORDS \
	57, /* /soc/serial@40011000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_EXISTS 1
#define DT_N_NODELABEL_usart1_rx_pb7 DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_pinmux 5895
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart1_tx_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_PATH "/soc/pin-controller@40020000/usart1_tx_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_FULL_NAME "usart1_tx_pb6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_ORD 56

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_SUPPORTS_ORDS \
	57, /* /soc/serial@40011000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_EXISTS 1
#define DT_N_NODELABEL_usart1_tx_pb6 DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_pinmux 5639
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/serial@40011000
 *
 * Node identifier: DT_N_S_soc_S_serial_40011000
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40011000_PATH "/soc/serial@40011000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40011000_FULL_NAME "serial@40011000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40011000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40011000_ORD 57

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40011000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */ \
	55, /* /soc/pin-controller@40020000/usart1_rx_pb7 */ \
	56, /* /soc/pin-controller@40020000/usart1_tx_pb6 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40011000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40011000_EXISTS 1
#define DT_N_INST_0_st_stm32_usart DT_N_S_soc_S_serial_40011000
#define DT_N_INST_0_st_stm32_uart  DT_N_S_soc_S_serial_40011000
#define DT_N_NODELABEL_usart1      DT_N_S_soc_S_serial_40011000

/* Special property macros: */
#define DT_N_S_soc_S_serial_40011000_REG_NUM 1
#define DT_N_S_soc_S_serial_40011000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_REG_IDX_0_VAL_ADDRESS 1073811456 /* 0x40011000 */
#define DT_N_S_soc_S_serial_40011000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40011000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40011000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40011000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40011000_P_reg {1073811456 /* 0x40011000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_0 1073811456
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, reg, 0) \
	fn(DT_N_S_soc_S_serial_40011000, reg, 1)
#define DT_N_S_soc_S_serial_40011000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_interrupts {37 /* 0x25 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40011000, interrupts, 1)
#define DT_N_S_soc_S_serial_40011000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pb6
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pb7
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40011000, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_current_speed 115200
#define DT_N_S_soc_S_serial_40011000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_label "UART_1"
#define DT_N_S_soc_S_serial_40011000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, label, 0) \
	fn(DT_N_S_soc_S_serial_40011000, label, 1) \
	fn(DT_N_S_soc_S_serial_40011000, label, 2) \
	fn(DT_N_S_soc_S_serial_40011000, label, 3) \
	fn(DT_N_S_soc_S_serial_40011000, label, 4) \
	fn(DT_N_S_soc_S_serial_40011000, label, 5)
#define DT_N_S_soc_S_serial_40011000_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40011000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_status "okay"
#define DT_N_S_soc_S_serial_40011000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40011000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_serial_40011000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40011000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, status, 0) \
	fn(DT_N_S_soc_S_serial_40011000, status, 1) \
	fn(DT_N_S_soc_S_serial_40011000, status, 2) \
	fn(DT_N_S_soc_S_serial_40011000, status, 3)
#define DT_N_S_soc_S_serial_40011000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40011000, compatible, 1)
#define DT_N_S_soc_S_serial_40011000_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40011000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, clocks, 0)
#define DT_N_S_soc_S_serial_40011000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart6_rx_pc7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_PATH "/soc/pin-controller@40020000/usart6_rx_pc7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_FULL_NAME "usart6_rx_pc7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_ORD 58

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_SUPPORTS_ORDS \
	60, /* /soc/serial@40011400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_EXISTS 1
#define DT_N_NODELABEL_usart6_rx_pc7 DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_pinmux 9992
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart6_tx_pc6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_PATH "/soc/pin-controller@40020000/usart6_tx_pc6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_FULL_NAME "usart6_tx_pc6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_ORD 59

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_SUPPORTS_ORDS \
	60, /* /soc/serial@40011400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_EXISTS 1
#define DT_N_NODELABEL_usart6_tx_pc6 DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_pinmux 9736
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/serial@40011400
 *
 * Node identifier: DT_N_S_soc_S_serial_40011400
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40011400_PATH "/soc/serial@40011400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40011400_FULL_NAME "serial@40011400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40011400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_serial_40011400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40011400_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40011400_ORD 60

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40011400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */ \
	58, /* /soc/pin-controller@40020000/usart6_rx_pc7 */ \
	59, /* /soc/pin-controller@40020000/usart6_tx_pc6 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40011400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40011400_EXISTS 1
#define DT_N_INST_1_st_stm32_usart DT_N_S_soc_S_serial_40011400
#define DT_N_INST_1_st_stm32_uart  DT_N_S_soc_S_serial_40011400
#define DT_N_NODELABEL_usart6      DT_N_S_soc_S_serial_40011400

/* Special property macros: */
#define DT_N_S_soc_S_serial_40011400_REG_NUM 1
#define DT_N_S_soc_S_serial_40011400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_REG_IDX_0_VAL_ADDRESS 1073812480 /* 0x40011400 */
#define DT_N_S_soc_S_serial_40011400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40011400_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_VAL_irq 71
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40011400_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40011400_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40011400_P_reg {1073812480 /* 0x40011400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40011400_P_reg_IDX_0 1073812480
#define DT_N_S_soc_S_serial_40011400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40011400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, reg, 0) \
	fn(DT_N_S_soc_S_serial_40011400, reg, 1)
#define DT_N_S_soc_S_serial_40011400_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_interrupts {71 /* 0x47 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40011400_P_interrupts_IDX_0 71
#define DT_N_S_soc_S_serial_40011400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40011400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40011400, interrupts, 1)
#define DT_N_S_soc_S_serial_40011400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pc6
#define DT_N_S_soc_S_serial_40011400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pc7
#define DT_N_S_soc_S_serial_40011400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40011400, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40011400_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40011400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_current_speed 115200
#define DT_N_S_soc_S_serial_40011400_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_label "UART_6"
#define DT_N_S_soc_S_serial_40011400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, label, 0) \
	fn(DT_N_S_soc_S_serial_40011400, label, 1) \
	fn(DT_N_S_soc_S_serial_40011400, label, 2) \
	fn(DT_N_S_soc_S_serial_40011400, label, 3) \
	fn(DT_N_S_soc_S_serial_40011400, label, 4) \
	fn(DT_N_S_soc_S_serial_40011400, label, 5)
#define DT_N_S_soc_S_serial_40011400_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40011400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_status "okay"
#define DT_N_S_soc_S_serial_40011400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40011400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_serial_40011400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40011400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, status, 0) \
	fn(DT_N_S_soc_S_serial_40011400, status, 1) \
	fn(DT_N_S_soc_S_serial_40011400, status, 2) \
	fn(DT_N_S_soc_S_serial_40011400, status, 3)
#define DT_N_S_soc_S_serial_40011400_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40011400, compatible, 1)
#define DT_N_S_soc_S_serial_40011400_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40011400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, clocks, 0)
#define DT_N_S_soc_S_serial_40011400_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_PATH "/soc/spi@40003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_FULL_NAME "spi@40003800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_ORD 61

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_EXISTS 1
#define DT_N_INST_1_st_stm32_spi DT_N_S_soc_S_spi_40003800
#define DT_N_NODELABEL_spi2      DT_N_S_soc_S_spi_40003800

/* Special property macros: */
#define DT_N_S_soc_S_spi_40003800_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_ADDRESS 1073756160 /* 0x40003800 */
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003800_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40003800_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_P_reg {1073756160 /* 0x40003800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0 1073756160
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, reg, 0) \
	fn(DT_N_S_soc_S_spi_40003800, reg, 1)
#define DT_N_S_soc_S_spi_40003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts {36 /* 0x24 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40003800, interrupts, 1)
#define DT_N_S_soc_S_spi_40003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_label "SPI_2"
#define DT_N_S_soc_S_spi_40003800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, label, 0) \
	fn(DT_N_S_soc_S_spi_40003800, label, 1) \
	fn(DT_N_S_soc_S_spi_40003800, label, 2) \
	fn(DT_N_S_soc_S_spi_40003800, label, 3) \
	fn(DT_N_S_soc_S_spi_40003800, label, 4)
#define DT_N_S_soc_S_spi_40003800_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status "disabled"
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, status, 0) \
	fn(DT_N_S_soc_S_spi_40003800, status, 1) \
	fn(DT_N_S_soc_S_spi_40003800, status, 2) \
	fn(DT_N_S_soc_S_spi_40003800, status, 3) \
	fn(DT_N_S_soc_S_spi_40003800, status, 4) \
	fn(DT_N_S_soc_S_spi_40003800, status, 5) \
	fn(DT_N_S_soc_S_spi_40003800, status, 6) \
	fn(DT_N_S_soc_S_spi_40003800, status, 7)
#define DT_N_S_soc_S_spi_40003800_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, clocks, 0)
#define DT_N_S_soc_S_spi_40003800_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003c00
 *
 * Node identifier: DT_N_S_soc_S_spi_40003c00
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003c00_PATH "/soc/spi@40003c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003c00_FULL_NAME "spi@40003c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003c00_ORD 62

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003c00_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003c00_EXISTS 1
#define DT_N_INST_2_st_stm32_spi DT_N_S_soc_S_spi_40003c00
#define DT_N_NODELABEL_spi3      DT_N_S_soc_S_spi_40003c00

/* Special property macros: */
#define DT_N_S_soc_S_spi_40003c00_REG_NUM 1
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_VAL_ADDRESS 1073757184 /* 0x40003c00 */
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003c00_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_irq 51
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40003c00_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003c00_P_reg {1073757184 /* 0x40003c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_0 1073757184
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, reg, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, reg, 1)
#define DT_N_S_soc_S_spi_40003c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts {51 /* 0x33 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_0 51
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, interrupts, 1)
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_label "SPI_3"
#define DT_N_S_soc_S_spi_40003c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, label, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 1) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 2) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 3) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 4)
#define DT_N_S_soc_S_spi_40003c00_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_status "disabled"
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, status, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 1) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 2) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 3) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 4) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 5) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 6) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 7)
#define DT_N_S_soc_S_spi_40003c00_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bits 32768
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_PATH "/soc/pin-controller@40020000/gpio@40020400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FULL_NAME "gpio@40020400"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_ORD 63

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_SUPPORTS_ORDS \
	64, /* /soc/spi@40013000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_EXISTS 1
#define DT_N_INST_1_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400
#define DT_N_NODELABEL_gpiob      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_IDX_0_VAL_ADDRESS 1073873920 /* 0x40020400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg {1073873920 /* 0x40020400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_0 1073873920
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_label "GPIOB"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013000
 *
 * Node identifier: DT_N_S_soc_S_spi_40013000
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40013000_PATH "/soc/spi@40013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40013000_FULL_NAME "spi@40013000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40013000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40013000_ORD 64

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40013000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */ \
	63, /* /soc/pin-controller@40020000/gpio@40020400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013000_EXISTS 1
#define DT_N_INST_0_st_stm32_spi DT_N_S_soc_S_spi_40013000
#define DT_N_NODELABEL_spi1      DT_N_S_soc_S_spi_40013000

/* Special property macros: */
#define DT_N_S_soc_S_spi_40013000_REG_NUM 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40013000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40013000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013000_P_reg {1073819648 /* 0x40013000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, reg, 0) \
	fn(DT_N_S_soc_S_spi_40013000, reg, 1)
#define DT_N_S_soc_S_spi_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts {35 /* 0x23 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40013000, interrupts, 1)
#define DT_N_S_soc_S_spi_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_label "SPI_1"
#define DT_N_S_soc_S_spi_40013000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, label, 0) \
	fn(DT_N_S_soc_S_spi_40013000, label, 1) \
	fn(DT_N_S_soc_S_spi_40013000, label, 2) \
	fn(DT_N_S_soc_S_spi_40013000, label, 3) \
	fn(DT_N_S_soc_S_spi_40013000, label, 4)
#define DT_N_S_soc_S_spi_40013000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_VAL_pin 6
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_VAL_flags 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, cs_gpios, 0)
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_cs_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status "disabled"
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, status, 0) \
	fn(DT_N_S_soc_S_spi_40013000, status, 1) \
	fn(DT_N_S_soc_S_spi_40013000, status, 2) \
	fn(DT_N_S_soc_S_spi_40013000, status, 3) \
	fn(DT_N_S_soc_S_spi_40013000, status, 4) \
	fn(DT_N_S_soc_S_spi_40013000, status, 5) \
	fn(DT_N_S_soc_S_spi_40013000, status, 6) \
	fn(DT_N_S_soc_S_spi_40013000, status, 7)
#define DT_N_S_soc_S_spi_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, compatible, 0)
#define DT_N_S_soc_S_spi_40013000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, clocks, 0)
#define DT_N_S_soc_S_spi_40013000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013400
 *
 * Node identifier: DT_N_S_soc_S_spi_40013400
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40013400_PATH "/soc/spi@40013400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40013400_FULL_NAME "spi@40013400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40013400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spi_40013400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40013400_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40013400_ORD 65

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40013400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40013400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013400_EXISTS 1
#define DT_N_INST_3_st_stm32_spi DT_N_S_soc_S_spi_40013400
#define DT_N_NODELABEL_spi4      DT_N_S_soc_S_spi_40013400

/* Special property macros: */
#define DT_N_S_soc_S_spi_40013400_REG_NUM 1
#define DT_N_S_soc_S_spi_40013400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_REG_IDX_0_VAL_ADDRESS 1073820672 /* 0x40013400 */
#define DT_N_S_soc_S_spi_40013400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40013400_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_VAL_irq 84
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40013400_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013400_P_reg {1073820672 /* 0x40013400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40013400_P_reg_IDX_0 1073820672
#define DT_N_S_soc_S_spi_40013400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40013400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, reg, 0) \
	fn(DT_N_S_soc_S_spi_40013400, reg, 1)
#define DT_N_S_soc_S_spi_40013400_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_interrupts {84 /* 0x54 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40013400_P_interrupts_IDX_0 84
#define DT_N_S_soc_S_spi_40013400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40013400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40013400, interrupts, 1)
#define DT_N_S_soc_S_spi_40013400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_label "SPI_4"
#define DT_N_S_soc_S_spi_40013400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, label, 0) \
	fn(DT_N_S_soc_S_spi_40013400, label, 1) \
	fn(DT_N_S_soc_S_spi_40013400, label, 2) \
	fn(DT_N_S_soc_S_spi_40013400, label, 3) \
	fn(DT_N_S_soc_S_spi_40013400, label, 4)
#define DT_N_S_soc_S_spi_40013400_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_status "disabled"
#define DT_N_S_soc_S_spi_40013400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40013400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40013400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40013400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, status, 0) \
	fn(DT_N_S_soc_S_spi_40013400, status, 1) \
	fn(DT_N_S_soc_S_spi_40013400, status, 2) \
	fn(DT_N_S_soc_S_spi_40013400, status, 3) \
	fn(DT_N_S_soc_S_spi_40013400, status, 4) \
	fn(DT_N_S_soc_S_spi_40013400, status, 5) \
	fn(DT_N_S_soc_S_spi_40013400, status, 6) \
	fn(DT_N_S_soc_S_spi_40013400, status, 7)
#define DT_N_S_soc_S_spi_40013400_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40013400_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40013400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, compatible, 0)
#define DT_N_S_soc_S_spi_40013400_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40013400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_VAL_bits 8192
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, clocks, 0)
#define DT_N_S_soc_S_spi_40013400_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 66

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	12, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Special property macros: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, reg, 0) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1)
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1

/*
 * Devicetree node: /otghs_fs_phy
 *
 * Node identifier: DT_N_S_otghs_fs_phy
 *
 * Binding (compatible = usb-nop-xceiv):
 *   $ZEPHYR_BASE/dts/bindings/phy/usb-nop-xceiv.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_otghs_fs_phy_PATH "/otghs_fs_phy"

/* Node's name with unit-address: */
#define DT_N_S_otghs_fs_phy_FULL_NAME "otghs_fs_phy"

/* Node parent (/) identifier: */
#define DT_N_S_otghs_fs_phy_PARENT DT_N
#define DT_N_S_otghs_fs_phy_FOREACH_CHILD(fn) 
#define DT_N_S_otghs_fs_phy_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_otghs_fs_phy_ORD 67

/* Ordinals for what this node depends on directly: */
#define DT_N_S_otghs_fs_phy_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_otghs_fs_phy_SUPPORTS_ORDS \
	70, /* /soc/usb@40040000 */

/* Existence and alternate IDs: */
#define DT_N_S_otghs_fs_phy_EXISTS 1
#define DT_N_INST_1_usb_nop_xceiv   DT_N_S_otghs_fs_phy
#define DT_N_NODELABEL_otghs_fs_phy DT_N_S_otghs_fs_phy

/* Special property macros: */
#define DT_N_S_otghs_fs_phy_REG_NUM 0
#define DT_N_S_otghs_fs_phy_IRQ_NUM 0
#define DT_N_S_otghs_fs_phy_COMPAT_MATCHES_usb_nop_xceiv 1
#define DT_N_S_otghs_fs_phy_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_otghs_fs_phy_P_compatible {"usb-nop-xceiv"}
#define DT_N_S_otghs_fs_phy_P_compatible_IDX_0 "usb-nop-xceiv"
#define DT_N_S_otghs_fs_phy_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_otghs_fs_phy_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_otghs_fs_phy, compatible, 0)
#define DT_N_S_otghs_fs_phy_P_compatible_LEN 1
#define DT_N_S_otghs_fs_phy_P_compatible_EXISTS 1
#define DT_N_S_otghs_fs_phy_P_label "OTGHS_FS_PHY"
#define DT_N_S_otghs_fs_phy_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_otghs_fs_phy, label, 0) \
	fn(DT_N_S_otghs_fs_phy, label, 1) \
	fn(DT_N_S_otghs_fs_phy, label, 2) \
	fn(DT_N_S_otghs_fs_phy, label, 3) \
	fn(DT_N_S_otghs_fs_phy, label, 4) \
	fn(DT_N_S_otghs_fs_phy, label, 5) \
	fn(DT_N_S_otghs_fs_phy, label, 6) \
	fn(DT_N_S_otghs_fs_phy, label, 7) \
	fn(DT_N_S_otghs_fs_phy, label, 8) \
	fn(DT_N_S_otghs_fs_phy, label, 9) \
	fn(DT_N_S_otghs_fs_phy, label, 10) \
	fn(DT_N_S_otghs_fs_phy, label, 11)
#define DT_N_S_otghs_fs_phy_P_label_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_hs_dm_pb14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_PATH "/soc/pin-controller@40020000/usb_otg_hs_dm_pb14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_FULL_NAME "usb_otg_hs_dm_pb14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_ORD 68

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_SUPPORTS_ORDS \
	70, /* /soc/usb@40040000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_EXISTS 1
#define DT_N_NODELABEL_usb_otg_hs_dm_pb14 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_P_pinmux 7692
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_hs_dp_pb15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_PATH "/soc/pin-controller@40020000/usb_otg_hs_dp_pb15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_FULL_NAME "usb_otg_hs_dp_pb15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_ORD 69

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_SUPPORTS_ORDS \
	70, /* /soc/usb@40040000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_EXISTS 1
#define DT_N_NODELABEL_usb_otg_hs_dp_pb15 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_P_pinmux 7948
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/usb@40040000
 *
 * Node identifier: DT_N_S_soc_S_usb_40040000
 *
 * Binding (compatible = st,stm32-otghs):
 *   $ZEPHYR_BASE/dts/bindings/usb/st,stm32-otghs.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usb_40040000_PATH "/soc/usb@40040000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usb_40040000_FULL_NAME "usb@40040000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usb_40040000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_usb_40040000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usb_40040000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usb_40040000_ORD 70

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usb_40040000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */ \
	67, /* /otghs_fs_phy */ \
	68, /* /soc/pin-controller@40020000/usb_otg_hs_dm_pb14 */ \
	69, /* /soc/pin-controller@40020000/usb_otg_hs_dp_pb15 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usb_40040000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usb_40040000_EXISTS 1
#define DT_N_INST_0_st_stm32_otghs DT_N_S_soc_S_usb_40040000
#define DT_N_NODELABEL_usbotg_hs   DT_N_S_soc_S_usb_40040000
#define DT_N_NODELABEL_usb_otg2    DT_N_S_soc_S_usb_40040000

/* Special property macros: */
#define DT_N_S_soc_S_usb_40040000_REG_NUM 1
#define DT_N_S_soc_S_usb_40040000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_REG_IDX_0_VAL_ADDRESS 1074003968 /* 0x40040000 */
#define DT_N_S_soc_S_usb_40040000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_usb_40040000_IRQ_NUM 3
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_0_VAL_irq 77
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_1_VAL_irq 74
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_2_VAL_irq 75
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_otghs_VAL_irq DT_N_S_soc_S_usb_40040000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_otghs_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_otghs_VAL_priority DT_N_S_soc_S_usb_40040000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_otghs_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_ep1_out_VAL_irq DT_N_S_soc_S_usb_40040000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_ep1_out_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_ep1_out_VAL_priority DT_N_S_soc_S_usb_40040000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_ep1_out_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_ep1_in_VAL_irq DT_N_S_soc_S_usb_40040000_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_ep1_in_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_ep1_in_VAL_priority DT_N_S_soc_S_usb_40040000_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_ep1_in_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_COMPAT_MATCHES_st_stm32_otghs 1
#define DT_N_S_soc_S_usb_40040000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_usb_40040000_P_reg {1074003968 /* 0x40040000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_usb_40040000_P_reg_IDX_0 1074003968
#define DT_N_S_soc_S_usb_40040000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_usb_40040000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40040000, reg, 0) \
	fn(DT_N_S_soc_S_usb_40040000, reg, 1)
#define DT_N_S_soc_S_usb_40040000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupts {77 /* 0x4d */, 0 /* 0x0 */, 74 /* 0x4a */, 0 /* 0x0 */, 75 /* 0x4b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_0 77
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_2 74
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_4 75
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40040000, interrupts, 0) \
	fn(DT_N_S_soc_S_usb_40040000, interrupts, 1) \
	fn(DT_N_S_soc_S_usb_40040000, interrupts, 2) \
	fn(DT_N_S_soc_S_usb_40040000, interrupts, 3) \
	fn(DT_N_S_soc_S_usb_40040000, interrupts, 4) \
	fn(DT_N_S_soc_S_usb_40040000, interrupts, 5)
#define DT_N_S_soc_S_usb_40040000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_ram_size 4096
#define DT_N_S_soc_S_usb_40040000_P_ram_size_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_phys_IDX_0_PH DT_N_S_otghs_fs_phy
#define DT_N_S_soc_S_usb_40040000_P_phys_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_phys_LEN 1
#define DT_N_S_soc_S_usb_40040000_P_phys_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_usb_40040000_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_usb_40040000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_clocks_IDX_0_VAL_bits 536870912
#define DT_N_S_soc_S_usb_40040000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40040000, clocks, 0)
#define DT_N_S_soc_S_usb_40040000_P_clocks_LEN 1
#define DT_N_S_soc_S_usb_40040000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dm_pb14
#define DT_N_S_soc_S_usb_40040000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_dp_pb15
#define DT_N_S_soc_S_usb_40040000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40040000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_usb_40040000, pinctrl_0, 1)
#define DT_N_S_soc_S_usb_40040000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_usb_40040000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_num_bidir_endpoints 6
#define DT_N_S_soc_S_usb_40040000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_maximum_speed "full-speed"
#define DT_N_S_soc_S_usb_40040000_P_maximum_speed_ENUM_IDX 1
#define DT_N_S_soc_S_usb_40040000_P_maximum_speed_ENUM_TOKEN full_speed
#define DT_N_S_soc_S_usb_40040000_P_maximum_speed_ENUM_UPPER_TOKEN FULL_SPEED
#define DT_N_S_soc_S_usb_40040000_P_maximum_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 0) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 1) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 2) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 3) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 4) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 5) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 6) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 7) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 8) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 9)
#define DT_N_S_soc_S_usb_40040000_P_maximum_speed_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_label "OTGHS"
#define DT_N_S_soc_S_usb_40040000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40040000, label, 0) \
	fn(DT_N_S_soc_S_usb_40040000, label, 1) \
	fn(DT_N_S_soc_S_usb_40040000, label, 2) \
	fn(DT_N_S_soc_S_usb_40040000, label, 3) \
	fn(DT_N_S_soc_S_usb_40040000, label, 4)
#define DT_N_S_soc_S_usb_40040000_P_label_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_status "okay"
#define DT_N_S_soc_S_usb_40040000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_usb_40040000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_usb_40040000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usb_40040000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40040000, status, 0) \
	fn(DT_N_S_soc_S_usb_40040000, status, 1) \
	fn(DT_N_S_soc_S_usb_40040000, status, 2) \
	fn(DT_N_S_soc_S_usb_40040000, status, 3)
#define DT_N_S_soc_S_usb_40040000_P_status_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_compatible {"st,stm32-otghs"}
#define DT_N_S_soc_S_usb_40040000_P_compatible_IDX_0 "st,stm32-otghs"
#define DT_N_S_soc_S_usb_40040000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40040000, compatible, 0)
#define DT_N_S_soc_S_usb_40040000_P_compatible_LEN 1
#define DT_N_S_soc_S_usb_40040000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names {"otghs", "ep1_out", "ep1_in"}
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names_IDX_0 "otghs"
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names_IDX_1 "ep1_out"
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names_IDX_2 "ep1_in"
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40040000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_usb_40040000, interrupt_names, 1) \
	fn(DT_N_S_soc_S_usb_40040000, interrupt_names, 2)
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names_LEN 3
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /otgfs_phy
 *
 * Node identifier: DT_N_S_otgfs_phy
 *
 * Binding (compatible = usb-nop-xceiv):
 *   $ZEPHYR_BASE/dts/bindings/phy/usb-nop-xceiv.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_otgfs_phy_PATH "/otgfs_phy"

/* Node's name with unit-address: */
#define DT_N_S_otgfs_phy_FULL_NAME "otgfs_phy"

/* Node parent (/) identifier: */
#define DT_N_S_otgfs_phy_PARENT DT_N
#define DT_N_S_otgfs_phy_FOREACH_CHILD(fn) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_otgfs_phy_ORD 71

/* Ordinals for what this node depends on directly: */
#define DT_N_S_otgfs_phy_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_otgfs_phy_SUPPORTS_ORDS \
	74, /* /soc/usb@50000000 */

/* Existence and alternate IDs: */
#define DT_N_S_otgfs_phy_EXISTS 1
#define DT_N_INST_0_usb_nop_xceiv DT_N_S_otgfs_phy
#define DT_N_NODELABEL_otgfs_phy  DT_N_S_otgfs_phy

/* Special property macros: */
#define DT_N_S_otgfs_phy_REG_NUM 0
#define DT_N_S_otgfs_phy_IRQ_NUM 0
#define DT_N_S_otgfs_phy_COMPAT_MATCHES_usb_nop_xceiv 1
#define DT_N_S_otgfs_phy_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_otgfs_phy_P_compatible {"usb-nop-xceiv"}
#define DT_N_S_otgfs_phy_P_compatible_IDX_0 "usb-nop-xceiv"
#define DT_N_S_otgfs_phy_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_otgfs_phy_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_otgfs_phy, compatible, 0)
#define DT_N_S_otgfs_phy_P_compatible_LEN 1
#define DT_N_S_otgfs_phy_P_compatible_EXISTS 1
#define DT_N_S_otgfs_phy_P_label "OTGFS_PHY"
#define DT_N_S_otgfs_phy_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_otgfs_phy, label, 0) \
	fn(DT_N_S_otgfs_phy, label, 1) \
	fn(DT_N_S_otgfs_phy, label, 2) \
	fn(DT_N_S_otgfs_phy, label, 3) \
	fn(DT_N_S_otgfs_phy, label, 4) \
	fn(DT_N_S_otgfs_phy, label, 5) \
	fn(DT_N_S_otgfs_phy, label, 6) \
	fn(DT_N_S_otgfs_phy, label, 7) \
	fn(DT_N_S_otgfs_phy, label, 8)
#define DT_N_S_otgfs_phy_P_label_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_fs_dm_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_PATH "/soc/pin-controller@40020000/usb_otg_fs_dm_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_FULL_NAME "usb_otg_fs_dm_pa11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_ORD 72

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_SUPPORTS_ORDS \
	74, /* /soc/usb@50000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_EXISTS 1
#define DT_N_NODELABEL_usb_otg_fs_dm_pa11 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_pinmux 2826
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_fs_dp_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_PATH "/soc/pin-controller@40020000/usb_otg_fs_dp_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_FULL_NAME "usb_otg_fs_dp_pa12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_ORD 73

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_SUPPORTS_ORDS \
	74, /* /soc/usb@50000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_EXISTS 1
#define DT_N_NODELABEL_usb_otg_fs_dp_pa12 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_pinmux 3082
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/usb@50000000
 *
 * Node identifier: DT_N_S_soc_S_usb_50000000
 *
 * Binding (compatible = st,stm32-otgfs):
 *   $ZEPHYR_BASE/dts/bindings/usb/st,stm32-otgfs.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usb_50000000_PATH "/soc/usb@50000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usb_50000000_FULL_NAME "usb@50000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usb_50000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_usb_50000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usb_50000000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usb_50000000_ORD 74

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usb_50000000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */ \
	71, /* /otgfs_phy */ \
	72, /* /soc/pin-controller@40020000/usb_otg_fs_dm_pa11 */ \
	73, /* /soc/pin-controller@40020000/usb_otg_fs_dp_pa12 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usb_50000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usb_50000000_EXISTS 1
#define DT_N_INST_0_st_stm32_otgfs DT_N_S_soc_S_usb_50000000
#define DT_N_NODELABEL_usbotg_fs   DT_N_S_soc_S_usb_50000000
#define DT_N_NODELABEL_usb_otg1    DT_N_S_soc_S_usb_50000000

/* Special property macros: */
#define DT_N_S_soc_S_usb_50000000_REG_NUM 1
#define DT_N_S_soc_S_usb_50000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_REG_IDX_0_VAL_ADDRESS 1342177280 /* 0x50000000 */
#define DT_N_S_soc_S_usb_50000000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_usb_50000000_IRQ_NUM 1
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_irq 67
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_NAME_otgfs_VAL_irq DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_usb_50000000_IRQ_NAME_otgfs_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_NAME_otgfs_VAL_priority DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_usb_50000000_IRQ_NAME_otgfs_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_COMPAT_MATCHES_st_stm32_otgfs 1
#define DT_N_S_soc_S_usb_50000000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_usb_50000000_P_reg {1342177280 /* 0x50000000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_usb_50000000_P_reg_IDX_0 1342177280
#define DT_N_S_soc_S_usb_50000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_usb_50000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, reg, 0) \
	fn(DT_N_S_soc_S_usb_50000000, reg, 1)
#define DT_N_S_soc_S_usb_50000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupts {67 /* 0x43 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usb_50000000_P_interrupts_IDX_0 67
#define DT_N_S_soc_S_usb_50000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usb_50000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, interrupts, 0) \
	fn(DT_N_S_soc_S_usb_50000000, interrupts, 1)
#define DT_N_S_soc_S_usb_50000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_ram_size 1280
#define DT_N_S_soc_S_usb_50000000_P_ram_size_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_phys_IDX_0_PH DT_N_S_otgfs_phy
#define DT_N_S_soc_S_usb_50000000_P_phys_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_phys_LEN 1
#define DT_N_S_soc_S_usb_50000000_P_phys_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_VAL_bus 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_VAL_bits 128
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, clocks, 0)
#define DT_N_S_soc_S_usb_50000000_P_clocks_LEN 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dm_pa11
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_dp_pa12
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_usb_50000000, pinctrl_0, 1)
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_usb_50000000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_num_bidir_endpoints 4
#define DT_N_S_soc_S_usb_50000000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed "full-speed"
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_ENUM_IDX 1
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_ENUM_TOKEN full_speed
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_ENUM_UPPER_TOKEN FULL_SPEED
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 0) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 1) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 2) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 3) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 4) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 5) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 6) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 7) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 8) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 9)
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_label "OTGFS"
#define DT_N_S_soc_S_usb_50000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, label, 0) \
	fn(DT_N_S_soc_S_usb_50000000, label, 1) \
	fn(DT_N_S_soc_S_usb_50000000, label, 2) \
	fn(DT_N_S_soc_S_usb_50000000, label, 3) \
	fn(DT_N_S_soc_S_usb_50000000, label, 4)
#define DT_N_S_soc_S_usb_50000000_P_label_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_status "disabled"
#define DT_N_S_soc_S_usb_50000000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_usb_50000000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_usb_50000000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usb_50000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, status, 0) \
	fn(DT_N_S_soc_S_usb_50000000, status, 1) \
	fn(DT_N_S_soc_S_usb_50000000, status, 2) \
	fn(DT_N_S_soc_S_usb_50000000, status, 3) \
	fn(DT_N_S_soc_S_usb_50000000, status, 4) \
	fn(DT_N_S_soc_S_usb_50000000, status, 5) \
	fn(DT_N_S_soc_S_usb_50000000, status, 6) \
	fn(DT_N_S_soc_S_usb_50000000, status, 7)
#define DT_N_S_soc_S_usb_50000000_P_status_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_compatible {"st,stm32-otgfs"}
#define DT_N_S_soc_S_usb_50000000_P_compatible_IDX_0 "st,stm32-otgfs"
#define DT_N_S_soc_S_usb_50000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, compatible, 0)
#define DT_N_S_soc_S_usb_50000000_P_compatible_LEN 1
#define DT_N_S_soc_S_usb_50000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names {"otgfs"}
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_IDX_0 "otgfs"
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, interrupt_names, 0)
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40002c00
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40002c00
 *
 * Binding (compatible = st,stm32-window-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/st,stm32-window-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40002c00_PATH "/soc/watchdog@40002c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40002c00_FULL_NAME "watchdog@40002c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40002c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40002c00_ORD 75

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40002c00_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40002c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40002c00_EXISTS 1
#define DT_N_INST_0_st_stm32_window_watchdog DT_N_S_soc_S_watchdog_40002c00
#define DT_N_NODELABEL_wwdg                  DT_N_S_soc_S_watchdog_40002c00

/* Special property macros: */
#define DT_N_S_soc_S_watchdog_40002c00_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_ADDRESS 1073753088 /* 0x40002c00 */
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MATCHES_st_stm32_window_watchdog 1
#define DT_N_S_soc_S_watchdog_40002c00_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40002c00_P_reg {1073753088 /* 0x40002c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0 1073753088
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, reg, 0) \
	fn(DT_N_S_soc_S_watchdog_40002c00, reg, 1)
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_label "WWDG"
#define DT_N_S_soc_S_watchdog_40002c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, label, 0) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 1) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 2) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 3)
#define DT_N_S_soc_S_watchdog_40002c00_P_label_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 1) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 2) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 3) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 4) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 5) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 6) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 7)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible {"st,stm32-window-watchdog"}
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0 "st,stm32-window-watchdog"
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts {0 /* 0x0 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 0) \
	fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 1)
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40003000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40003000
 *
 * Binding (compatible = st,stm32-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/st,stm32-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40003000_PATH "/soc/watchdog@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40003000_FULL_NAME "watchdog@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40003000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40003000_ORD 76

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40003000_REQUIRES_ORDS \
	12, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40003000_EXISTS 1
#define DT_N_INST_0_st_stm32_watchdog DT_N_S_soc_S_watchdog_40003000
#define DT_N_NODELABEL_iwdg           DT_N_S_soc_S_watchdog_40003000

/* Special property macros: */
#define DT_N_S_soc_S_watchdog_40003000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40003000_IRQ_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MATCHES_st_stm32_watchdog 1
#define DT_N_S_soc_S_watchdog_40003000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40003000_P_reg {1073754112 /* 0x40003000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, reg, 0) \
	fn(DT_N_S_soc_S_watchdog_40003000, reg, 1)
#define DT_N_S_soc_S_watchdog_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_label "IWDG"
#define DT_N_S_soc_S_watchdog_40003000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, label, 0) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 1) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 2) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 3)
#define DT_N_S_soc_S_watchdog_40003000_P_label_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, status, 0) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 1) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 2) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 3) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 4) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 5) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 6) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 7)
#define DT_N_S_soc_S_watchdog_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible {"st,stm32-watchdog"}
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0 "st,stm32-watchdog"
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40023c00
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40023c00
 *
 * Binding (compatible = st,stm32-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/st,stm32-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40023c00_PATH "/soc/flash-controller@40023c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40023c00_FULL_NAME "flash-controller@40023c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_40023c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40023c00_ORD 77

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40023c00_REQUIRES_ORDS \
	12, /* /soc */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40023c00_SUPPORTS_ORDS \
	78, /* /soc/flash-controller@40023c00/flash@8000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40023c00_EXISTS 1
#define DT_N_INST_0_st_stm32_flash_controller   DT_N_S_soc_S_flash_controller_40023c00
#define DT_N_INST_0_st_stm32f4_flash_controller DT_N_S_soc_S_flash_controller_40023c00
#define DT_N_NODELABEL_flash                    DT_N_S_soc_S_flash_controller_40023c00

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_40023c00_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_REG_IDX_0_VAL_ADDRESS 1073888256 /* 0x40023c00 */
#define DT_N_S_soc_S_flash_controller_40023c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_MATCHES_st_stm32_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_MATCHES_st_stm32f4_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40023c00_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40023c00_P_label "FLASH_CTRL"
#define DT_N_S_soc_S_flash_controller_40023c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 6) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 7) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 8) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 9)
#define DT_N_S_soc_S_flash_controller_40023c00_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg {1073888256 /* 0x40023c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_0 1073888256
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, reg, 1)
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible {"st,stm32-flash-controller", "st,stm32f4-flash-controller"}
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_0 "st,stm32-flash-controller"
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_1 "st,stm32f4-flash-controller"
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts {4 /* 0x4 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00, interrupts, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, interrupts, 1)
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40023c00/flash@8000000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_PATH "/soc/flash-controller@40023c00/flash@8000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FULL_NAME "flash@8000000"

/* Node parent (/soc/flash-controller@40023c00) identifier: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_PARENT DT_N_S_soc_S_flash_controller_40023c00
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_ORD 78

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REQUIRES_ORDS \
	77, /* /soc/flash-controller@40023c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000

/* Special property macros: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_IDX_0_VAL_ADDRESS 134217728 /* 0x8000000 */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_IDX_0_VAL_SIZE 1048576 /* 0x100000 */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_label "FLASH_STM32"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 6) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 7) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 8) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 9) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 10)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_write_block_size 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg {134217728 /* 0x8000000 */, 1048576 /* 0x100000 */}
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_0 134217728
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_1 1048576
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, reg, 1)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in0_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_PATH "/soc/pin-controller@40020000/adc1_in0_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_FULL_NAME "adc1_in0_pa0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_ORD 79

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_EXISTS 1
#define DT_N_NODELABEL_adc1_in0_pa0 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_pinmux 16
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in0_pa0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in10_pc0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_PATH "/soc/pin-controller@40020000/adc1_in10_pc0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_FULL_NAME "adc1_in10_pc0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_ORD 80

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_EXISTS 1
#define DT_N_NODELABEL_adc1_in10_pc0 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_pinmux 8208
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in10_pc0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in11_pc1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_PATH "/soc/pin-controller@40020000/adc1_in11_pc1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_FULL_NAME "adc1_in11_pc1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_ORD 81

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_EXISTS 1
#define DT_N_NODELABEL_adc1_in11_pc1 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_pinmux 8464
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in11_pc1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in12_pc2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_PATH "/soc/pin-controller@40020000/adc1_in12_pc2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_FULL_NAME "adc1_in12_pc2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_ORD 82

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_EXISTS 1
#define DT_N_NODELABEL_adc1_in12_pc2 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_pinmux 8720
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in12_pc2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in13_pc3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_PATH "/soc/pin-controller@40020000/adc1_in13_pc3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_FULL_NAME "adc1_in13_pc3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_ORD 83

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_EXISTS 1
#define DT_N_NODELABEL_adc1_in13_pc3 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_pinmux 8976
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in13_pc3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in14_pc4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_PATH "/soc/pin-controller@40020000/adc1_in14_pc4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_FULL_NAME "adc1_in14_pc4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_ORD 84

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_EXISTS 1
#define DT_N_NODELABEL_adc1_in14_pc4 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_pinmux 9232
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in14_pc4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in15_pc5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_PATH "/soc/pin-controller@40020000/adc1_in15_pc5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_FULL_NAME "adc1_in15_pc5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_ORD 85

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_EXISTS 1
#define DT_N_NODELABEL_adc1_in15_pc5 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_pinmux 9488
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in15_pc5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in1_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_PATH "/soc/pin-controller@40020000/adc1_in1_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_FULL_NAME "adc1_in1_pa1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_ORD 86

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_EXISTS 1
#define DT_N_NODELABEL_adc1_in1_pa1 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_pinmux 272
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in1_pa1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in2_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_PATH "/soc/pin-controller@40020000/adc1_in2_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_FULL_NAME "adc1_in2_pa2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_ORD 87

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_EXISTS 1
#define DT_N_NODELABEL_adc1_in2_pa2 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_pinmux 528
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in2_pa2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in3_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_PATH "/soc/pin-controller@40020000/adc1_in3_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_FULL_NAME "adc1_in3_pa3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_ORD 88

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_EXISTS 1
#define DT_N_NODELABEL_adc1_in3_pa3 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_pinmux 784
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in3_pa3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in4_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_PATH "/soc/pin-controller@40020000/adc1_in4_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_FULL_NAME "adc1_in4_pa4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_ORD 89

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_EXISTS 1
#define DT_N_NODELABEL_adc1_in4_pa4 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_pinmux 1040
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in4_pa4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in5_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_PATH "/soc/pin-controller@40020000/adc1_in5_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_FULL_NAME "adc1_in5_pa5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_ORD 90

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_EXISTS 1
#define DT_N_NODELABEL_adc1_in5_pa5 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_pinmux 1296
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in5_pa5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in6_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_PATH "/soc/pin-controller@40020000/adc1_in6_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_FULL_NAME "adc1_in6_pa6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_ORD 91

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_EXISTS 1
#define DT_N_NODELABEL_adc1_in6_pa6 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_pinmux 1552
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in6_pa6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in7_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_PATH "/soc/pin-controller@40020000/adc1_in7_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_FULL_NAME "adc1_in7_pa7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_ORD 92

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_EXISTS 1
#define DT_N_NODELABEL_adc1_in7_pa7 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_pinmux 1808
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in7_pa7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in8_pb0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_PATH "/soc/pin-controller@40020000/adc1_in8_pb0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_FULL_NAME "adc1_in8_pb0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_ORD 93

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_EXISTS 1
#define DT_N_NODELABEL_adc1_in8_pb0 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_pinmux 4112
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in8_pb0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc1_in9_pb1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_PATH "/soc/pin-controller@40020000/adc1_in9_pb1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_FULL_NAME "adc1_in9_pb1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_ORD 94

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_EXISTS 1
#define DT_N_NODELABEL_adc1_in9_pb1 DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_pinmux 4368
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc1_in9_pb1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc2_in0_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_PATH "/soc/pin-controller@40020000/adc2_in0_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_FULL_NAME "adc2_in0_pa0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_ORD 95

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_EXISTS 1
#define DT_N_NODELABEL_adc2_in0_pa0 DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_P_pinmux 16
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in0_pa0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc2_in10_pc0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_PATH "/soc/pin-controller@40020000/adc2_in10_pc0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_FULL_NAME "adc2_in10_pc0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_ORD 96

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_EXISTS 1
#define DT_N_NODELABEL_adc2_in10_pc0 DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_P_pinmux 8208
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in10_pc0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc2_in11_pc1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_PATH "/soc/pin-controller@40020000/adc2_in11_pc1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_FULL_NAME "adc2_in11_pc1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_ORD 97

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_EXISTS 1
#define DT_N_NODELABEL_adc2_in11_pc1 DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_P_pinmux 8464
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in11_pc1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc2_in12_pc2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_PATH "/soc/pin-controller@40020000/adc2_in12_pc2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_FULL_NAME "adc2_in12_pc2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_ORD 98

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_EXISTS 1
#define DT_N_NODELABEL_adc2_in12_pc2 DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_P_pinmux 8720
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in12_pc2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc2_in13_pc3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_PATH "/soc/pin-controller@40020000/adc2_in13_pc3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_FULL_NAME "adc2_in13_pc3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_ORD 99

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_EXISTS 1
#define DT_N_NODELABEL_adc2_in13_pc3 DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_P_pinmux 8976
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in13_pc3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc2_in14_pc4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_PATH "/soc/pin-controller@40020000/adc2_in14_pc4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_FULL_NAME "adc2_in14_pc4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_ORD 100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_EXISTS 1
#define DT_N_NODELABEL_adc2_in14_pc4 DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_P_pinmux 9232
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in14_pc4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc2_in15_pc5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_PATH "/soc/pin-controller@40020000/adc2_in15_pc5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_FULL_NAME "adc2_in15_pc5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_ORD 101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_EXISTS 1
#define DT_N_NODELABEL_adc2_in15_pc5 DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_P_pinmux 9488
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in15_pc5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc2_in1_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_PATH "/soc/pin-controller@40020000/adc2_in1_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_FULL_NAME "adc2_in1_pa1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_ORD 102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_EXISTS 1
#define DT_N_NODELABEL_adc2_in1_pa1 DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_P_pinmux 272
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in1_pa1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc2_in2_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_PATH "/soc/pin-controller@40020000/adc2_in2_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_FULL_NAME "adc2_in2_pa2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_ORD 103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_EXISTS 1
#define DT_N_NODELABEL_adc2_in2_pa2 DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_P_pinmux 528
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in2_pa2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc2_in3_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_PATH "/soc/pin-controller@40020000/adc2_in3_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_FULL_NAME "adc2_in3_pa3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_ORD 104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_EXISTS 1
#define DT_N_NODELABEL_adc2_in3_pa3 DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_P_pinmux 784
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in3_pa3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc2_in4_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_PATH "/soc/pin-controller@40020000/adc2_in4_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_FULL_NAME "adc2_in4_pa4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_ORD 105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_EXISTS 1
#define DT_N_NODELABEL_adc2_in4_pa4 DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_P_pinmux 1040
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in4_pa4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc2_in5_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_PATH "/soc/pin-controller@40020000/adc2_in5_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_FULL_NAME "adc2_in5_pa5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_ORD 106

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_EXISTS 1
#define DT_N_NODELABEL_adc2_in5_pa5 DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_P_pinmux 1296
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in5_pa5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc2_in6_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_PATH "/soc/pin-controller@40020000/adc2_in6_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_FULL_NAME "adc2_in6_pa6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_ORD 107

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_EXISTS 1
#define DT_N_NODELABEL_adc2_in6_pa6 DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_P_pinmux 1552
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in6_pa6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc2_in7_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_PATH "/soc/pin-controller@40020000/adc2_in7_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_FULL_NAME "adc2_in7_pa7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_ORD 108

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_EXISTS 1
#define DT_N_NODELABEL_adc2_in7_pa7 DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_P_pinmux 1808
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in7_pa7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc2_in8_pb0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_PATH "/soc/pin-controller@40020000/adc2_in8_pb0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_FULL_NAME "adc2_in8_pb0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_ORD 109

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_EXISTS 1
#define DT_N_NODELABEL_adc2_in8_pb0 DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_P_pinmux 4112
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in8_pb0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc2_in9_pb1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_PATH "/soc/pin-controller@40020000/adc2_in9_pb1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_FULL_NAME "adc2_in9_pb1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_ORD 110

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_EXISTS 1
#define DT_N_NODELABEL_adc2_in9_pb1 DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_P_pinmux 4368
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc2_in9_pb1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc3_in0_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_PATH "/soc/pin-controller@40020000/adc3_in0_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_FULL_NAME "adc3_in0_pa0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_ORD 111

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_EXISTS 1
#define DT_N_NODELABEL_adc3_in0_pa0 DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_P_pinmux 16
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in0_pa0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc3_in10_pc0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_PATH "/soc/pin-controller@40020000/adc3_in10_pc0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_FULL_NAME "adc3_in10_pc0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_ORD 112

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_EXISTS 1
#define DT_N_NODELABEL_adc3_in10_pc0 DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_P_pinmux 8208
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in10_pc0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc3_in11_pc1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_PATH "/soc/pin-controller@40020000/adc3_in11_pc1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_FULL_NAME "adc3_in11_pc1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_ORD 113

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_EXISTS 1
#define DT_N_NODELABEL_adc3_in11_pc1 DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_P_pinmux 8464
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in11_pc1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc3_in12_pc2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_PATH "/soc/pin-controller@40020000/adc3_in12_pc2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_FULL_NAME "adc3_in12_pc2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_ORD 114

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_EXISTS 1
#define DT_N_NODELABEL_adc3_in12_pc2 DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_P_pinmux 8720
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in12_pc2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc3_in13_pc3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_PATH "/soc/pin-controller@40020000/adc3_in13_pc3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_FULL_NAME "adc3_in13_pc3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_ORD 115

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_EXISTS 1
#define DT_N_NODELABEL_adc3_in13_pc3 DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_P_pinmux 8976
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in13_pc3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc3_in14_pf4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_PATH "/soc/pin-controller@40020000/adc3_in14_pf4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_FULL_NAME "adc3_in14_pf4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_ORD 116

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_EXISTS 1
#define DT_N_NODELABEL_adc3_in14_pf4 DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_P_pinmux 21520
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in14_pf4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc3_in15_pf5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_PATH "/soc/pin-controller@40020000/adc3_in15_pf5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_FULL_NAME "adc3_in15_pf5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_ORD 117

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_EXISTS 1
#define DT_N_NODELABEL_adc3_in15_pf5 DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_P_pinmux 21776
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in15_pf5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc3_in1_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_PATH "/soc/pin-controller@40020000/adc3_in1_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_FULL_NAME "adc3_in1_pa1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_ORD 118

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_EXISTS 1
#define DT_N_NODELABEL_adc3_in1_pa1 DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_P_pinmux 272
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in1_pa1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc3_in2_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_PATH "/soc/pin-controller@40020000/adc3_in2_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_FULL_NAME "adc3_in2_pa2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_ORD 119

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_EXISTS 1
#define DT_N_NODELABEL_adc3_in2_pa2 DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_P_pinmux 528
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in2_pa2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc3_in3_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_PATH "/soc/pin-controller@40020000/adc3_in3_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_FULL_NAME "adc3_in3_pa3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_ORD 120

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_EXISTS 1
#define DT_N_NODELABEL_adc3_in3_pa3 DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_P_pinmux 784
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in3_pa3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc3_in4_pf6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_PATH "/soc/pin-controller@40020000/adc3_in4_pf6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_FULL_NAME "adc3_in4_pf6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_ORD 121

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_EXISTS 1
#define DT_N_NODELABEL_adc3_in4_pf6 DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_P_pinmux 22032
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in4_pf6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc3_in5_pf7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_PATH "/soc/pin-controller@40020000/adc3_in5_pf7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_FULL_NAME "adc3_in5_pf7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_ORD 122

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_EXISTS 1
#define DT_N_NODELABEL_adc3_in5_pf7 DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_P_pinmux 22288
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in5_pf7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc3_in6_pf8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_PATH "/soc/pin-controller@40020000/adc3_in6_pf8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_FULL_NAME "adc3_in6_pf8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_ORD 123

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_EXISTS 1
#define DT_N_NODELABEL_adc3_in6_pf8 DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_P_pinmux 22544
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in6_pf8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc3_in7_pf9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_PATH "/soc/pin-controller@40020000/adc3_in7_pf9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_FULL_NAME "adc3_in7_pf9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_ORD 124

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_EXISTS 1
#define DT_N_NODELABEL_adc3_in7_pf9 DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_P_pinmux 22800
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in7_pf9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc3_in8_pf10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_PATH "/soc/pin-controller@40020000/adc3_in8_pf10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_FULL_NAME "adc3_in8_pf10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_ORD 125

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_EXISTS 1
#define DT_N_NODELABEL_adc3_in8_pf10 DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_P_pinmux 23056
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in8_pf10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/adc3_in9_pf3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_PATH "/soc/pin-controller@40020000/adc3_in9_pf3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_FULL_NAME "adc3_in9_pf3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_ORD 126

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_EXISTS 1
#define DT_N_NODELABEL_adc3_in9_pf3 DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_P_pinmux 21264
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_adc3_in9_pf3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/can1_rx_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_PATH "/soc/pin-controller@40020000/can1_rx_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_FULL_NAME "can1_rx_pa11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_ORD 127

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_EXISTS 1
#define DT_N_NODELABEL_can1_rx_pa11 DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_P_pinmux 2825
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pa11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/can1_rx_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_PATH "/soc/pin-controller@40020000/can1_rx_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_FULL_NAME "can1_rx_pb8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_ORD 128

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_EXISTS 1
#define DT_N_NODELABEL_can1_rx_pb8 DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_P_pinmux 6153
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pb8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/can1_rx_pd0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_PATH "/soc/pin-controller@40020000/can1_rx_pd0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_FULL_NAME "can1_rx_pd0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_ORD 129

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_EXISTS 1
#define DT_N_NODELABEL_can1_rx_pd0 DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_P_pinmux 12297
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_rx_pd0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/can1_tx_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_PATH "/soc/pin-controller@40020000/can1_tx_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_FULL_NAME "can1_tx_pa12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_ORD 130

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_EXISTS 1
#define DT_N_NODELABEL_can1_tx_pa12 DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_P_pinmux 3081
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pa12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/can1_tx_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_PATH "/soc/pin-controller@40020000/can1_tx_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_FULL_NAME "can1_tx_pb9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_ORD 131

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_EXISTS 1
#define DT_N_NODELABEL_can1_tx_pb9 DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_P_pinmux 6409
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pb9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/can1_tx_pd1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_PATH "/soc/pin-controller@40020000/can1_tx_pd1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_FULL_NAME "can1_tx_pd1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_ORD 132

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_EXISTS 1
#define DT_N_NODELABEL_can1_tx_pd1 DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_P_pinmux 12553
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can1_tx_pd1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/can2_rx_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_PATH "/soc/pin-controller@40020000/can2_rx_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_FULL_NAME "can2_rx_pb12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_ORD 133

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_EXISTS 1
#define DT_N_NODELABEL_can2_rx_pb12 DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_P_pinmux 7177
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/can2_rx_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_PATH "/soc/pin-controller@40020000/can2_rx_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_FULL_NAME "can2_rx_pb5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_ORD 134

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_EXISTS 1
#define DT_N_NODELABEL_can2_rx_pb5 DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_P_pinmux 5385
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_rx_pb5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/can2_tx_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_PATH "/soc/pin-controller@40020000/can2_tx_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_FULL_NAME "can2_tx_pb13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_ORD 135

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_EXISTS 1
#define DT_N_NODELABEL_can2_tx_pb13 DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_P_pinmux 7433
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/can2_tx_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_PATH "/soc/pin-controller@40020000/can2_tx_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_FULL_NAME "can2_tx_pb6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_ORD 136

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_EXISTS 1
#define DT_N_NODELABEL_can2_tx_pb6 DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_P_pinmux 5641
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_can2_tx_pb6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/dac_out1_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_PATH "/soc/pin-controller@40020000/dac_out1_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_FULL_NAME "dac_out1_pa4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_ORD 137

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_EXISTS 1
#define DT_N_NODELABEL_dac_out1_pa4 DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_P_pinmux 1040
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out1_pa4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/dac_out2_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_PATH "/soc/pin-controller@40020000/dac_out2_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_FULL_NAME "dac_out2_pa5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_ORD 138

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_EXISTS 1
#define DT_N_NODELABEL_dac_out2_pa5 DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_P_pinmux 1296
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_dac_out2_pa5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_crs_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_PATH "/soc/pin-controller@40020000/eth_crs_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_FULL_NAME "eth_crs_pa0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_ORD 139

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_EXISTS 1
#define DT_N_NODELABEL_eth_crs_pa0 DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_P_pinmux 11
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_crs_pa0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_pps_out_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_PATH "/soc/pin-controller@40020000/eth_pps_out_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_FULL_NAME "eth_pps_out_pb5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_ORD 140

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_EXISTS 1
#define DT_N_NODELABEL_eth_pps_out_pb5 DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_P_pinmux 5387
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pb5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_pps_out_pg8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_PATH "/soc/pin-controller@40020000/eth_pps_out_pg8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_FULL_NAME "eth_pps_out_pg8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_ORD 141

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_EXISTS 1
#define DT_N_NODELABEL_eth_pps_out_pg8 DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_P_pinmux 26635
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_pps_out_pg8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_rx_clk_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_PATH "/soc/pin-controller@40020000/eth_rx_clk_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_FULL_NAME "eth_rx_clk_pa1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_ORD 142

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_EXISTS 1
#define DT_N_NODELABEL_eth_rx_clk_pa1 DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_P_pinmux 267
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_clk_pa1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_rx_dv_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_PATH "/soc/pin-controller@40020000/eth_rx_dv_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_FULL_NAME "eth_rx_dv_pa7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_ORD 143

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_EXISTS 1
#define DT_N_NODELABEL_eth_rx_dv_pa7 DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_P_pinmux 1803
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_dv_pa7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_rx_er_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_PATH "/soc/pin-controller@40020000/eth_rx_er_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_FULL_NAME "eth_rx_er_pb10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_ORD 144

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_EXISTS 1
#define DT_N_NODELABEL_eth_rx_er_pb10 DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_P_pinmux 6667
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rx_er_pb10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_rxd2_pb0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_PATH "/soc/pin-controller@40020000/eth_rxd2_pb0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_FULL_NAME "eth_rxd2_pb0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_ORD 145

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_EXISTS 1
#define DT_N_NODELABEL_eth_rxd2_pb0 DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_P_pinmux 4107
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd2_pb0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_rxd3_pb1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_PATH "/soc/pin-controller@40020000/eth_rxd3_pb1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_FULL_NAME "eth_rxd3_pb1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_ORD 146

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_EXISTS 1
#define DT_N_NODELABEL_eth_rxd3_pb1 DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_P_pinmux 4363
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_rxd3_pb1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_tx_clk_pc3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_PATH "/soc/pin-controller@40020000/eth_tx_clk_pc3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_FULL_NAME "eth_tx_clk_pc3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_ORD 147

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_EXISTS 1
#define DT_N_NODELABEL_eth_tx_clk_pc3 DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_P_pinmux 8971
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_clk_pc3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_tx_en_pb11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_PATH "/soc/pin-controller@40020000/eth_tx_en_pb11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_FULL_NAME "eth_tx_en_pb11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_ORD 148

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_EXISTS 1
#define DT_N_NODELABEL_eth_tx_en_pb11 DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_P_pinmux 6923
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_tx_en_pb11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_txd0_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_PATH "/soc/pin-controller@40020000/eth_txd0_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_FULL_NAME "eth_txd0_pb12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_ORD 149

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_EXISTS 1
#define DT_N_NODELABEL_eth_txd0_pb12 DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_P_pinmux 7179
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd0_pb12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_txd1_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_PATH "/soc/pin-controller@40020000/eth_txd1_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_FULL_NAME "eth_txd1_pb13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_ORD 150

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_EXISTS 1
#define DT_N_NODELABEL_eth_txd1_pb13 DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_P_pinmux 7435
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd1_pb13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_txd2_pc2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_PATH "/soc/pin-controller@40020000/eth_txd2_pc2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_FULL_NAME "eth_txd2_pc2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_ORD 151

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_EXISTS 1
#define DT_N_NODELABEL_eth_txd2_pc2 DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_P_pinmux 8715
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd2_pc2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_txd3_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_PATH "/soc/pin-controller@40020000/eth_txd3_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_FULL_NAME "eth_txd3_pb8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_ORD 152

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_EXISTS 1
#define DT_N_NODELABEL_eth_txd3_pb8 DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_P_pinmux 6155
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pb8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/eth_txd3_pe2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_PATH "/soc/pin-controller@40020000/eth_txd3_pe2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_FULL_NAME "eth_txd3_pe2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_ORD 153

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_EXISTS 1
#define DT_N_NODELABEL_eth_txd3_pe2 DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_P_pinmux 16907
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_eth_txd3_pe2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_PATH "/soc/pin-controller@40020000/gpio@40020c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FULL_NAME "gpio@40020c00"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_ORD 154

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_EXISTS 1
#define DT_N_INST_3_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_NODELABEL_gpiod      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_IDX_0_VAL_ADDRESS 1073875968 /* 0x40020c00 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg {1073875968 /* 0x40020c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_0 1073875968
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_label "GPIOD"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_PATH "/soc/pin-controller@40020000/gpio@40021000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FULL_NAME "gpio@40021000"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_ORD 155

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_EXISTS 1
#define DT_N_INST_4_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_NODELABEL_gpioe      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_IDX_0_VAL_ADDRESS 1073876992 /* 0x40021000 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg {1073876992 /* 0x40021000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_0 1073876992
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_label "GPIOE"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_PATH "/soc/pin-controller@40020000/gpio@40021400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FULL_NAME "gpio@40021400"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_ORD 156

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_EXISTS 1
#define DT_N_INST_6_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400
#define DT_N_NODELABEL_gpiof      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_IDX_0_VAL_ADDRESS 1073878016 /* 0x40021400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg {1073878016 /* 0x40021400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_0 1073878016
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_label "GPIOF"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_PATH "/soc/pin-controller@40020000/gpio@40021800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FULL_NAME "gpio@40021800"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_ORD 157

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_EXISTS 1
#define DT_N_INST_7_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800
#define DT_N_NODELABEL_gpiog      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_IDX_0_VAL_ADDRESS 1073879040 /* 0x40021800 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg {1073879040 /* 0x40021800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_0 1073879040
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_label "GPIOG"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_VAL_bits 64
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_PATH "/soc/pin-controller@40020000/gpio@40021c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FULL_NAME "gpio@40021c00"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_ORD 158

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_EXISTS 1
#define DT_N_INST_5_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00
#define DT_N_NODELABEL_gpioh      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_IDX_0_VAL_ADDRESS 1073880064 /* 0x40021c00 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg {1073880064 /* 0x40021c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_0 1073880064
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_label "GPIOH"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_VAL_bits 128
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40022000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_PATH "/soc/pin-controller@40020000/gpio@40022000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_FULL_NAME "gpio@40022000"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_ORD 159

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_EXISTS 1
#define DT_N_INST_8_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000
#define DT_N_NODELABEL_gpioi      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_REG_IDX_0_VAL_ADDRESS 1073881088 /* 0x40022000 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg {1073881088 /* 0x40022000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg_IDX_0 1073881088
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_label "GPIOI"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_IDX_0_VAL_bus 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_IDX_0_VAL_bits 256
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c1_scl_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_PATH "/soc/pin-controller@40020000/i2c1_scl_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_FULL_NAME "i2c1_scl_pb6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_ORD 160

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_EXISTS 1
#define DT_N_NODELABEL_i2c1_scl_pb6 DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_pinmux 5636
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c1_scl_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_PATH "/soc/pin-controller@40020000/i2c1_scl_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_FULL_NAME "i2c1_scl_pb8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_ORD 161

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_EXISTS 1
#define DT_N_NODELABEL_i2c1_scl_pb8 DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_pinmux 6148
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c1_sda_pb7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_PATH "/soc/pin-controller@40020000/i2c1_sda_pb7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_FULL_NAME "i2c1_sda_pb7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_ORD 162

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_EXISTS 1
#define DT_N_NODELABEL_i2c1_sda_pb7 DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_pinmux 5892
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c1_sda_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_PATH "/soc/pin-controller@40020000/i2c1_sda_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FULL_NAME "i2c1_sda_pb9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_ORD 163

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_EXISTS 1
#define DT_N_NODELABEL_i2c1_sda_pb9 DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_pinmux 6404
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c2_scl_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_PATH "/soc/pin-controller@40020000/i2c2_scl_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_FULL_NAME "i2c2_scl_pb10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_ORD 164

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_EXISTS 1
#define DT_N_NODELABEL_i2c2_scl_pb10 DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_pinmux 6660
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c2_scl_pf1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_PATH "/soc/pin-controller@40020000/i2c2_scl_pf1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_FULL_NAME "i2c2_scl_pf1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_ORD 165

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_EXISTS 1
#define DT_N_NODELABEL_i2c2_scl_pf1 DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_P_pinmux 20740
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pf1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c2_sda_pb11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_PATH "/soc/pin-controller@40020000/i2c2_sda_pb11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_FULL_NAME "i2c2_sda_pb11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_ORD 166

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_EXISTS 1
#define DT_N_NODELABEL_i2c2_sda_pb11 DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_pinmux 6916
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c2_sda_pf0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_PATH "/soc/pin-controller@40020000/i2c2_sda_pf0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_FULL_NAME "i2c2_sda_pf0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_ORD 167

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_EXISTS 1
#define DT_N_NODELABEL_i2c2_sda_pf0 DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_P_pinmux 20484
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pf0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c3_scl_pa8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_PATH "/soc/pin-controller@40020000/i2c3_scl_pa8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_FULL_NAME "i2c3_scl_pa8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_ORD 168

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_EXISTS 1
#define DT_N_NODELABEL_i2c3_scl_pa8 DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_pinmux 2052
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c3_sda_pc9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_PATH "/soc/pin-controller@40020000/i2c3_sda_pc9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_FULL_NAME "i2c3_sda_pc9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_ORD 169

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_EXISTS 1
#define DT_N_NODELABEL_i2c3_sda_pc9 DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_pinmux 10500
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s2_ck_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_PATH "/soc/pin-controller@40020000/i2s2_ck_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_FULL_NAME "i2s2_ck_pb10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_ORD 170

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_EXISTS 1
#define DT_N_NODELABEL_i2s2_ck_pb10 DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_pinmux 6661
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s2_ck_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_PATH "/soc/pin-controller@40020000/i2s2_ck_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_FULL_NAME "i2s2_ck_pb13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_ORD 171

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_EXISTS 1
#define DT_N_NODELABEL_i2s2_ck_pb13 DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_pinmux 7429
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ck_pb13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s2_sd_pb15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_PATH "/soc/pin-controller@40020000/i2s2_sd_pb15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_FULL_NAME "i2s2_sd_pb15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_ORD 172

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_EXISTS 1
#define DT_N_NODELABEL_i2s2_sd_pb15 DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_pinmux 7941
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pb15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s2_sd_pc3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_PATH "/soc/pin-controller@40020000/i2s2_sd_pc3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_FULL_NAME "i2s2_sd_pc3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_ORD 173

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_EXISTS 1
#define DT_N_NODELABEL_i2s2_sd_pc3 DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_pinmux 8965
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_sd_pc3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s2_ws_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_PATH "/soc/pin-controller@40020000/i2s2_ws_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_FULL_NAME "i2s2_ws_pb12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_ORD 174

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_EXISTS 1
#define DT_N_NODELABEL_i2s2_ws_pb12 DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_pinmux 7173
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s2_ws_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_PATH "/soc/pin-controller@40020000/i2s2_ws_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_FULL_NAME "i2s2_ws_pb9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_ORD 175

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_EXISTS 1
#define DT_N_NODELABEL_i2s2_ws_pb9 DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_pinmux 6405
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s2_ws_pb9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s3_ck_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_PATH "/soc/pin-controller@40020000/i2s3_ck_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_FULL_NAME "i2s3_ck_pb3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_ORD 176

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_EXISTS 1
#define DT_N_NODELABEL_i2s3_ck_pb3 DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_pinmux 4870
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pb3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s3_ck_pc10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_PATH "/soc/pin-controller@40020000/i2s3_ck_pc10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_FULL_NAME "i2s3_ck_pc10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_ORD 177

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_EXISTS 1
#define DT_N_NODELABEL_i2s3_ck_pc10 DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_pinmux 10758
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ck_pc10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s3_sd_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_PATH "/soc/pin-controller@40020000/i2s3_sd_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_FULL_NAME "i2s3_sd_pb5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_ORD 178

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_EXISTS 1
#define DT_N_NODELABEL_i2s3_sd_pb5 DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_pinmux 5382
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pb5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s3_sd_pc12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_PATH "/soc/pin-controller@40020000/i2s3_sd_pc12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_FULL_NAME "i2s3_sd_pc12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_ORD 179

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_EXISTS 1
#define DT_N_NODELABEL_i2s3_sd_pc12 DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_pinmux 11270
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_sd_pc12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s3_ws_pa15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_PATH "/soc/pin-controller@40020000/i2s3_ws_pa15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_FULL_NAME "i2s3_ws_pa15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_ORD 180

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_EXISTS 1
#define DT_N_NODELABEL_i2s3_ws_pa15 DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_pinmux 3846
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2s3_ws_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_PATH "/soc/pin-controller@40020000/i2s3_ws_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_FULL_NAME "i2s3_ws_pa4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_ORD 181

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_EXISTS 1
#define DT_N_NODELABEL_i2s3_ws_pa4 DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_pinmux 1030
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2s3_ws_pa4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi1_miso_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_PATH "/soc/pin-controller@40020000/spi1_miso_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_FULL_NAME "spi1_miso_pa6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_ORD 182

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_EXISTS 1
#define DT_N_NODELABEL_spi1_miso_pa6 DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_pinmux 1541
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pa6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi1_miso_pb4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_PATH "/soc/pin-controller@40020000/spi1_miso_pb4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_FULL_NAME "spi1_miso_pb4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_ORD 183

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_EXISTS 1
#define DT_N_NODELABEL_spi1_miso_pb4 DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_pinmux 5125
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_miso_pb4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi1_mosi_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_PATH "/soc/pin-controller@40020000/spi1_mosi_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_FULL_NAME "spi1_mosi_pa7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_ORD 184

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_EXISTS 1
#define DT_N_NODELABEL_spi1_mosi_pa7 DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_pinmux 1797
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pa7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi1_mosi_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_PATH "/soc/pin-controller@40020000/spi1_mosi_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_FULL_NAME "spi1_mosi_pb5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_ORD 185

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_EXISTS 1
#define DT_N_NODELABEL_spi1_mosi_pb5 DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_pinmux 5381
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_mosi_pb5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi1_nss_pa15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_PATH "/soc/pin-controller@40020000/spi1_nss_pa15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_FULL_NAME "spi1_nss_pa15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_ORD 186

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_EXISTS 1
#define DT_N_NODELABEL_spi1_nss_pa15 DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_pinmux 3845
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi1_nss_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_PATH "/soc/pin-controller@40020000/spi1_nss_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_FULL_NAME "spi1_nss_pa4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_ORD 187

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_EXISTS 1
#define DT_N_NODELABEL_spi1_nss_pa4 DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_pinmux 1029
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_nss_pa4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi1_sck_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_PATH "/soc/pin-controller@40020000/spi1_sck_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_FULL_NAME "spi1_sck_pa5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_ORD 188

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_EXISTS 1
#define DT_N_NODELABEL_spi1_sck_pa5 DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_pinmux 1285
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pa5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi1_sck_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_PATH "/soc/pin-controller@40020000/spi1_sck_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_FULL_NAME "spi1_sck_pb3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_ORD 189

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_EXISTS 1
#define DT_N_NODELABEL_spi1_sck_pb3 DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_pinmux 4869
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi1_sck_pb3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi2_miso_pb14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_PATH "/soc/pin-controller@40020000/spi2_miso_pb14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_FULL_NAME "spi2_miso_pb14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_ORD 190

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_EXISTS 1
#define DT_N_NODELABEL_spi2_miso_pb14 DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_pinmux 7685
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pb14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi2_miso_pc2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_PATH "/soc/pin-controller@40020000/spi2_miso_pc2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_FULL_NAME "spi2_miso_pc2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_ORD 191

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_EXISTS 1
#define DT_N_NODELABEL_spi2_miso_pc2 DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_pinmux 8709
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_miso_pc2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi2_mosi_pb15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_PATH "/soc/pin-controller@40020000/spi2_mosi_pb15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_FULL_NAME "spi2_mosi_pb15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_ORD 192

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_EXISTS 1
#define DT_N_NODELABEL_spi2_mosi_pb15 DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_pinmux 7941
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pb15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi2_mosi_pc3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_PATH "/soc/pin-controller@40020000/spi2_mosi_pc3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_FULL_NAME "spi2_mosi_pc3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_ORD 193

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_EXISTS 1
#define DT_N_NODELABEL_spi2_mosi_pc3 DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_pinmux 8965
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_mosi_pc3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi2_nss_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_PATH "/soc/pin-controller@40020000/spi2_nss_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_FULL_NAME "spi2_nss_pb12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_ORD 194

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_EXISTS 1
#define DT_N_NODELABEL_spi2_nss_pb12 DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_pinmux 7173
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi2_nss_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_PATH "/soc/pin-controller@40020000/spi2_nss_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_FULL_NAME "spi2_nss_pb9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_ORD 195

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_EXISTS 1
#define DT_N_NODELABEL_spi2_nss_pb9 DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_pinmux 6405
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_nss_pb9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi2_sck_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_PATH "/soc/pin-controller@40020000/spi2_sck_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_FULL_NAME "spi2_sck_pb10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_ORD 196

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_EXISTS 1
#define DT_N_NODELABEL_spi2_sck_pb10 DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_pinmux 6661
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi2_sck_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_PATH "/soc/pin-controller@40020000/spi2_sck_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_FULL_NAME "spi2_sck_pb13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_ORD 197

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_EXISTS 1
#define DT_N_NODELABEL_spi2_sck_pb13 DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_pinmux 7429
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi2_sck_pb13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi3_miso_pb4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_PATH "/soc/pin-controller@40020000/spi3_miso_pb4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_FULL_NAME "spi3_miso_pb4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_ORD 198

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_EXISTS 1
#define DT_N_NODELABEL_spi3_miso_pb4 DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_pinmux 5126
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pb4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi3_miso_pc11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_PATH "/soc/pin-controller@40020000/spi3_miso_pc11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_FULL_NAME "spi3_miso_pc11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_ORD 199

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_EXISTS 1
#define DT_N_NODELABEL_spi3_miso_pc11 DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_pinmux 11014
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_miso_pc11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi3_mosi_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_PATH "/soc/pin-controller@40020000/spi3_mosi_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_FULL_NAME "spi3_mosi_pb5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_ORD 200

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_EXISTS 1
#define DT_N_NODELABEL_spi3_mosi_pb5 DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_pinmux 5382
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pb5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi3_mosi_pc12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_PATH "/soc/pin-controller@40020000/spi3_mosi_pc12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_FULL_NAME "spi3_mosi_pc12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_ORD 201

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_EXISTS 1
#define DT_N_NODELABEL_spi3_mosi_pc12 DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_pinmux 11270
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_mosi_pc12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi3_nss_pa15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_PATH "/soc/pin-controller@40020000/spi3_nss_pa15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_FULL_NAME "spi3_nss_pa15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_ORD 202

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_EXISTS 1
#define DT_N_NODELABEL_spi3_nss_pa15 DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_pinmux 3846
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi3_nss_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_PATH "/soc/pin-controller@40020000/spi3_nss_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_FULL_NAME "spi3_nss_pa4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_ORD 203

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_EXISTS 1
#define DT_N_NODELABEL_spi3_nss_pa4 DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_pinmux 1030
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_nss_pa4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi3_sck_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_PATH "/soc/pin-controller@40020000/spi3_sck_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_FULL_NAME "spi3_sck_pb3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_ORD 204

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_EXISTS 1
#define DT_N_NODELABEL_spi3_sck_pb3 DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_pinmux 4870
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pb3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi3_sck_pc10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_PATH "/soc/pin-controller@40020000/spi3_sck_pc10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_FULL_NAME "spi3_sck_pc10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_ORD 205

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_EXISTS 1
#define DT_N_NODELABEL_spi3_sck_pc10 DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_pinmux 10758
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi3_sck_pc10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim10_ch1_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_PATH "/soc/pin-controller@40020000/tim10_ch1_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_FULL_NAME "tim10_ch1_pb8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_ORD 206

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_EXISTS 1
#define DT_N_NODELABEL_tim10_ch1_pb8 DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_pinmux 6147
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pb8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim10_ch1_pf6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_PATH "/soc/pin-controller@40020000/tim10_ch1_pf6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_FULL_NAME "tim10_ch1_pf6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_ORD 207

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_EXISTS 1
#define DT_N_NODELABEL_tim10_ch1_pf6 DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_P_pinmux 22019
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim10_ch1_pf6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim11_ch1_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_PATH "/soc/pin-controller@40020000/tim11_ch1_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_FULL_NAME "tim11_ch1_pb9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_ORD 208

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_EXISTS 1
#define DT_N_NODELABEL_tim11_ch1_pb9 DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_pinmux 6403
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pb9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim11_ch1_pf7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_PATH "/soc/pin-controller@40020000/tim11_ch1_pf7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_FULL_NAME "tim11_ch1_pf7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_ORD 209

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_EXISTS 1
#define DT_N_NODELABEL_tim11_ch1_pf7 DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_P_pinmux 22275
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim11_ch1_pf7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim12_ch1_pb14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_PATH "/soc/pin-controller@40020000/tim12_ch1_pb14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_FULL_NAME "tim12_ch1_pb14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_ORD 210

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_EXISTS 1
#define DT_N_NODELABEL_tim12_ch1_pb14 DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_P_pinmux 7689
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch1_pb14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim12_ch2_pb15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_PATH "/soc/pin-controller@40020000/tim12_ch2_pb15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_FULL_NAME "tim12_ch2_pb15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_ORD 211

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_EXISTS 1
#define DT_N_NODELABEL_tim12_ch2_pb15 DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_P_pinmux 7945
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim12_ch2_pb15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim13_ch1_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_PATH "/soc/pin-controller@40020000/tim13_ch1_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_FULL_NAME "tim13_ch1_pa6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_ORD 212

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_EXISTS 1
#define DT_N_NODELABEL_tim13_ch1_pa6 DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_P_pinmux 1545
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pa6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim13_ch1_pf8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_PATH "/soc/pin-controller@40020000/tim13_ch1_pf8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_FULL_NAME "tim13_ch1_pf8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_ORD 213

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_EXISTS 1
#define DT_N_NODELABEL_tim13_ch1_pf8 DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_P_pinmux 22537
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim13_ch1_pf8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim14_ch1_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_PATH "/soc/pin-controller@40020000/tim14_ch1_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_FULL_NAME "tim14_ch1_pa7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_ORD 214

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_EXISTS 1
#define DT_N_NODELABEL_tim14_ch1_pa7 DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_P_pinmux 1801
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pa7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim14_ch1_pf9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_PATH "/soc/pin-controller@40020000/tim14_ch1_pf9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_FULL_NAME "tim14_ch1_pf9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_ORD 215

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_EXISTS 1
#define DT_N_NODELABEL_tim14_ch1_pf9 DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_P_pinmux 22793
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim14_ch1_pf9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch1_pa8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_PATH "/soc/pin-controller@40020000/tim1_ch1_pa8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_FULL_NAME "tim1_ch1_pa8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_ORD 216

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_EXISTS 1
#define DT_N_NODELABEL_tim1_ch1_pa8 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_pinmux 2049
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pa8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch1_pe9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_PATH "/soc/pin-controller@40020000/tim1_ch1_pe9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_FULL_NAME "tim1_ch1_pe9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_ORD 217

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_EXISTS 1
#define DT_N_NODELABEL_tim1_ch1_pe9 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_pinmux 18689
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1_pe9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch1n_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_PATH "/soc/pin-controller@40020000/tim1_ch1n_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_FULL_NAME "tim1_ch1n_pa7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_ORD 218

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_EXISTS 1
#define DT_N_NODELABEL_tim1_ch1n_pa7 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_pinmux 1793
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pa7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch1n_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_PATH "/soc/pin-controller@40020000/tim1_ch1n_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_FULL_NAME "tim1_ch1n_pb13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_ORD 219

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_EXISTS 1
#define DT_N_NODELABEL_tim1_ch1n_pb13 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_pinmux 7425
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pb13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch1n_pe8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_PATH "/soc/pin-controller@40020000/tim1_ch1n_pe8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_FULL_NAME "tim1_ch1n_pe8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_ORD 220

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_EXISTS 1
#define DT_N_NODELABEL_tim1_ch1n_pe8 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_pinmux 18433
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch1n_pe8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch2_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_PATH "/soc/pin-controller@40020000/tim1_ch2_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_FULL_NAME "tim1_ch2_pa9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_ORD 221

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_EXISTS 1
#define DT_N_NODELABEL_tim1_ch2_pa9 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_pinmux 2305
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pa9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch2_pe11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_PATH "/soc/pin-controller@40020000/tim1_ch2_pe11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_FULL_NAME "tim1_ch2_pe11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_ORD 222

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_EXISTS 1
#define DT_N_NODELABEL_tim1_ch2_pe11 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_pinmux 19201
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2_pe11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch2n_pb0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_PATH "/soc/pin-controller@40020000/tim1_ch2n_pb0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_FULL_NAME "tim1_ch2n_pb0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_ORD 223

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_EXISTS 1
#define DT_N_NODELABEL_tim1_ch2n_pb0 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_pinmux 4097
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch2n_pb14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_PATH "/soc/pin-controller@40020000/tim1_ch2n_pb14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_FULL_NAME "tim1_ch2n_pb14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_ORD 224

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_EXISTS 1
#define DT_N_NODELABEL_tim1_ch2n_pb14 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_pinmux 7681
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pb14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch2n_pe10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_PATH "/soc/pin-controller@40020000/tim1_ch2n_pe10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_FULL_NAME "tim1_ch2n_pe10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_ORD 225

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_EXISTS 1
#define DT_N_NODELABEL_tim1_ch2n_pe10 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_pinmux 18945
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch2n_pe10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch3_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_PATH "/soc/pin-controller@40020000/tim1_ch3_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_FULL_NAME "tim1_ch3_pa10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_ORD 226

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_EXISTS 1
#define DT_N_NODELABEL_tim1_ch3_pa10 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_pinmux 2561
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pa10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch3_pe13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_PATH "/soc/pin-controller@40020000/tim1_ch3_pe13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_FULL_NAME "tim1_ch3_pe13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_ORD 227

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_EXISTS 1
#define DT_N_NODELABEL_tim1_ch3_pe13 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_pinmux 19713
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3_pe13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch3n_pb1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_PATH "/soc/pin-controller@40020000/tim1_ch3n_pb1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_FULL_NAME "tim1_ch3n_pb1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_ORD 228

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_EXISTS 1
#define DT_N_NODELABEL_tim1_ch3n_pb1 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_pinmux 4353
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch3n_pb15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_PATH "/soc/pin-controller@40020000/tim1_ch3n_pb15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_FULL_NAME "tim1_ch3n_pb15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_ORD 229

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_EXISTS 1
#define DT_N_NODELABEL_tim1_ch3n_pb15 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_pinmux 7937
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pb15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch3n_pe12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_PATH "/soc/pin-controller@40020000/tim1_ch3n_pe12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_FULL_NAME "tim1_ch3n_pe12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_ORD 230

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_EXISTS 1
#define DT_N_NODELABEL_tim1_ch3n_pe12 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_pinmux 19457
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch3n_pe12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch4_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_PATH "/soc/pin-controller@40020000/tim1_ch4_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_FULL_NAME "tim1_ch4_pa11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_ORD 231

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_EXISTS 1
#define DT_N_NODELABEL_tim1_ch4_pa11 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_pinmux 2817
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pa11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim1_ch4_pe14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_PATH "/soc/pin-controller@40020000/tim1_ch4_pe14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_FULL_NAME "tim1_ch4_pe14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_ORD 232

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_EXISTS 1
#define DT_N_NODELABEL_tim1_ch4_pe14 DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_pinmux 19969
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim1_ch4_pe14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim2_ch1_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_PATH "/soc/pin-controller@40020000/tim2_ch1_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_FULL_NAME "tim2_ch1_pa0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_ORD 233

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_EXISTS 1
#define DT_N_NODELABEL_tim2_ch1_pa0 DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_pinmux 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim2_ch1_pa15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_PATH "/soc/pin-controller@40020000/tim2_ch1_pa15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_FULL_NAME "tim2_ch1_pa15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_ORD 234

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_EXISTS 1
#define DT_N_NODELABEL_tim2_ch1_pa15 DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_pinmux 3841
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim2_ch1_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_PATH "/soc/pin-controller@40020000/tim2_ch1_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_FULL_NAME "tim2_ch1_pa5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_ORD 235

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_EXISTS 1
#define DT_N_NODELABEL_tim2_ch1_pa5 DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_pinmux 1281
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch1_pa5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim2_ch2_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_PATH "/soc/pin-controller@40020000/tim2_ch2_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_FULL_NAME "tim2_ch2_pa1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_ORD 236

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_EXISTS 1
#define DT_N_NODELABEL_tim2_ch2_pa1 DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_pinmux 257
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pa1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim2_ch2_pb3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_PATH "/soc/pin-controller@40020000/tim2_ch2_pb3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_FULL_NAME "tim2_ch2_pb3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_ORD 237

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_EXISTS 1
#define DT_N_NODELABEL_tim2_ch2_pb3 DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_pinmux 4865
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch2_pb3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim2_ch3_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_PATH "/soc/pin-controller@40020000/tim2_ch3_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_FULL_NAME "tim2_ch3_pa2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_ORD 238

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_EXISTS 1
#define DT_N_NODELABEL_tim2_ch3_pa2 DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_pinmux 513
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pa2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim2_ch3_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_PATH "/soc/pin-controller@40020000/tim2_ch3_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_FULL_NAME "tim2_ch3_pb10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_ORD 239

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_EXISTS 1
#define DT_N_NODELABEL_tim2_ch3_pb10 DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_pinmux 6657
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch3_pb10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim2_ch4_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_PATH "/soc/pin-controller@40020000/tim2_ch4_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_FULL_NAME "tim2_ch4_pa3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_ORD 240

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_EXISTS 1
#define DT_N_NODELABEL_tim2_ch4_pa3 DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_pinmux 769
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pa3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim2_ch4_pb11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_PATH "/soc/pin-controller@40020000/tim2_ch4_pb11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_FULL_NAME "tim2_ch4_pb11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_ORD 241

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_EXISTS 1
#define DT_N_NODELABEL_tim2_ch4_pb11 DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_P_pinmux 6913
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim2_ch4_pb11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch1_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_PATH "/soc/pin-controller@40020000/tim3_ch1_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_FULL_NAME "tim3_ch1_pa6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_ORD 242

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_EXISTS 1
#define DT_N_NODELABEL_tim3_ch1_pa6 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_pinmux 1538
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pa6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch1_pb4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_PATH "/soc/pin-controller@40020000/tim3_ch1_pb4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_FULL_NAME "tim3_ch1_pb4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_ORD 243

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_EXISTS 1
#define DT_N_NODELABEL_tim3_ch1_pb4 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_pinmux 5122
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pb4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch1_pc6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_PATH "/soc/pin-controller@40020000/tim3_ch1_pc6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_FULL_NAME "tim3_ch1_pc6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_ORD 244

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_EXISTS 1
#define DT_N_NODELABEL_tim3_ch1_pc6 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_pinmux 9730
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch1_pc6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch2_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_PATH "/soc/pin-controller@40020000/tim3_ch2_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_FULL_NAME "tim3_ch2_pa7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_ORD 245

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_EXISTS 1
#define DT_N_NODELABEL_tim3_ch2_pa7 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_pinmux 1794
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pa7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch2_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_PATH "/soc/pin-controller@40020000/tim3_ch2_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_FULL_NAME "tim3_ch2_pb5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_ORD 246

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_EXISTS 1
#define DT_N_NODELABEL_tim3_ch2_pb5 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_pinmux 5378
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pb5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch2_pc7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_PATH "/soc/pin-controller@40020000/tim3_ch2_pc7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_FULL_NAME "tim3_ch2_pc7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_ORD 247

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_EXISTS 1
#define DT_N_NODELABEL_tim3_ch2_pc7 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_pinmux 9986
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch2_pc7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch3_pb0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_PATH "/soc/pin-controller@40020000/tim3_ch3_pb0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_FULL_NAME "tim3_ch3_pb0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_ORD 248

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_EXISTS 1
#define DT_N_NODELABEL_tim3_ch3_pb0 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_pinmux 4098
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pb0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch3_pc8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_PATH "/soc/pin-controller@40020000/tim3_ch3_pc8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_FULL_NAME "tim3_ch3_pc8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_ORD 249

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_EXISTS 1
#define DT_N_NODELABEL_tim3_ch3_pc8 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_pinmux 10242
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch3_pc8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch4_pb1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_PATH "/soc/pin-controller@40020000/tim3_ch4_pb1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_FULL_NAME "tim3_ch4_pb1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_ORD 250

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_EXISTS 1
#define DT_N_NODELABEL_tim3_ch4_pb1 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_pinmux 4354
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pb1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim3_ch4_pc9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_PATH "/soc/pin-controller@40020000/tim3_ch4_pc9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_FULL_NAME "tim3_ch4_pc9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_ORD 251

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_EXISTS 1
#define DT_N_NODELABEL_tim3_ch4_pc9 DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_pinmux 10498
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim3_ch4_pc9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch1_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_PATH "/soc/pin-controller@40020000/tim4_ch1_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_FULL_NAME "tim4_ch1_pb6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_ORD 252

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_EXISTS 1
#define DT_N_NODELABEL_tim4_ch1_pb6 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_pinmux 5634
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pb6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch1_pd12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_PATH "/soc/pin-controller@40020000/tim4_ch1_pd12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_FULL_NAME "tim4_ch1_pd12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_ORD 253

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_EXISTS 1
#define DT_N_NODELABEL_tim4_ch1_pd12 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_pinmux 15362
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch1_pd12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch2_pb7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_PATH "/soc/pin-controller@40020000/tim4_ch2_pb7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_FULL_NAME "tim4_ch2_pb7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_ORD 254

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_EXISTS 1
#define DT_N_NODELABEL_tim4_ch2_pb7 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_pinmux 5890
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pb7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch2_pd13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_PATH "/soc/pin-controller@40020000/tim4_ch2_pd13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_FULL_NAME "tim4_ch2_pd13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_ORD 255

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_EXISTS 1
#define DT_N_NODELABEL_tim4_ch2_pd13 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_pinmux 15618
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch2_pd13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch3_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_PATH "/soc/pin-controller@40020000/tim4_ch3_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_FULL_NAME "tim4_ch3_pb8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_ORD 256

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_EXISTS 1
#define DT_N_NODELABEL_tim4_ch3_pb8 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_pinmux 6146
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pb8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch3_pd14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_PATH "/soc/pin-controller@40020000/tim4_ch3_pd14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_FULL_NAME "tim4_ch3_pd14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_ORD 257

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_EXISTS 1
#define DT_N_NODELABEL_tim4_ch3_pd14 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_pinmux 15874
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch3_pd14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch4_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_PATH "/soc/pin-controller@40020000/tim4_ch4_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_FULL_NAME "tim4_ch4_pb9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_ORD 258

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_EXISTS 1
#define DT_N_NODELABEL_tim4_ch4_pb9 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_pinmux 6402
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pb9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim4_ch4_pd15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_PATH "/soc/pin-controller@40020000/tim4_ch4_pd15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_FULL_NAME "tim4_ch4_pd15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_ORD 259

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_EXISTS 1
#define DT_N_NODELABEL_tim4_ch4_pd15 DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_pinmux 16130
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim4_ch4_pd15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim5_ch1_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_PATH "/soc/pin-controller@40020000/tim5_ch1_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_FULL_NAME "tim5_ch1_pa0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_ORD 260

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_EXISTS 1
#define DT_N_NODELABEL_tim5_ch1_pa0 DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_pinmux 2
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch1_pa0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim5_ch2_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_PATH "/soc/pin-controller@40020000/tim5_ch2_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_FULL_NAME "tim5_ch2_pa1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_ORD 261

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_EXISTS 1
#define DT_N_NODELABEL_tim5_ch2_pa1 DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_pinmux 258
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch2_pa1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim5_ch3_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_PATH "/soc/pin-controller@40020000/tim5_ch3_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_FULL_NAME "tim5_ch3_pa2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_ORD 262

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_EXISTS 1
#define DT_N_NODELABEL_tim5_ch3_pa2 DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_pinmux 514
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch3_pa2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim5_ch4_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_PATH "/soc/pin-controller@40020000/tim5_ch4_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_FULL_NAME "tim5_ch4_pa3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_ORD 263

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_EXISTS 1
#define DT_N_NODELABEL_tim5_ch4_pa3 DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_pinmux 770
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim5_ch4_pa3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim8_ch1_pc6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_PATH "/soc/pin-controller@40020000/tim8_ch1_pc6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_FULL_NAME "tim8_ch1_pc6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_ORD 264

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_EXISTS 1
#define DT_N_NODELABEL_tim8_ch1_pc6 DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_P_pinmux 9731
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1_pc6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim8_ch1n_pa5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_PATH "/soc/pin-controller@40020000/tim8_ch1n_pa5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_FULL_NAME "tim8_ch1n_pa5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_ORD 265

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_EXISTS 1
#define DT_N_NODELABEL_tim8_ch1n_pa5 DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_P_pinmux 1283
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim8_ch1n_pa7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_PATH "/soc/pin-controller@40020000/tim8_ch1n_pa7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_FULL_NAME "tim8_ch1n_pa7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_ORD 266

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_EXISTS 1
#define DT_N_NODELABEL_tim8_ch1n_pa7 DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_P_pinmux 1795
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch1n_pa7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim8_ch2_pc7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_PATH "/soc/pin-controller@40020000/tim8_ch2_pc7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_FULL_NAME "tim8_ch2_pc7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_ORD 267

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_EXISTS 1
#define DT_N_NODELABEL_tim8_ch2_pc7 DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_P_pinmux 9987
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2_pc7_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim8_ch2n_pb0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_PATH "/soc/pin-controller@40020000/tim8_ch2n_pb0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_FULL_NAME "tim8_ch2n_pb0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_ORD 268

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_EXISTS 1
#define DT_N_NODELABEL_tim8_ch2n_pb0 DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_P_pinmux 4099
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim8_ch2n_pb14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_PATH "/soc/pin-controller@40020000/tim8_ch2n_pb14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_FULL_NAME "tim8_ch2n_pb14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_ORD 269

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_EXISTS 1
#define DT_N_NODELABEL_tim8_ch2n_pb14 DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_P_pinmux 7683
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch2n_pb14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim8_ch3_pc8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_PATH "/soc/pin-controller@40020000/tim8_ch3_pc8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_FULL_NAME "tim8_ch3_pc8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_ORD 270

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_EXISTS 1
#define DT_N_NODELABEL_tim8_ch3_pc8 DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_P_pinmux 10243
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3_pc8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim8_ch3n_pb1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_PATH "/soc/pin-controller@40020000/tim8_ch3n_pb1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_FULL_NAME "tim8_ch3n_pb1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_ORD 271

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_EXISTS 1
#define DT_N_NODELABEL_tim8_ch3n_pb1 DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_P_pinmux 4355
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim8_ch3n_pb15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_PATH "/soc/pin-controller@40020000/tim8_ch3n_pb15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_FULL_NAME "tim8_ch3n_pb15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_ORD 272

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_EXISTS 1
#define DT_N_NODELABEL_tim8_ch3n_pb15 DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_P_pinmux 7939
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch3n_pb15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim8_ch4_pc9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_PATH "/soc/pin-controller@40020000/tim8_ch4_pc9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_FULL_NAME "tim8_ch4_pc9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_ORD 273

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_EXISTS 1
#define DT_N_NODELABEL_tim8_ch4_pc9 DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_P_pinmux 10499
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim8_ch4_pc9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim9_ch1_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_PATH "/soc/pin-controller@40020000/tim9_ch1_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_FULL_NAME "tim9_ch1_pa2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_ORD 274

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_EXISTS 1
#define DT_N_NODELABEL_tim9_ch1_pa2 DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_pinmux 515
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pa2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim9_ch1_pe5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_PATH "/soc/pin-controller@40020000/tim9_ch1_pe5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_FULL_NAME "tim9_ch1_pe5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_ORD 275

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_EXISTS 1
#define DT_N_NODELABEL_tim9_ch1_pe5 DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_pinmux 17667
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch1_pe5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim9_ch2_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_PATH "/soc/pin-controller@40020000/tim9_ch2_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_FULL_NAME "tim9_ch2_pa3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_ORD 276

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_EXISTS 1
#define DT_N_NODELABEL_tim9_ch2_pa3 DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_pinmux 771
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pa3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/tim9_ch2_pe6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_PATH "/soc/pin-controller@40020000/tim9_ch2_pe6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_FULL_NAME "tim9_ch2_pe6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_ORD 277

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_EXISTS 1
#define DT_N_NODELABEL_tim9_ch2_pe6 DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_pinmux 17923
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_tim9_ch2_pe6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/uart4_rx_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_PATH "/soc/pin-controller@40020000/uart4_rx_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_FULL_NAME "uart4_rx_pa1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_ORD 278

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_EXISTS 1
#define DT_N_NODELABEL_uart4_rx_pa1 DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_P_pinmux 264
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pa1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/uart4_rx_pc11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_PATH "/soc/pin-controller@40020000/uart4_rx_pc11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_FULL_NAME "uart4_rx_pc11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_ORD 279

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_EXISTS 1
#define DT_N_NODELABEL_uart4_rx_pc11 DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_P_pinmux 11016
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_rx_pc11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/uart4_tx_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_PATH "/soc/pin-controller@40020000/uart4_tx_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_FULL_NAME "uart4_tx_pa0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_ORD 280

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_EXISTS 1
#define DT_N_NODELABEL_uart4_tx_pa0 DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_P_pinmux 8
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pa0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/uart4_tx_pc10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_PATH "/soc/pin-controller@40020000/uart4_tx_pc10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_FULL_NAME "uart4_tx_pc10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_ORD 281

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_EXISTS 1
#define DT_N_NODELABEL_uart4_tx_pc10 DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_P_pinmux 10760
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart4_tx_pc10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/uart5_rx_pd2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_PATH "/soc/pin-controller@40020000/uart5_rx_pd2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_FULL_NAME "uart5_rx_pd2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_ORD 282

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_EXISTS 1
#define DT_N_NODELABEL_uart5_rx_pd2 DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_P_pinmux 12808
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_rx_pd2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/uart5_tx_pc12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_PATH "/soc/pin-controller@40020000/uart5_tx_pc12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_FULL_NAME "uart5_tx_pc12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_ORD 283

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_EXISTS 1
#define DT_N_NODELABEL_uart5_tx_pc12 DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_P_pinmux 11272
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_uart5_tx_pc12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart1_cts_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_PATH "/soc/pin-controller@40020000/usart1_cts_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_FULL_NAME "usart1_cts_pa11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_ORD 284

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_EXISTS 1
#define DT_N_NODELABEL_usart1_cts_pa11 DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_pinmux 2823
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_cts_pa11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart1_rts_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_PATH "/soc/pin-controller@40020000/usart1_rts_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_FULL_NAME "usart1_rts_pa12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_ORD 285

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_EXISTS 1
#define DT_N_NODELABEL_usart1_rts_pa12 DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_pinmux 3079
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rts_pa12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart1_rx_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_PATH "/soc/pin-controller@40020000/usart1_rx_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_FULL_NAME "usart1_rx_pa10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_ORD 286

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_EXISTS 1
#define DT_N_NODELABEL_usart1_rx_pa10 DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_pinmux 2567
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart1_tx_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_PATH "/soc/pin-controller@40020000/usart1_tx_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_FULL_NAME "usart1_tx_pa9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_ORD 287

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_EXISTS 1
#define DT_N_NODELABEL_usart1_tx_pa9 DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_pinmux 2311
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_cts_pa0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_PATH "/soc/pin-controller@40020000/usart2_cts_pa0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_FULL_NAME "usart2_cts_pa0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_ORD 288

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_EXISTS 1
#define DT_N_NODELABEL_usart2_cts_pa0 DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_pinmux 7
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pa0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_cts_pd3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_PATH "/soc/pin-controller@40020000/usart2_cts_pd3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_FULL_NAME "usart2_cts_pd3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_ORD 289

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_EXISTS 1
#define DT_N_NODELABEL_usart2_cts_pd3 DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_pinmux 13063
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_cts_pd3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_rts_pa1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_PATH "/soc/pin-controller@40020000/usart2_rts_pa1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_FULL_NAME "usart2_rts_pa1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_ORD 290

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_EXISTS 1
#define DT_N_NODELABEL_usart2_rts_pa1 DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_pinmux 263
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pa1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_rts_pd4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_PATH "/soc/pin-controller@40020000/usart2_rts_pd4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_FULL_NAME "usart2_rts_pd4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_ORD 291

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_EXISTS 1
#define DT_N_NODELABEL_usart2_rts_pd4 DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_pinmux 13319
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rts_pd4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_rx_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_PATH "/soc/pin-controller@40020000/usart2_rx_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_FULL_NAME "usart2_rx_pa3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_ORD 292

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_EXISTS 1
#define DT_N_NODELABEL_usart2_rx_pa3 DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_pinmux 775
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pa3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_rx_pd6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_PATH "/soc/pin-controller@40020000/usart2_rx_pd6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_FULL_NAME "usart2_rx_pd6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_ORD 293

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_EXISTS 1
#define DT_N_NODELABEL_usart2_rx_pd6 DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_pinmux 13831
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_rx_pd6_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_tx_pa2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_PATH "/soc/pin-controller@40020000/usart2_tx_pa2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_FULL_NAME "usart2_tx_pa2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_ORD 294

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_EXISTS 1
#define DT_N_NODELABEL_usart2_tx_pa2 DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_pinmux 519
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pa2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart2_tx_pd5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_PATH "/soc/pin-controller@40020000/usart2_tx_pd5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_FULL_NAME "usart2_tx_pd5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_ORD 295

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_EXISTS 1
#define DT_N_NODELABEL_usart2_tx_pd5 DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_pinmux 13575
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart2_tx_pd5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart3_cts_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_PATH "/soc/pin-controller@40020000/usart3_cts_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_FULL_NAME "usart3_cts_pb13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_ORD 296

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_EXISTS 1
#define DT_N_NODELABEL_usart3_cts_pb13 DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_P_pinmux 7431
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pb13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart3_cts_pd11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_PATH "/soc/pin-controller@40020000/usart3_cts_pd11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_FULL_NAME "usart3_cts_pd11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_ORD 297

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_EXISTS 1
#define DT_N_NODELABEL_usart3_cts_pd11 DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_P_pinmux 15111
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_cts_pd11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart3_rts_pb14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_PATH "/soc/pin-controller@40020000/usart3_rts_pb14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_FULL_NAME "usart3_rts_pb14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_ORD 298

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_EXISTS 1
#define DT_N_NODELABEL_usart3_rts_pb14 DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_P_pinmux 7687
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pb14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart3_rts_pd12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_PATH "/soc/pin-controller@40020000/usart3_rts_pd12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_FULL_NAME "usart3_rts_pd12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_ORD 299

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_EXISTS 1
#define DT_N_NODELABEL_usart3_rts_pd12 DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_P_pinmux 15367
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rts_pd12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart3_rx_pc11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_PATH "/soc/pin-controller@40020000/usart3_rx_pc11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_FULL_NAME "usart3_rx_pc11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_ORD 300

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_EXISTS 1
#define DT_N_NODELABEL_usart3_rx_pc11 DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_P_pinmux 11015
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pc11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart3_rx_pd9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_PATH "/soc/pin-controller@40020000/usart3_rx_pd9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_FULL_NAME "usart3_rx_pd9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_ORD 301

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_EXISTS 1
#define DT_N_NODELABEL_usart3_rx_pd9 DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_P_pinmux 14599
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_rx_pd9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart3_tx_pc10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_PATH "/soc/pin-controller@40020000/usart3_tx_pc10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_FULL_NAME "usart3_tx_pc10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_ORD 302

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_EXISTS 1
#define DT_N_NODELABEL_usart3_tx_pc10 DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_P_pinmux 10759
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pc10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart3_tx_pd8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_PATH "/soc/pin-controller@40020000/usart3_tx_pd8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_FULL_NAME "usart3_tx_pd8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_ORD 303

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_EXISTS 1
#define DT_N_NODELABEL_usart3_tx_pd8 DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_P_pinmux 14343
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart3_tx_pd8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart6_cts_pg13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_PATH "/soc/pin-controller@40020000/usart6_cts_pg13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_FULL_NAME "usart6_cts_pg13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_ORD 304

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_EXISTS 1
#define DT_N_NODELABEL_usart6_cts_pg13 DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_P_pinmux 27912
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart6_cts_pg15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_PATH "/soc/pin-controller@40020000/usart6_cts_pg15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_FULL_NAME "usart6_cts_pg15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_ORD 305

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_EXISTS 1
#define DT_N_NODELABEL_usart6_cts_pg15 DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_P_pinmux 28424
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_cts_pg15_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart6_rts_pg12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_PATH "/soc/pin-controller@40020000/usart6_rts_pg12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_FULL_NAME "usart6_rts_pg12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_ORD 306

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_EXISTS 1
#define DT_N_NODELABEL_usart6_rts_pg12 DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_P_pinmux 27656
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart6_rts_pg8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_PATH "/soc/pin-controller@40020000/usart6_rts_pg8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_FULL_NAME "usart6_rts_pg8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_ORD 307

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_EXISTS 1
#define DT_N_NODELABEL_usart6_rts_pg8 DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_P_pinmux 26632
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rts_pg8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart6_rx_pg9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_PATH "/soc/pin-controller@40020000/usart6_rx_pg9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_FULL_NAME "usart6_rx_pg9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_ORD 308

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_EXISTS 1
#define DT_N_NODELABEL_usart6_rx_pg9 DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_P_pinmux 26888
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_rx_pg9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart6_tx_pg14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_PATH "/soc/pin-controller@40020000/usart6_tx_pg14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_FULL_NAME "usart6_tx_pg14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_ORD 309

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_EXISTS 1
#define DT_N_NODELABEL_usart6_tx_pg14 DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_P_pinmux 28168
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart6_tx_pg14_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_fs_id_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_PATH "/soc/pin-controller@40020000/usb_otg_fs_id_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_FULL_NAME "usb_otg_fs_id_pa10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_ORD 310

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_EXISTS 1
#define DT_N_NODELABEL_usb_otg_fs_id_pa10 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_pinmux 2570
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_id_pa10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_fs_sof_pa8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_PATH "/soc/pin-controller@40020000/usb_otg_fs_sof_pa8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_FULL_NAME "usb_otg_fs_sof_pa8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_ORD 311

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_EXISTS 1
#define DT_N_NODELABEL_usb_otg_fs_sof_pa8 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_pinmux 2058
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_sof_pa8_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_fs_vbus_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_PATH "/soc/pin-controller@40020000/usb_otg_fs_vbus_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_FULL_NAME "usb_otg_fs_vbus_pa9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_ORD 312

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_EXISTS 1
#define DT_N_NODELABEL_usb_otg_fs_vbus_pa9 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_pinmux 2320
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_fs_vbus_pa9_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_hs_id_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_PATH "/soc/pin-controller@40020000/usb_otg_hs_id_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_FULL_NAME "usb_otg_hs_id_pb12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_ORD 313

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_EXISTS 1
#define DT_N_NODELABEL_usb_otg_hs_id_pb12 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_P_pinmux 7180
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_id_pb12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_hs_sof_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_PATH "/soc/pin-controller@40020000/usb_otg_hs_sof_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_FULL_NAME "usb_otg_hs_sof_pa4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_ORD 314

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_EXISTS 1
#define DT_N_NODELABEL_usb_otg_hs_sof_pa4 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_P_pinmux 1036
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_sof_pa4_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_hs_ulpi_d0_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_PATH "/soc/pin-controller@40020000/usb_otg_hs_ulpi_d0_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_FULL_NAME "usb_otg_hs_ulpi_d0_pa3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_ORD 315

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_EXISTS 1
#define DT_N_NODELABEL_usb_otg_hs_ulpi_d0_pa3 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_P_pinmux 778
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d0_pa3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_hs_ulpi_d1_pb0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_PATH "/soc/pin-controller@40020000/usb_otg_hs_ulpi_d1_pb0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_FULL_NAME "usb_otg_hs_ulpi_d1_pb0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_ORD 316

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_EXISTS 1
#define DT_N_NODELABEL_usb_otg_hs_ulpi_d1_pb0 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_P_pinmux 4106
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d1_pb0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_hs_ulpi_d2_pb1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_PATH "/soc/pin-controller@40020000/usb_otg_hs_ulpi_d2_pb1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_FULL_NAME "usb_otg_hs_ulpi_d2_pb1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_ORD 317

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_EXISTS 1
#define DT_N_NODELABEL_usb_otg_hs_ulpi_d2_pb1 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_P_pinmux 4362
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d2_pb1_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_hs_ulpi_d3_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_PATH "/soc/pin-controller@40020000/usb_otg_hs_ulpi_d3_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_FULL_NAME "usb_otg_hs_ulpi_d3_pb10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_ORD 318

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_EXISTS 1
#define DT_N_NODELABEL_usb_otg_hs_ulpi_d3_pb10 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_P_pinmux 6666
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d3_pb10_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_hs_ulpi_d4_pb11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_PATH "/soc/pin-controller@40020000/usb_otg_hs_ulpi_d4_pb11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_FULL_NAME "usb_otg_hs_ulpi_d4_pb11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_ORD 319

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_EXISTS 1
#define DT_N_NODELABEL_usb_otg_hs_ulpi_d4_pb11 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_P_pinmux 6922
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d4_pb11_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_hs_ulpi_d5_pb12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_PATH "/soc/pin-controller@40020000/usb_otg_hs_ulpi_d5_pb12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_FULL_NAME "usb_otg_hs_ulpi_d5_pb12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_ORD 320

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_EXISTS 1
#define DT_N_NODELABEL_usb_otg_hs_ulpi_d5_pb12 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_P_pinmux 7178
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d5_pb12_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_hs_ulpi_d6_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_PATH "/soc/pin-controller@40020000/usb_otg_hs_ulpi_d6_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_FULL_NAME "usb_otg_hs_ulpi_d6_pb13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_ORD 321

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_EXISTS 1
#define DT_N_NODELABEL_usb_otg_hs_ulpi_d6_pb13 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_P_pinmux 7434
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d6_pb13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_hs_ulpi_d7_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_PATH "/soc/pin-controller@40020000/usb_otg_hs_ulpi_d7_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_FULL_NAME "usb_otg_hs_ulpi_d7_pb5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_ORD 322

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_EXISTS 1
#define DT_N_NODELABEL_usb_otg_hs_ulpi_d7_pb5 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_P_pinmux 5386
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_d7_pb5_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_hs_ulpi_dir_pc2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_PATH "/soc/pin-controller@40020000/usb_otg_hs_ulpi_dir_pc2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_FULL_NAME "usb_otg_hs_ulpi_dir_pc2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_ORD 323

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_EXISTS 1
#define DT_N_NODELABEL_usb_otg_hs_ulpi_dir_pc2 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_P_pinmux 8714
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_dir_pc2_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_hs_ulpi_nxt_pc3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_PATH "/soc/pin-controller@40020000/usb_otg_hs_ulpi_nxt_pc3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_FULL_NAME "usb_otg_hs_ulpi_nxt_pc3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_ORD 324

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_EXISTS 1
#define DT_N_NODELABEL_usb_otg_hs_ulpi_nxt_pc3 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_P_pinmux 8970
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_nxt_pc3_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_hs_ulpi_stp_pc0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_PATH "/soc/pin-controller@40020000/usb_otg_hs_ulpi_stp_pc0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_FULL_NAME "usb_otg_hs_ulpi_stp_pc0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_ORD 325

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_EXISTS 1
#define DT_N_NODELABEL_usb_otg_hs_ulpi_stp_pc0 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_P_pinmux 8202
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_ulpi_stp_pc0_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usb_otg_hs_vbus_pb13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_PATH "/soc/pin-controller@40020000/usb_otg_hs_vbus_pb13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_FULL_NAME "usb_otg_hs_vbus_pb13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_PARENT DT_N_S_soc_S_pin_controller_40020000
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_ORD 326

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_EXISTS 1
#define DT_N_NODELABEL_usb_otg_hs_vbus_pb13 DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13

/* Special property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_STATUS_okay 1

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_P_pinmux 7440
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usb_otg_hs_vbus_pb13_P_drive_open_drain_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_PATH "/soc/timers@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_FULL_NAME "timers@40000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_ORD 327

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_SUPPORTS_ORDS \
	328, /* /soc/timers@40000000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_EXISTS 1
#define DT_N_INST_1_st_stm32_timers DT_N_S_soc_S_timers_40000000
#define DT_N_NODELABEL_timers2      DT_N_S_soc_S_timers_40000000

/* Special property macros: */
#define DT_N_S_soc_S_timers_40000000_REG_NUM 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_P_label "TIMERS_2"
#define DT_N_S_soc_S_timers_40000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, label, 0) \
	fn(DT_N_S_soc_S_timers_40000000, label, 1) \
	fn(DT_N_S_soc_S_timers_40000000, label, 2) \
	fn(DT_N_S_soc_S_timers_40000000, label, 3) \
	fn(DT_N_S_soc_S_timers_40000000, label, 4) \
	fn(DT_N_S_soc_S_timers_40000000, label, 5) \
	fn(DT_N_S_soc_S_timers_40000000, label, 6) \
	fn(DT_N_S_soc_S_timers_40000000, label, 7)
#define DT_N_S_soc_S_timers_40000000_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg {1073741824 /* 0x40000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, reg, 0) \
	fn(DT_N_S_soc_S_timers_40000000, reg, 1)
#define DT_N_S_soc_S_timers_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, clocks, 0)
#define DT_N_S_soc_S_timers_40000000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts {28 /* 0x1c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40000000, interrupts, 1)
#define DT_N_S_soc_S_timers_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, status, 0) \
	fn(DT_N_S_soc_S_timers_40000000, status, 1) \
	fn(DT_N_S_soc_S_timers_40000000, status, 2) \
	fn(DT_N_S_soc_S_timers_40000000, status, 3) \
	fn(DT_N_S_soc_S_timers_40000000, status, 4) \
	fn(DT_N_S_soc_S_timers_40000000, status, 5) \
	fn(DT_N_S_soc_S_timers_40000000, status, 6) \
	fn(DT_N_S_soc_S_timers_40000000, status, 7)
#define DT_N_S_soc_S_timers_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PATH "/soc/timers@40000000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000000) identifier: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PARENT DT_N_S_soc_S_timers_40000000
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_ORD 328

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REQUIRES_ORDS \
	327, /* /soc/timers@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_EXISTS 1
#define DT_N_INST_1_st_stm32_pwm DT_N_S_soc_S_timers_40000000_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label "PWM_2"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_PATH "/soc/timers@40000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_FULL_NAME "timers@40000400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_ORD 329

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_SUPPORTS_ORDS \
	330, /* /soc/timers@40000400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_EXISTS 1
#define DT_N_INST_2_st_stm32_timers DT_N_S_soc_S_timers_40000400
#define DT_N_NODELABEL_timers3      DT_N_S_soc_S_timers_40000400

/* Special property macros: */
#define DT_N_S_soc_S_timers_40000400_REG_NUM 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_ADDRESS 1073742848 /* 0x40000400 */
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000400_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_P_label "TIMERS_3"
#define DT_N_S_soc_S_timers_40000400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, label, 0) \
	fn(DT_N_S_soc_S_timers_40000400, label, 1) \
	fn(DT_N_S_soc_S_timers_40000400, label, 2) \
	fn(DT_N_S_soc_S_timers_40000400, label, 3) \
	fn(DT_N_S_soc_S_timers_40000400, label, 4) \
	fn(DT_N_S_soc_S_timers_40000400, label, 5) \
	fn(DT_N_S_soc_S_timers_40000400, label, 6) \
	fn(DT_N_S_soc_S_timers_40000400, label, 7)
#define DT_N_S_soc_S_timers_40000400_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg {1073742848 /* 0x40000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_0 1073742848
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, reg, 0) \
	fn(DT_N_S_soc_S_timers_40000400, reg, 1)
#define DT_N_S_soc_S_timers_40000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, clocks, 0)
#define DT_N_S_soc_S_timers_40000400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts {29 /* 0x1d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40000400, interrupts, 1)
#define DT_N_S_soc_S_timers_40000400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, status, 0) \
	fn(DT_N_S_soc_S_timers_40000400, status, 1) \
	fn(DT_N_S_soc_S_timers_40000400, status, 2) \
	fn(DT_N_S_soc_S_timers_40000400, status, 3) \
	fn(DT_N_S_soc_S_timers_40000400, status, 4) \
	fn(DT_N_S_soc_S_timers_40000400, status, 5) \
	fn(DT_N_S_soc_S_timers_40000400, status, 6) \
	fn(DT_N_S_soc_S_timers_40000400, status, 7)
#define DT_N_S_soc_S_timers_40000400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PATH "/soc/timers@40000400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000400) identifier: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PARENT DT_N_S_soc_S_timers_40000400
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_ORD 330

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_REQUIRES_ORDS \
	329, /* /soc/timers@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_EXISTS 1
#define DT_N_INST_2_st_stm32_pwm DT_N_S_soc_S_timers_40000400_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_label "PWM_3"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_PATH "/soc/timers@40000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_FULL_NAME "timers@40000800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_ORD 331

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_SUPPORTS_ORDS \
	332, /* /soc/timers@40000800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_EXISTS 1
#define DT_N_INST_3_st_stm32_timers DT_N_S_soc_S_timers_40000800
#define DT_N_NODELABEL_timers4      DT_N_S_soc_S_timers_40000800

/* Special property macros: */
#define DT_N_S_soc_S_timers_40000800_REG_NUM 1
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_VAL_ADDRESS 1073743872 /* 0x40000800 */
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq 30
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000800_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_P_label "TIMERS_4"
#define DT_N_S_soc_S_timers_40000800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, label, 0) \
	fn(DT_N_S_soc_S_timers_40000800, label, 1) \
	fn(DT_N_S_soc_S_timers_40000800, label, 2) \
	fn(DT_N_S_soc_S_timers_40000800, label, 3) \
	fn(DT_N_S_soc_S_timers_40000800, label, 4) \
	fn(DT_N_S_soc_S_timers_40000800, label, 5) \
	fn(DT_N_S_soc_S_timers_40000800, label, 6) \
	fn(DT_N_S_soc_S_timers_40000800, label, 7)
#define DT_N_S_soc_S_timers_40000800_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg {1073743872 /* 0x40000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_0 1073743872
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, reg, 0) \
	fn(DT_N_S_soc_S_timers_40000800, reg, 1)
#define DT_N_S_soc_S_timers_40000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, clocks, 0)
#define DT_N_S_soc_S_timers_40000800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts {30 /* 0x1e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_0 30
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40000800, interrupts, 1)
#define DT_N_S_soc_S_timers_40000800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_status "disabled"
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, status, 0) \
	fn(DT_N_S_soc_S_timers_40000800, status, 1) \
	fn(DT_N_S_soc_S_timers_40000800, status, 2) \
	fn(DT_N_S_soc_S_timers_40000800, status, 3) \
	fn(DT_N_S_soc_S_timers_40000800, status, 4) \
	fn(DT_N_S_soc_S_timers_40000800, status, 5) \
	fn(DT_N_S_soc_S_timers_40000800, status, 6) \
	fn(DT_N_S_soc_S_timers_40000800, status, 7)
#define DT_N_S_soc_S_timers_40000800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PATH "/soc/timers@40000800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000800) identifier: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PARENT DT_N_S_soc_S_timers_40000800
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_ORD 332

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_REQUIRES_ORDS \
	331, /* /soc/timers@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_EXISTS 1
#define DT_N_INST_3_st_stm32_pwm DT_N_S_soc_S_timers_40000800_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_label "PWM_4"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_PATH "/soc/timers@40000c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_FULL_NAME "timers@40000c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_ORD 333

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_SUPPORTS_ORDS \
	334, /* /soc/timers@40000c00/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_EXISTS 1
#define DT_N_INST_4_st_stm32_timers DT_N_S_soc_S_timers_40000c00
#define DT_N_NODELABEL_timers5      DT_N_S_soc_S_timers_40000c00

/* Special property macros: */
#define DT_N_S_soc_S_timers_40000c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_VAL_ADDRESS 1073744896 /* 0x40000c00 */
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000c00_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq 50
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000c00_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_P_label "TIMERS_5"
#define DT_N_S_soc_S_timers_40000c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, label, 0) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 1) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 2) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 3) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 4) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 5) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 6) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 7)
#define DT_N_S_soc_S_timers_40000c00_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_reg {1073744896 /* 0x40000c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_0 1073744896
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, reg, 0) \
	fn(DT_N_S_soc_S_timers_40000c00, reg, 1)
#define DT_N_S_soc_S_timers_40000c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts {50 /* 0x32 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_0 50
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40000c00, interrupts, 1)
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, status, 0) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 1) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 2) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 3) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 4) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 5) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 6) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 7)
#define DT_N_S_soc_S_timers_40000c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PATH "/soc/timers@40000c00/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000c00) identifier: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PARENT DT_N_S_soc_S_timers_40000c00
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_ORD 334

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_REQUIRES_ORDS \
	333, /* /soc/timers@40000c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_EXISTS 1
#define DT_N_INST_4_st_stm32_pwm DT_N_S_soc_S_timers_40000c00_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_label "PWM_5"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001000
 *
 * Node identifier: DT_N_S_soc_S_timers_40001000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001000_PATH "/soc/timers@40001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001000_FULL_NAME "timers@40001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001000_S_pwm)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001000_ORD 335

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001000_SUPPORTS_ORDS \
	336, /* /soc/timers@40001000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001000_EXISTS 1
#define DT_N_INST_8_st_stm32_timers DT_N_S_soc_S_timers_40001000
#define DT_N_NODELABEL_timers6      DT_N_S_soc_S_timers_40001000

/* Special property macros: */
#define DT_N_S_soc_S_timers_40001000_REG_NUM 1
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_VAL_ADDRESS 1073745920 /* 0x40001000 */
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq 54
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001000_P_label "TIMERS_6"
#define DT_N_S_soc_S_timers_40001000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, label, 0) \
	fn(DT_N_S_soc_S_timers_40001000, label, 1) \
	fn(DT_N_S_soc_S_timers_40001000, label, 2) \
	fn(DT_N_S_soc_S_timers_40001000, label, 3) \
	fn(DT_N_S_soc_S_timers_40001000, label, 4) \
	fn(DT_N_S_soc_S_timers_40001000, label, 5) \
	fn(DT_N_S_soc_S_timers_40001000, label, 6) \
	fn(DT_N_S_soc_S_timers_40001000, label, 7)
#define DT_N_S_soc_S_timers_40001000_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_reg {1073745920 /* 0x40001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_0 1073745920
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, reg, 0) \
	fn(DT_N_S_soc_S_timers_40001000, reg, 1)
#define DT_N_S_soc_S_timers_40001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, clocks, 0)
#define DT_N_S_soc_S_timers_40001000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts {54 /* 0x36 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_0 54
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40001000, interrupts, 1)
#define DT_N_S_soc_S_timers_40001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_status "disabled"
#define DT_N_S_soc_S_timers_40001000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, status, 0) \
	fn(DT_N_S_soc_S_timers_40001000, status, 1) \
	fn(DT_N_S_soc_S_timers_40001000, status, 2) \
	fn(DT_N_S_soc_S_timers_40001000, status, 3) \
	fn(DT_N_S_soc_S_timers_40001000, status, 4) \
	fn(DT_N_S_soc_S_timers_40001000, status, 5) \
	fn(DT_N_S_soc_S_timers_40001000, status, 6) \
	fn(DT_N_S_soc_S_timers_40001000, status, 7)
#define DT_N_S_soc_S_timers_40001000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40001000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_PATH "/soc/timers@40001000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40001000) identifier: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_PARENT DT_N_S_soc_S_timers_40001000
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_ORD 336

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_REQUIRES_ORDS \
	335, /* /soc/timers@40001000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_EXISTS 1
#define DT_N_INST_8_st_stm32_pwm DT_N_S_soc_S_timers_40001000_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_label "PWM_6"
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40001000_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40001000_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40001000_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40001000_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40001000_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001000_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001400
 *
 * Node identifier: DT_N_S_soc_S_timers_40001400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001400_PATH "/soc/timers@40001400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001400_FULL_NAME "timers@40001400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001400_S_pwm)
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001400_ORD 337

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001400_SUPPORTS_ORDS \
	338, /* /soc/timers@40001400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001400_EXISTS 1
#define DT_N_INST_9_st_stm32_timers DT_N_S_soc_S_timers_40001400
#define DT_N_NODELABEL_timers7      DT_N_S_soc_S_timers_40001400

/* Special property macros: */
#define DT_N_S_soc_S_timers_40001400_REG_NUM 1
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_VAL_ADDRESS 1073746944 /* 0x40001400 */
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq 55
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001400_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001400_P_label "TIMERS_7"
#define DT_N_S_soc_S_timers_40001400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, label, 0) \
	fn(DT_N_S_soc_S_timers_40001400, label, 1) \
	fn(DT_N_S_soc_S_timers_40001400, label, 2) \
	fn(DT_N_S_soc_S_timers_40001400, label, 3) \
	fn(DT_N_S_soc_S_timers_40001400, label, 4) \
	fn(DT_N_S_soc_S_timers_40001400, label, 5) \
	fn(DT_N_S_soc_S_timers_40001400, label, 6) \
	fn(DT_N_S_soc_S_timers_40001400, label, 7)
#define DT_N_S_soc_S_timers_40001400_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_reg {1073746944 /* 0x40001400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_0 1073746944
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, reg, 0) \
	fn(DT_N_S_soc_S_timers_40001400, reg, 1)
#define DT_N_S_soc_S_timers_40001400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, clocks, 0)
#define DT_N_S_soc_S_timers_40001400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupts {55 /* 0x37 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_0 55
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40001400, interrupts, 1)
#define DT_N_S_soc_S_timers_40001400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_status "disabled"
#define DT_N_S_soc_S_timers_40001400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, status, 0) \
	fn(DT_N_S_soc_S_timers_40001400, status, 1) \
	fn(DT_N_S_soc_S_timers_40001400, status, 2) \
	fn(DT_N_S_soc_S_timers_40001400, status, 3) \
	fn(DT_N_S_soc_S_timers_40001400, status, 4) \
	fn(DT_N_S_soc_S_timers_40001400, status, 5) \
	fn(DT_N_S_soc_S_timers_40001400, status, 6) \
	fn(DT_N_S_soc_S_timers_40001400, status, 7)
#define DT_N_S_soc_S_timers_40001400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40001400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_PATH "/soc/timers@40001400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40001400) identifier: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_PARENT DT_N_S_soc_S_timers_40001400
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_ORD 338

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_REQUIRES_ORDS \
	337, /* /soc/timers@40001400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_EXISTS 1
#define DT_N_INST_9_st_stm32_pwm DT_N_S_soc_S_timers_40001400_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_label "PWM_7"
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40001400_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40001400_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40001400_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40001400_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40001400_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40001400_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40001400_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40001400_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40001400_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40001400_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40001400_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001400_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001800
 *
 * Node identifier: DT_N_S_soc_S_timers_40001800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001800_PATH "/soc/timers@40001800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001800_FULL_NAME "timers@40001800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40001800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001800_S_pwm)
#define DT_N_S_soc_S_timers_40001800_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001800_ORD 339

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001800_SUPPORTS_ORDS \
	340, /* /soc/timers@40001800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001800_EXISTS 1
#define DT_N_INST_11_st_stm32_timers DT_N_S_soc_S_timers_40001800
#define DT_N_NODELABEL_timers12      DT_N_S_soc_S_timers_40001800

/* Special property macros: */
#define DT_N_S_soc_S_timers_40001800_REG_NUM 1
#define DT_N_S_soc_S_timers_40001800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_REG_IDX_0_VAL_ADDRESS 1073747968 /* 0x40001800 */
#define DT_N_S_soc_S_timers_40001800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_VAL_irq 43
#define DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001800_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001800_P_label "TIMERS_12"
#define DT_N_S_soc_S_timers_40001800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800, label, 0) \
	fn(DT_N_S_soc_S_timers_40001800, label, 1) \
	fn(DT_N_S_soc_S_timers_40001800, label, 2) \
	fn(DT_N_S_soc_S_timers_40001800, label, 3) \
	fn(DT_N_S_soc_S_timers_40001800, label, 4) \
	fn(DT_N_S_soc_S_timers_40001800, label, 5) \
	fn(DT_N_S_soc_S_timers_40001800, label, 6) \
	fn(DT_N_S_soc_S_timers_40001800, label, 7) \
	fn(DT_N_S_soc_S_timers_40001800, label, 8)
#define DT_N_S_soc_S_timers_40001800_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_reg {1073747968 /* 0x40001800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001800_P_reg_IDX_0 1073747968
#define DT_N_S_soc_S_timers_40001800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800, reg, 0) \
	fn(DT_N_S_soc_S_timers_40001800, reg, 1)
#define DT_N_S_soc_S_timers_40001800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40001800_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40001800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_clocks_IDX_0_VAL_bits 64
#define DT_N_S_soc_S_timers_40001800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800, clocks, 0)
#define DT_N_S_soc_S_timers_40001800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_interrupts {43 /* 0x2b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001800_P_interrupts_IDX_0 43
#define DT_N_S_soc_S_timers_40001800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40001800, interrupts, 1)
#define DT_N_S_soc_S_timers_40001800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_status "disabled"
#define DT_N_S_soc_S_timers_40001800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800, status, 0) \
	fn(DT_N_S_soc_S_timers_40001800, status, 1) \
	fn(DT_N_S_soc_S_timers_40001800, status, 2) \
	fn(DT_N_S_soc_S_timers_40001800, status, 3) \
	fn(DT_N_S_soc_S_timers_40001800, status, 4) \
	fn(DT_N_S_soc_S_timers_40001800, status, 5) \
	fn(DT_N_S_soc_S_timers_40001800, status, 6) \
	fn(DT_N_S_soc_S_timers_40001800, status, 7)
#define DT_N_S_soc_S_timers_40001800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800, compatible, 0)
#define DT_N_S_soc_S_timers_40001800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40001800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_PATH "/soc/timers@40001800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40001800) identifier: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_PARENT DT_N_S_soc_S_timers_40001800
#define DT_N_S_soc_S_timers_40001800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_ORD 340

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_REQUIRES_ORDS \
	339, /* /soc/timers@40001800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_EXISTS 1
#define DT_N_INST_11_st_stm32_pwm DT_N_S_soc_S_timers_40001800_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40001800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_label "PWM_12"
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, label, 4) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, label, 5)
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40001c00
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001c00_PATH "/soc/timers@40001c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001c00_FULL_NAME "timers@40001c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001c00_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40001c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001c00_S_pwm)
#define DT_N_S_soc_S_timers_40001c00_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001c00_ORD 341

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001c00_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001c00_SUPPORTS_ORDS \
	342, /* /soc/timers@40001c00/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001c00_EXISTS 1
#define DT_N_INST_12_st_stm32_timers DT_N_S_soc_S_timers_40001c00
#define DT_N_NODELABEL_timers13      DT_N_S_soc_S_timers_40001c00

/* Special property macros: */
#define DT_N_S_soc_S_timers_40001c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40001c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_REG_IDX_0_VAL_ADDRESS 1073748992 /* 0x40001c00 */
#define DT_N_S_soc_S_timers_40001c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001c00_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_VAL_irq 44
#define DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001c00_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001c00_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001c00_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001c00_P_label "TIMERS_13"
#define DT_N_S_soc_S_timers_40001c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00, label, 0) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 1) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 2) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 3) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 4) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 5) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 6) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 7) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 8)
#define DT_N_S_soc_S_timers_40001c00_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_reg {1073748992 /* 0x40001c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001c00_P_reg_IDX_0 1073748992
#define DT_N_S_soc_S_timers_40001c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00, reg, 0) \
	fn(DT_N_S_soc_S_timers_40001c00, reg, 1)
#define DT_N_S_soc_S_timers_40001c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40001c00_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40001c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_clocks_IDX_0_VAL_bits 128
#define DT_N_S_soc_S_timers_40001c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00, clocks, 0)
#define DT_N_S_soc_S_timers_40001c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_interrupts {44 /* 0x2c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001c00_P_interrupts_IDX_0 44
#define DT_N_S_soc_S_timers_40001c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40001c00, interrupts, 1)
#define DT_N_S_soc_S_timers_40001c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_status "disabled"
#define DT_N_S_soc_S_timers_40001c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00, status, 0) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 1) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 2) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 3) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 4) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 5) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 6) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 7)
#define DT_N_S_soc_S_timers_40001c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001c00_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00, compatible, 0)
#define DT_N_S_soc_S_timers_40001c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001c00/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40001c00_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_PATH "/soc/timers@40001c00/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40001c00) identifier: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_PARENT DT_N_S_soc_S_timers_40001c00
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_ORD 342

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_REQUIRES_ORDS \
	341, /* /soc/timers@40001c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_EXISTS 1
#define DT_N_INST_12_st_stm32_pwm DT_N_S_soc_S_timers_40001c00_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40001c00_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001c00_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_label "PWM_13"
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, label, 4) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, label, 5)
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40002000
 *
 * Node identifier: DT_N_S_soc_S_timers_40002000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40002000_PATH "/soc/timers@40002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40002000_FULL_NAME "timers@40002000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40002000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40002000_S_pwm)
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40002000_ORD 343

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40002000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40002000_SUPPORTS_ORDS \
	344, /* /soc/timers@40002000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40002000_EXISTS 1
#define DT_N_INST_13_st_stm32_timers DT_N_S_soc_S_timers_40002000
#define DT_N_NODELABEL_timers14      DT_N_S_soc_S_timers_40002000

/* Special property macros: */
#define DT_N_S_soc_S_timers_40002000_REG_NUM 1
#define DT_N_S_soc_S_timers_40002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_REG_IDX_0_VAL_ADDRESS 1073750016 /* 0x40002000 */
#define DT_N_S_soc_S_timers_40002000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40002000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_irq 45
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40002000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40002000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40002000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40002000_P_label "TIMERS_14"
#define DT_N_S_soc_S_timers_40002000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, label, 0) \
	fn(DT_N_S_soc_S_timers_40002000, label, 1) \
	fn(DT_N_S_soc_S_timers_40002000, label, 2) \
	fn(DT_N_S_soc_S_timers_40002000, label, 3) \
	fn(DT_N_S_soc_S_timers_40002000, label, 4) \
	fn(DT_N_S_soc_S_timers_40002000, label, 5) \
	fn(DT_N_S_soc_S_timers_40002000, label, 6) \
	fn(DT_N_S_soc_S_timers_40002000, label, 7) \
	fn(DT_N_S_soc_S_timers_40002000, label, 8)
#define DT_N_S_soc_S_timers_40002000_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_reg {1073750016 /* 0x40002000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40002000_P_reg_IDX_0 1073750016
#define DT_N_S_soc_S_timers_40002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, reg, 0) \
	fn(DT_N_S_soc_S_timers_40002000, reg, 1)
#define DT_N_S_soc_S_timers_40002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_VAL_bus 2
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_VAL_bits 256
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, clocks, 0)
#define DT_N_S_soc_S_timers_40002000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupts {45 /* 0x2d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40002000_P_interrupts_IDX_0 45
#define DT_N_S_soc_S_timers_40002000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40002000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40002000, interrupts, 1)
#define DT_N_S_soc_S_timers_40002000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_status "disabled"
#define DT_N_S_soc_S_timers_40002000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40002000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40002000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40002000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, status, 0) \
	fn(DT_N_S_soc_S_timers_40002000, status, 1) \
	fn(DT_N_S_soc_S_timers_40002000, status, 2) \
	fn(DT_N_S_soc_S_timers_40002000, status, 3) \
	fn(DT_N_S_soc_S_timers_40002000, status, 4) \
	fn(DT_N_S_soc_S_timers_40002000, status, 5) \
	fn(DT_N_S_soc_S_timers_40002000, status, 6) \
	fn(DT_N_S_soc_S_timers_40002000, status, 7)
#define DT_N_S_soc_S_timers_40002000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40002000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, compatible, 0)
#define DT_N_S_soc_S_timers_40002000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40002000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40002000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_PATH "/soc/timers@40002000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40002000) identifier: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_PARENT DT_N_S_soc_S_timers_40002000
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_ORD 344

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_REQUIRES_ORDS \
	343, /* /soc/timers@40002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_EXISTS 1
#define DT_N_INST_13_st_stm32_pwm DT_N_S_soc_S_timers_40002000_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_label "PWM_14"
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, label, 4) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, label, 5)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40010000
 *
 * Node identifier: DT_N_S_soc_S_timers_40010000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40010000_PATH "/soc/timers@40010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40010000_FULL_NAME "timers@40010000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40010000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40010000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40010000_S_pwm)
#define DT_N_S_soc_S_timers_40010000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40010000_ORD 345

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40010000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40010000_SUPPORTS_ORDS \
	346, /* /soc/timers@40010000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40010000_EXISTS 1
#define DT_N_INST_0_st_stm32_timers DT_N_S_soc_S_timers_40010000
#define DT_N_NODELABEL_timers1      DT_N_S_soc_S_timers_40010000

/* Special property macros: */
#define DT_N_S_soc_S_timers_40010000_REG_NUM 1
#define DT_N_S_soc_S_timers_40010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_REG_IDX_0_VAL_ADDRESS 1073807360 /* 0x40010000 */
#define DT_N_S_soc_S_timers_40010000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40010000_IRQ_NUM 4
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_irq 25
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_irq 26
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_irq 27
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40010000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40010000_P_label "TIMERS_1"
#define DT_N_S_soc_S_timers_40010000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, label, 0) \
	fn(DT_N_S_soc_S_timers_40010000, label, 1) \
	fn(DT_N_S_soc_S_timers_40010000, label, 2) \
	fn(DT_N_S_soc_S_timers_40010000, label, 3) \
	fn(DT_N_S_soc_S_timers_40010000, label, 4) \
	fn(DT_N_S_soc_S_timers_40010000, label, 5) \
	fn(DT_N_S_soc_S_timers_40010000, label, 6) \
	fn(DT_N_S_soc_S_timers_40010000, label, 7)
#define DT_N_S_soc_S_timers_40010000_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_reg {1073807360 /* 0x40010000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40010000_P_reg_IDX_0 1073807360
#define DT_N_S_soc_S_timers_40010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, reg, 0) \
	fn(DT_N_S_soc_S_timers_40010000, reg, 1)
#define DT_N_S_soc_S_timers_40010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, clocks, 0)
#define DT_N_S_soc_S_timers_40010000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */, 25 /* 0x19 */, 0 /* 0x0 */, 26 /* 0x1a */, 0 /* 0x0 */, 27 /* 0x1b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_2 25
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_4 26
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_6 27
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 1) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 2) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 3) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 4) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 5) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 6) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 7)
#define DT_N_S_soc_S_timers_40010000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_status "disabled"
#define DT_N_S_soc_S_timers_40010000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40010000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40010000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, status, 0) \
	fn(DT_N_S_soc_S_timers_40010000, status, 1) \
	fn(DT_N_S_soc_S_timers_40010000, status, 2) \
	fn(DT_N_S_soc_S_timers_40010000, status, 3) \
	fn(DT_N_S_soc_S_timers_40010000, status, 4) \
	fn(DT_N_S_soc_S_timers_40010000, status, 5) \
	fn(DT_N_S_soc_S_timers_40010000, status, 6) \
	fn(DT_N_S_soc_S_timers_40010000, status, 7)
#define DT_N_S_soc_S_timers_40010000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40010000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, compatible, 0)
#define DT_N_S_soc_S_timers_40010000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40010000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40010000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40010000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_PATH "/soc/timers@40010000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40010000) identifier: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_PARENT DT_N_S_soc_S_timers_40010000
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_ORD 346

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_REQUIRES_ORDS \
	345, /* /soc/timers@40010000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_EXISTS 1
#define DT_N_INST_0_st_stm32_pwm DT_N_S_soc_S_timers_40010000_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_label "PWM_1"
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40010400
 *
 * Node identifier: DT_N_S_soc_S_timers_40010400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40010400_PATH "/soc/timers@40010400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40010400_FULL_NAME "timers@40010400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40010400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40010400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40010400_S_pwm)
#define DT_N_S_soc_S_timers_40010400_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40010400_ORD 347

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40010400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40010400_SUPPORTS_ORDS \
	348, /* /soc/timers@40010400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40010400_EXISTS 1
#define DT_N_INST_10_st_stm32_timers DT_N_S_soc_S_timers_40010400
#define DT_N_NODELABEL_timers8       DT_N_S_soc_S_timers_40010400

/* Special property macros: */
#define DT_N_S_soc_S_timers_40010400_REG_NUM 1
#define DT_N_S_soc_S_timers_40010400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_REG_IDX_0_VAL_ADDRESS 1073808384 /* 0x40010400 */
#define DT_N_S_soc_S_timers_40010400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40010400_IRQ_NUM 4
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_0_VAL_irq 43
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_1_VAL_irq 44
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_2_VAL_irq 45
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_3_VAL_irq 46
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timers_40010400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timers_40010400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timers_40010400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timers_40010400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timers_40010400_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timers_40010400_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timers_40010400_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timers_40010400_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40010400_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40010400_P_label "TIMERS_8"
#define DT_N_S_soc_S_timers_40010400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400, label, 0) \
	fn(DT_N_S_soc_S_timers_40010400, label, 1) \
	fn(DT_N_S_soc_S_timers_40010400, label, 2) \
	fn(DT_N_S_soc_S_timers_40010400, label, 3) \
	fn(DT_N_S_soc_S_timers_40010400, label, 4) \
	fn(DT_N_S_soc_S_timers_40010400, label, 5) \
	fn(DT_N_S_soc_S_timers_40010400, label, 6) \
	fn(DT_N_S_soc_S_timers_40010400, label, 7)
#define DT_N_S_soc_S_timers_40010400_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_reg {1073808384 /* 0x40010400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40010400_P_reg_IDX_0 1073808384
#define DT_N_S_soc_S_timers_40010400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40010400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400, reg, 0) \
	fn(DT_N_S_soc_S_timers_40010400, reg, 1)
#define DT_N_S_soc_S_timers_40010400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40010400_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_timers_40010400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_timers_40010400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400, clocks, 0)
#define DT_N_S_soc_S_timers_40010400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40010400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupts {43 /* 0x2b */, 0 /* 0x0 */, 44 /* 0x2c */, 0 /* 0x0 */, 45 /* 0x2d */, 0 /* 0x0 */, 46 /* 0x2e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_0 43
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_2 44
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_4 45
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_6 46
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 1) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 2) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 3) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 4) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 5) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 6) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 7)
#define DT_N_S_soc_S_timers_40010400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_status "disabled"
#define DT_N_S_soc_S_timers_40010400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40010400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40010400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400, status, 0) \
	fn(DT_N_S_soc_S_timers_40010400, status, 1) \
	fn(DT_N_S_soc_S_timers_40010400, status, 2) \
	fn(DT_N_S_soc_S_timers_40010400, status, 3) \
	fn(DT_N_S_soc_S_timers_40010400, status, 4) \
	fn(DT_N_S_soc_S_timers_40010400, status, 5) \
	fn(DT_N_S_soc_S_timers_40010400, status, 6) \
	fn(DT_N_S_soc_S_timers_40010400, status, 7)
#define DT_N_S_soc_S_timers_40010400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40010400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40010400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400, compatible, 0)
#define DT_N_S_soc_S_timers_40010400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40010400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timers_40010400, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timers_40010400, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timers_40010400, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40010400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40010400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_PATH "/soc/timers@40010400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40010400) identifier: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_PARENT DT_N_S_soc_S_timers_40010400
#define DT_N_S_soc_S_timers_40010400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40010400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_ORD 348

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_REQUIRES_ORDS \
	347, /* /soc/timers@40010400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_EXISTS 1
#define DT_N_INST_10_st_stm32_pwm DT_N_S_soc_S_timers_40010400_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40010400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40010400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40010400_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_label "PWM_8"
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_PATH "/soc/timers@40014000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_FULL_NAME "timers@40014000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_ORD 349

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_SUPPORTS_ORDS \
	350, /* /soc/timers@40014000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_EXISTS 1
#define DT_N_INST_5_st_stm32_timers DT_N_S_soc_S_timers_40014000
#define DT_N_NODELABEL_timers9      DT_N_S_soc_S_timers_40014000

/* Special property macros: */
#define DT_N_S_soc_S_timers_40014000_REG_NUM 1
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_VAL_ADDRESS 1073823744 /* 0x40014000 */
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014000_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_P_label "TIMERS_9"
#define DT_N_S_soc_S_timers_40014000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, label, 0) \
	fn(DT_N_S_soc_S_timers_40014000, label, 1) \
	fn(DT_N_S_soc_S_timers_40014000, label, 2) \
	fn(DT_N_S_soc_S_timers_40014000, label, 3) \
	fn(DT_N_S_soc_S_timers_40014000, label, 4) \
	fn(DT_N_S_soc_S_timers_40014000, label, 5) \
	fn(DT_N_S_soc_S_timers_40014000, label, 6) \
	fn(DT_N_S_soc_S_timers_40014000, label, 7)
#define DT_N_S_soc_S_timers_40014000_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg {1073823744 /* 0x40014000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_0 1073823744
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, reg, 0) \
	fn(DT_N_S_soc_S_timers_40014000, reg, 1)
#define DT_N_S_soc_S_timers_40014000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bits 65536
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, clocks, 0)
#define DT_N_S_soc_S_timers_40014000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40014000, interrupts, 1)
#define DT_N_S_soc_S_timers_40014000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, status, 0) \
	fn(DT_N_S_soc_S_timers_40014000, status, 1) \
	fn(DT_N_S_soc_S_timers_40014000, status, 2) \
	fn(DT_N_S_soc_S_timers_40014000, status, 3) \
	fn(DT_N_S_soc_S_timers_40014000, status, 4) \
	fn(DT_N_S_soc_S_timers_40014000, status, 5) \
	fn(DT_N_S_soc_S_timers_40014000, status, 6) \
	fn(DT_N_S_soc_S_timers_40014000, status, 7)
#define DT_N_S_soc_S_timers_40014000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PATH "/soc/timers@40014000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014000) identifier: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PARENT DT_N_S_soc_S_timers_40014000
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_ORD 350

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_REQUIRES_ORDS \
	349, /* /soc/timers@40014000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_EXISTS 1
#define DT_N_INST_5_st_stm32_pwm DT_N_S_soc_S_timers_40014000_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_label "PWM_9"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_PATH "/soc/timers@40014400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_FULL_NAME "timers@40014400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014400_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_ORD 351

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_SUPPORTS_ORDS \
	352, /* /soc/timers@40014400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_EXISTS 1
#define DT_N_INST_6_st_stm32_timers DT_N_S_soc_S_timers_40014400
#define DT_N_NODELABEL_timers10     DT_N_S_soc_S_timers_40014400

/* Special property macros: */
#define DT_N_S_soc_S_timers_40014400_REG_NUM 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_ADDRESS 1073824768 /* 0x40014400 */
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014400_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_P_label "TIMERS_10"
#define DT_N_S_soc_S_timers_40014400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, label, 0) \
	fn(DT_N_S_soc_S_timers_40014400, label, 1) \
	fn(DT_N_S_soc_S_timers_40014400, label, 2) \
	fn(DT_N_S_soc_S_timers_40014400, label, 3) \
	fn(DT_N_S_soc_S_timers_40014400, label, 4) \
	fn(DT_N_S_soc_S_timers_40014400, label, 5) \
	fn(DT_N_S_soc_S_timers_40014400, label, 6) \
	fn(DT_N_S_soc_S_timers_40014400, label, 7) \
	fn(DT_N_S_soc_S_timers_40014400, label, 8)
#define DT_N_S_soc_S_timers_40014400_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg {1073824768 /* 0x40014400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0 1073824768
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, reg, 0) \
	fn(DT_N_S_soc_S_timers_40014400, reg, 1)
#define DT_N_S_soc_S_timers_40014400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, clocks, 0)
#define DT_N_S_soc_S_timers_40014400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts {25 /* 0x19 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40014400, interrupts, 1)
#define DT_N_S_soc_S_timers_40014400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, status, 0) \
	fn(DT_N_S_soc_S_timers_40014400, status, 1) \
	fn(DT_N_S_soc_S_timers_40014400, status, 2) \
	fn(DT_N_S_soc_S_timers_40014400, status, 3) \
	fn(DT_N_S_soc_S_timers_40014400, status, 4) \
	fn(DT_N_S_soc_S_timers_40014400, status, 5) \
	fn(DT_N_S_soc_S_timers_40014400, status, 6) \
	fn(DT_N_S_soc_S_timers_40014400, status, 7)
#define DT_N_S_soc_S_timers_40014400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PATH "/soc/timers@40014400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014400) identifier: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PARENT DT_N_S_soc_S_timers_40014400
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_ORD 352

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REQUIRES_ORDS \
	351, /* /soc/timers@40014400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_EXISTS 1
#define DT_N_INST_6_st_stm32_pwm DT_N_S_soc_S_timers_40014400_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label "PWM_10"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 4) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 5)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_PATH "/soc/timers@40014800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_FULL_NAME "timers@40014800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014800_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_ORD 353

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	22, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_SUPPORTS_ORDS \
	354, /* /soc/timers@40014800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_EXISTS 1
#define DT_N_INST_7_st_stm32_timers DT_N_S_soc_S_timers_40014800
#define DT_N_NODELABEL_timers11     DT_N_S_soc_S_timers_40014800

/* Special property macros: */
#define DT_N_S_soc_S_timers_40014800_REG_NUM 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_ADDRESS 1073825792 /* 0x40014800 */
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014800_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_P_label "TIMERS_11"
#define DT_N_S_soc_S_timers_40014800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, label, 0) \
	fn(DT_N_S_soc_S_timers_40014800, label, 1) \
	fn(DT_N_S_soc_S_timers_40014800, label, 2) \
	fn(DT_N_S_soc_S_timers_40014800, label, 3) \
	fn(DT_N_S_soc_S_timers_40014800, label, 4) \
	fn(DT_N_S_soc_S_timers_40014800, label, 5) \
	fn(DT_N_S_soc_S_timers_40014800, label, 6) \
	fn(DT_N_S_soc_S_timers_40014800, label, 7) \
	fn(DT_N_S_soc_S_timers_40014800, label, 8)
#define DT_N_S_soc_S_timers_40014800_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg {1073825792 /* 0x40014800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0 1073825792
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, reg, 0) \
	fn(DT_N_S_soc_S_timers_40014800, reg, 1)
#define DT_N_S_soc_S_timers_40014800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus 3
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, clocks, 0)
#define DT_N_S_soc_S_timers_40014800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts {26 /* 0x1a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40014800, interrupts, 1)
#define DT_N_S_soc_S_timers_40014800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, status, 0) \
	fn(DT_N_S_soc_S_timers_40014800, status, 1) \
	fn(DT_N_S_soc_S_timers_40014800, status, 2) \
	fn(DT_N_S_soc_S_timers_40014800, status, 3) \
	fn(DT_N_S_soc_S_timers_40014800, status, 4) \
	fn(DT_N_S_soc_S_timers_40014800, status, 5) \
	fn(DT_N_S_soc_S_timers_40014800, status, 6) \
	fn(DT_N_S_soc_S_timers_40014800, status, 7)
#define DT_N_S_soc_S_timers_40014800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PATH "/soc/timers@40014800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014800) identifier: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PARENT DT_N_S_soc_S_timers_40014800
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_ORD 354

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REQUIRES_ORDS \
	353, /* /soc/timers@40014800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_EXISTS 1
#define DT_N_INST_7_st_stm32_pwm DT_N_S_soc_S_timers_40014800_S_pwm

/* Special property macros: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_STATUS_disabled 1

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label "PWM_11"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 4) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 5)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_st_prescaler 10000
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_40023c00
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_rng_50060800
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_serial_40011000
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_serial_40011000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_ccm                     DT_N_S_memory_10000000
#define DT_CHOSEN_zephyr_ccm_EXISTS              1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_olimex_stm32_e407 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_systick 1
#define DT_COMPAT_HAS_OKAY_st_stm32_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32f4_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rcc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_exti 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pinctrl 1
#define DT_COMPAT_HAS_OKAY_st_stm32_gpio 1
#define DT_COMPAT_HAS_OKAY_st_stm32_usart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_uart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rtc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_otghs 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rng 1
#define DT_COMPAT_HAS_OKAY_st_stm32_ethernet 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4f 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_st_stm32_hse_clock 1
#define DT_COMPAT_HAS_OKAY_st_stm32f4_pll_clock 1
#define DT_COMPAT_HAS_OKAY_usb_nop_xceiv 1
#define DT_COMPAT_HAS_OKAY_st_stm32_ccm 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_olimex_stm32_e407_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_systick_NUM_OKAY 1
#define DT_N_INST_st_stm32_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32f4_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_st_stm32_rcc_NUM_OKAY 1
#define DT_N_INST_st_stm32_exti_NUM_OKAY 1
#define DT_N_INST_st_stm32_pinctrl_NUM_OKAY 1
#define DT_N_INST_st_stm32_gpio_NUM_OKAY 9
#define DT_N_INST_st_stm32_usart_NUM_OKAY 3
#define DT_N_INST_st_stm32_uart_NUM_OKAY 3
#define DT_N_INST_st_stm32_rtc_NUM_OKAY 1
#define DT_N_INST_st_stm32_otghs_NUM_OKAY 1
#define DT_N_INST_st_stm32_rng_NUM_OKAY 1
#define DT_N_INST_st_stm32_ethernet_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4f_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_st_stm32_hse_clock_NUM_OKAY 1
#define DT_N_INST_st_stm32f4_pll_clock_NUM_OKAY 1
#define DT_N_INST_usb_nop_xceiv_NUM_OKAY 2
#define DT_N_INST_st_stm32_ccm_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_FOREACH_OKAY_INST_olimex_stm32_e407(fn) fn(0)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_arm_armv7m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32f4_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_rcc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_exti(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_gpio(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7) fn(8)
#define DT_FOREACH_OKAY_INST_st_stm32_usart(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_st_stm32_uart(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_st_stm32_rtc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_otghs(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_rng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_ethernet(fn) fn(0)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32_hse_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_st_stm32f4_pll_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_usb_nop_xceiv(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_st_stm32_ccm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)

/*
 * Bus information for status "okay" nodes of each compatible
 */
